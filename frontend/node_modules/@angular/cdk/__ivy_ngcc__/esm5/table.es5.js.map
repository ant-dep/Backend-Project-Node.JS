{"version":3,"file":"table.es5.js","sources":["../../../src/cdk/table/can-stick.ts","../../../src/cdk/table/cell.ts","../../../src/cdk/table/row.ts","../../../src/cdk/table/table-errors.ts","../../../src/cdk/table/sticky-styler.ts","../../../src/cdk/table/table.ts","../../../src/cdk/table/table-module.ts"],"names":["tslib_1.__extends","observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/** @docs-private */\nexport type Constructor<T> = new(...args: any[]) => T;\n\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nexport interface CanStick {\n  /** Whether sticky positioning should be applied. */\n  sticky: boolean;\n\n  /** Whether the sticky input has changed since it was last checked. */\n  _hasStickyChanged: boolean;\n\n  /** Whether the sticky value has changed since this was last called. */\n  hasStickyChanged(): boolean;\n\n  /** Resets the dirty check for cases where the sticky state has been used without checking. */\n  resetStickyChanged(): void;\n}\n\n/** @docs-private */\nexport type CanStickCtor = Constructor<CanStick>;\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nexport function mixinHasStickyInput<T extends Constructor<{}>>(base: T): CanStickCtor & T {\n  return class extends base {\n    /** Whether sticky positioning should be applied. */\n    get sticky(): boolean { return this._sticky; }\n    set sticky(v: boolean) {\n      const prevValue = this._sticky;\n      this._sticky = coerceBooleanProperty(v);\n      this._hasStickyChanged = prevValue !== this._sticky;\n    }\n    _sticky: boolean = false;\n\n    /** Whether the sticky input has changed since it was last checked. */\n    _hasStickyChanged: boolean = false;\n\n    /** Whether the sticky value has changed since this was last called. */\n    hasStickyChanged(): boolean {\n      const hasStickyChanged = this._hasStickyChanged;\n      this._hasStickyChanged = false;\n      return hasStickyChanged;\n    }\n\n    /** Resets the dirty check for cases where the sticky state has been used without checking. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ContentChild, Directive, ElementRef, Input, TemplateRef} from '@angular/core';\nimport {CanStick, CanStickCtor, mixinHasStickyInput} from './can-stick';\n\n\n/** Base interface for a cell definition. Captures a column's cell template definition. */\nexport interface CellDef {\n  template: TemplateRef<any>;\n}\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({selector: '[cdkCellDef]'})\nexport class CdkCellDef implements CellDef {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({selector: '[cdkHeaderCellDef]'})\nexport class CdkHeaderCellDef implements CellDef {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({selector: '[cdkFooterCellDef]'})\nexport class CdkFooterCellDef implements CellDef {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nexport class CdkColumnDefBase {}\nexport const _CdkColumnDefBase: CanStickCtor & typeof CdkColumnDefBase =\n    mixinHasStickyInput(CdkColumnDefBase);\n\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[cdkColumnDef]',\n  inputs: ['sticky'],\n  providers: [{\n    provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n    useExisting: CdkColumnDef\n  }],\n})\nexport class CdkColumnDef extends _CdkColumnDefBase implements CanStick {\n  /** Unique name for this column. */\n  @Input('cdkColumnDef')\n  get name(): string { return this._name; }\n  set name(name: string) {\n    // If the directive is set without a name (updated programatically), then this setter will\n    // trigger with an empty string and should not overwrite the programatically set value.\n    if (!name) { return; }\n\n    this._name = name;\n    this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n  }\n  _name: string;\n\n  /**\n   * Whether this column should be sticky positioned on the end of the row. Should make sure\n   * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n   * has been changed.\n   */\n  @Input('stickyEnd')\n  get stickyEnd(): boolean { return this._stickyEnd; }\n  set stickyEnd(v: boolean) {\n    const prevValue = this._stickyEnd;\n    this._stickyEnd = coerceBooleanProperty(v);\n    this._hasStickyChanged = prevValue !== this._stickyEnd;\n  }\n  _stickyEnd: boolean = false;\n\n  /** @docs-private */\n  @ContentChild(CdkCellDef) cell: CdkCellDef;\n\n  /** @docs-private */\n  @ContentChild(CdkHeaderCellDef) headerCell: CdkHeaderCellDef;\n\n  /** @docs-private */\n  @ContentChild(CdkFooterCellDef) footerCell: CdkFooterCellDef;\n\n  /**\n   * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n   * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n   * do not match are replaced by the '-' character.\n   */\n  cssClassFriendlyName: string;\n}\n\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nexport class BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n    elementRef.nativeElement.classList.add(columnClassName);\n  }\n}\n\n/** Header cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'cdk-header-cell, th[cdk-header-cell]',\n  host: {\n    'class': 'cdk-header-cell',\n    'role': 'columnheader',\n  },\n})\nexport class CdkHeaderCell extends BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n  }\n}\n\n/** Footer cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n  host: {\n    'class': 'cdk-footer-cell',\n    'role': 'gridcell',\n  },\n})\nexport class CdkFooterCell extends BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n  }\n}\n\n/** Cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'cdk-cell, td[cdk-cell]',\n  host: {\n    'class': 'cdk-cell',\n    'role': 'gridcell',\n  },\n})\nexport class CdkCell extends BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanStick, CanStickCtor, mixinHasStickyInput} from './can-stick';\nimport {CdkCellDef, CdkColumnDef} from './cell';\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nexport const CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nexport abstract class BaseRowDef implements OnChanges {\n  /** The columns to be displayed on this row. */\n  columns: Iterable<string>;\n\n  /** Differ used to check if any changes were made to the columns. */\n  protected _columnsDiffer: IterableDiffer<any>;\n\n  constructor(/** @docs-private */ public template: TemplateRef<any>,\n              protected _differs: IterableDiffers) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n    // of the columns property or an empty array if none is provided.\n    if (!this._columnsDiffer) {\n      const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n      this._columnsDiffer = this._differs.find(columns).create();\n      this._columnsDiffer.diff(columns);\n    }\n  }\n\n  /**\n   * Returns the difference between the current columns and the columns from the last diff, or null\n   * if there is no difference.\n   */\n  getColumnsDiff(): IterableChanges<any> | null {\n    return this._columnsDiffer.diff(this.columns);\n  }\n\n  /** Gets this row def's relevant cell template from the provided column def. */\n  extractCellTemplate(column: CdkColumnDef): TemplateRef<any> {\n    if (this instanceof CdkHeaderRowDef) {\n      return column.headerCell.template;\n    } if (this instanceof CdkFooterRowDef) {\n      return column.footerCell.template;\n    } else {\n      return column.cell.template;\n    }\n  }\n}\n\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nexport class CdkHeaderRowDefBase extends BaseRowDef {}\nexport const _CdkHeaderRowDefBase: CanStickCtor & typeof CdkHeaderRowDefBase =\n    mixinHasStickyInput(CdkHeaderRowDefBase);\n\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[cdkHeaderRowDef]',\n  inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n})\nexport class CdkHeaderRowDef extends _CdkHeaderRowDefBase implements CanStick, OnChanges {\n  constructor(template: TemplateRef<any>, _differs: IterableDiffers) {\n    super(template, _differs);\n  }\n\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n  }\n}\n\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nexport class CdkFooterRowDefBase extends BaseRowDef {}\nexport const _CdkFooterRowDefBase: CanStickCtor & typeof CdkFooterRowDefBase =\n    mixinHasStickyInput(CdkFooterRowDefBase);\n\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n@Directive({\n  selector: '[cdkFooterRowDef]',\n  inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n})\nexport class CdkFooterRowDef extends _CdkFooterRowDefBase implements CanStick, OnChanges {\n  constructor(template: TemplateRef<any>, _differs: IterableDiffers) {\n    super(template, _differs);\n  }\n\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n  }\n}\n\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[cdkRowDef]',\n  inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n})\nexport class CdkRowDef<T> extends BaseRowDef {\n  /**\n   * Function that should return true if this row template should be used for the provided index\n   * and row data. If left undefined, this row will be considered the default row template to use\n   * when no other when functions return true for the data.\n   * For every row, there must be at least one when function that passes or an undefined to default.\n   */\n  when: (index: number, rowData: T) => boolean;\n\n  // TODO(andrewseguin): Add an input for providing a switch function to determine\n  //   if this template should be used.\n  constructor(template: TemplateRef<any>, _differs: IterableDiffers) {\n    super(template, _differs);\n  }\n}\n\n/** Context provided to the row cells when `multiTemplateDataRows` is false */\nexport interface CdkCellOutletRowContext<T> {\n  /** Data for the row that this cell is located within. */\n  $implicit?: T;\n\n  /** Index of the data object in the provided data array. */\n  index?: number;\n\n  /** Length of the number of total rows. */\n  count?: number;\n\n  /** True if this cell is contained in the first row. */\n  first?: boolean;\n\n  /** True if this cell is contained in the last row. */\n  last?: boolean;\n\n  /** True if this cell is contained in a row with an even-numbered index. */\n  even?: boolean;\n\n  /** True if this cell is contained in a row with an odd-numbered index. */\n  odd?: boolean;\n}\n\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n */\nexport interface CdkCellOutletMultiRowContext<T> {\n  /** Data for the row that this cell is located within. */\n  $implicit?: T;\n\n  /** Index of the data object in the provided data array. */\n  dataIndex?: number;\n\n  /** Index location of the rendered row that this cell is located within. */\n  renderIndex?: number;\n\n  /** Length of the number of total rows. */\n  count?: number;\n\n  /** True if this cell is contained in the first row. */\n  first?: boolean;\n\n  /** True if this cell is contained in the last row. */\n  last?: boolean;\n\n  /** True if this cell is contained in a row with an even-numbered index. */\n  even?: boolean;\n\n  /** True if this cell is contained in a row with an odd-numbered index. */\n  odd?: boolean;\n}\n\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\n@Directive({selector: '[cdkCellOutlet]'})\nexport class CdkCellOutlet implements OnDestroy {\n  /** The ordered list of cells to render within this outlet's view container */\n  cells: CdkCellDef[];\n\n  /** The data context to be provided to each cell */\n  context: any;\n\n  /**\n   * Static property containing the latest constructed instance of this class.\n   * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n   * createEmbeddedView. After one of these components are created, this property will provide\n   * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n   * construct the cells with the provided context.\n   */\n  static mostRecentCellOutlet: CdkCellOutlet | null = null;\n\n  constructor(public _viewContainer: ViewContainerRef) {\n    CdkCellOutlet.mostRecentCellOutlet = this;\n  }\n\n  ngOnDestroy() {\n    // If this was the last outlet being rendered in the view, remove the reference\n    // from the static property after it has been destroyed to avoid leaking memory.\n    if (CdkCellOutlet.mostRecentCellOutlet === this) {\n      CdkCellOutlet.mostRecentCellOutlet = null;\n    }\n  }\n}\n\n/** Header template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-header-row, tr[cdk-header-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'cdk-header-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CdkHeaderRow { }\n\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-footer-row, tr[cdk-footer-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'cdk-footer-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CdkFooterRow { }\n\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-row, tr[cdk-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'cdk-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CdkRow { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nexport function getTableUnknownColumnError(id: string) {\n  return Error(`Could not find column with id \"${id}\".`);\n}\n\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nexport function getTableDuplicateColumnNameError(name: string) {\n  return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nexport function getTableMultipleDefaultRowDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nexport function getTableMissingMatchingRowDefError(data: any) {\n  return Error(`Could not find a matching row definition for the` +\n      `provided row data: ${JSON.stringify(data)}`);\n}\n\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nexport function getTableMissingRowDefsError() {\n  return Error('Missing definitions for header, footer, and row; ' +\n      'cannot determine which columns should be rendered.');\n}\n\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nexport function getTableUnknownDataSourceError() {\n  return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Directions that can be used when setting sticky positioning.\n * @docs-private\n */\nimport {Direction} from '@angular/cdk/bidi';\n\nexport type StickyDirection = 'top' | 'bottom' | 'left' | 'right';\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nexport const STICKY_DIRECTIONS: StickyDirection[] = ['top', 'bottom', 'left', 'right'];\n\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nexport class StickyStyler {\n  /**\n   * @param isNativeHtmlTable Whether the sticky logic should be based on a table\n   *     that uses the native `<table>` element.\n   * @param stickCellCss The CSS class that will be applied to every row/cell that has\n   *     sticky positioning applied.\n   * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n   *     by reversing left/right positions.\n   * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n   */\n  constructor(private isNativeHtmlTable: boolean,\n              private stickCellCss: string,\n              public direction: Direction,\n              private _isBrowser = true) { }\n\n  /**\n   * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n   * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n   * @param rows The list of rows that should be cleared from sticking in the provided directions\n   * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n   */\n  clearStickyPositioning(rows: HTMLElement[], stickyDirections: StickyDirection[]) {\n    for (const row of rows) {\n      // If the row isn't an element (e.g. if it's an `ng-container`),\n      // it won't have inline styles or `children` so we skip it.\n      if (row.nodeType !== row.ELEMENT_NODE) {\n        continue;\n      }\n\n      this._removeStickyStyle(row, stickyDirections);\n\n      for (let i = 0; i < row.children.length; i++) {\n        const cell = row.children[i] as HTMLElement;\n        this._removeStickyStyle(cell, stickyDirections);\n      }\n    }\n  }\n\n  /**\n   * Applies sticky left and right positions to the cells of each row according to the sticky\n   * states of the rendered column definitions.\n   * @param rows The rows that should have its set of cells stuck according to the sticky states.\n   * @param stickyStartStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the start of the row.\n   * @param stickyEndStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the end of the row.\n   */\n  updateStickyColumns(\n      rows: HTMLElement[], stickyStartStates: boolean[], stickyEndStates: boolean[]) {\n    const hasStickyColumns =\n        stickyStartStates.some(state => state) || stickyEndStates.some(state => state);\n    if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n      return;\n    }\n\n    const firstRow = rows[0];\n    const numCells = firstRow.children.length;\n    const cellWidths: number[] = this._getCellWidths(firstRow);\n\n    const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n    const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n    const isRtl = this.direction === 'rtl';\n\n    for (const row of rows) {\n      for (let i = 0; i < numCells; i++) {\n        const cell = row.children[i] as HTMLElement;\n        if (stickyStartStates[i]) {\n          this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n        }\n\n        if (stickyEndStates[i]) {\n          this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Applies sticky positioning to the row's cells if using the native table layout, and to the\n   * row itself otherwise.\n   * @param rowsToStick The list of rows that should be stuck according to their corresponding\n   *     sticky state and to the provided top or bottom position.\n   * @param stickyStates A list of boolean states where each state represents whether the row\n   *     should be stuck in the particular top or bottom position.\n   * @param position The position direction in which the row should be stuck if that row should be\n   *     sticky.\n   *\n   */\n  stickRows(rowsToStick: HTMLElement[], stickyStates: boolean[], position: 'top' | 'bottom') {\n    // Since we can't measure the rows on the server, we can't stick the rows properly.\n    if (!this._isBrowser) {\n      return;\n    }\n\n    // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n    // position such that the last row stuck will be \"bottom: 0px\" and so on.\n    const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n\n    let stickyHeight = 0;\n    for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n      if (!stickyStates[rowIndex]) {\n        continue;\n      }\n\n      const row = rows[rowIndex];\n      if (this.isNativeHtmlTable) {\n        for (let j = 0; j < row.children.length; j++) {\n          const cell = row.children[j] as HTMLElement;\n          this._addStickyStyle(cell, position, stickyHeight);\n        }\n      } else {\n        // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n        // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n        this._addStickyStyle(row, position, stickyHeight);\n      }\n\n      if (rowIndex === rows.length - 1) {\n        // prevent unnecessary reflow from getBoundingClientRect()\n        return;\n      }\n      stickyHeight += row.getBoundingClientRect().height;\n    }\n  }\n\n  /**\n   * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n   * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n   * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n   * the tfoot element.\n   */\n  updateStickyFooterContainer(tableElement: Element, stickyStates: boolean[]) {\n    if (!this.isNativeHtmlTable) {\n      return;\n    }\n\n    const tfoot = tableElement.querySelector('tfoot')!;\n    if (stickyStates.some(state => !state)) {\n      this._removeStickyStyle(tfoot, ['bottom']);\n    } else {\n      this._addStickyStyle(tfoot, 'bottom', 0);\n    }\n  }\n\n  /**\n   * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n   * the zIndex, removing each of the provided sticky directions, and removing the\n   * sticky position if there are no more directions.\n   */\n  _removeStickyStyle(element: HTMLElement, stickyDirections: StickyDirection[]) {\n    for (const dir of stickyDirections) {\n      element.style[dir] = '';\n    }\n    element.style.zIndex = this._getCalculatedZIndex(element);\n\n    // If the element no longer has any more sticky directions, remove sticky positioning and\n    // the sticky CSS class.\n    const hasDirection = STICKY_DIRECTIONS.some(dir => !!element.style[dir]);\n    if (!hasDirection) {\n      element.style.position = '';\n      element.classList.remove(this.stickCellCss);\n    }\n  }\n\n  /**\n   * Adds the sticky styling to the element by adding the sticky style class, changing position\n   * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n   * direction and value.\n   */\n  _addStickyStyle(element: HTMLElement, dir: StickyDirection, dirValue: number) {\n    element.classList.add(this.stickCellCss);\n    element.style[dir] = `${dirValue}px`;\n    element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n    element.style.zIndex = this._getCalculatedZIndex(element);\n  }\n\n  /**\n   * Calculate what the z-index should be for the element, depending on what directions (top,\n   * bottom, left, right) have been set. It should be true that elements with a top direction\n   * should have the highest index since these are elements like a table header. If any of those\n   * elements are also sticky in another direction, then they should appear above other elements\n   * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n   * (e.g. footer rows) should then be next in the ordering such that they are below the header\n   * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n   * should minimally increment so that they are above non-sticky elements but below top and bottom\n   * elements.\n   */\n  _getCalculatedZIndex(element: HTMLElement): string {\n    const zIndexIncrements = {\n      top: 100,\n      bottom: 10,\n      left: 1,\n      right: 1,\n    };\n\n    let zIndex = 0;\n    for (const dir of STICKY_DIRECTIONS) {\n      if (element.style[dir]) {\n        zIndex += zIndexIncrements[dir];\n      }\n    }\n\n    return zIndex ? `${zIndex}` : '';\n  }\n\n  /** Gets the widths for each cell in the provided row. */\n  _getCellWidths(row: HTMLElement): number[] {\n    const cellWidths: number[] = [];\n    const firstRowCells = row.children;\n    for (let i = 0; i < firstRowCells.length; i++) {\n      let cell: HTMLElement = firstRowCells[i] as HTMLElement;\n      cellWidths.push(cell.getBoundingClientRect().width);\n    }\n\n    return cellWidths;\n  }\n\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyStartColumnPositions(widths: number[], stickyStates: boolean[]): number[] {\n    const positions: number[] = [];\n    let nextPosition = 0;\n\n    for (let i = 0; i < widths.length; i++) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n\n    return positions;\n  }\n\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyEndColumnPositions(widths: number[], stickyStates: boolean[]): number[] {\n    const positions: number[] = [];\n    let nextPosition = 0;\n\n    for (let i = widths.length; i > 0; i--) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n\n    return positions;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CollectionViewer, DataSource} from '@angular/cdk/collections';\nimport {\n  AfterContentChecked,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Input,\n  isDevMode,\n  IterableChangeRecord,\n  IterableDiffer,\n  IterableDiffers,\n  OnDestroy,\n  OnInit,\n  Optional,\n  QueryList,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, Observable, of as observableOf, Subject, Subscription} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkColumnDef} from './cell';\nimport {\n  BaseRowDef,\n  CdkCellOutlet,\n  CdkCellOutletMultiRowContext,\n  CdkCellOutletRowContext,\n  CdkFooterRowDef,\n  CdkHeaderRowDef,\n  CdkRowDef\n} from './row';\nimport {\n  getTableDuplicateColumnNameError,\n  getTableMissingMatchingRowDefError,\n  getTableMissingRowDefsError,\n  getTableMultipleDefaultRowDefsError,\n  getTableUnknownColumnError,\n  getTableUnknownDataSourceError\n} from './table-errors';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {StickyStyler} from './sticky-styler';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\n\n/** Interface used to provide an outlet for rows to be inserted into. */\nexport interface RowOutlet {\n  viewContainer: ViewContainerRef;\n}\n\n/**\n * Union of the types that can be set as the data source for a `CdkTable`.\n * @docs-private\n */\ntype CdkTableDataSourceInput<T> = DataSource<T> | Observable<ReadonlyArray<T> | T[]> |\n                                  ReadonlyArray<T> | T[];\n\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\n@Directive({selector: '[rowOutlet]'})\nexport class DataRowOutlet implements RowOutlet {\n  constructor(public viewContainer: ViewContainerRef,\n              public elementRef: ElementRef) { }\n}\n\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\n@Directive({selector: '[headerRowOutlet]'})\nexport class HeaderRowOutlet implements RowOutlet {\n  constructor(public viewContainer: ViewContainerRef,\n              public elementRef: ElementRef) { }\n}\n\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\n@Directive({selector: '[footerRowOutlet]'})\nexport class FooterRowOutlet implements RowOutlet {\n  constructor(public viewContainer: ViewContainerRef,\n              public elementRef: ElementRef) { }\n}\n\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nexport const CDK_TABLE_TEMPLATE = `\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>`;\n\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * @docs-private\n */\nexport interface RowContext<T>\n    extends CdkCellOutletMultiRowContext<T>, CdkCellOutletRowContext<T> { }\n\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nabstract class RowViewRef<T> extends EmbeddedViewRef<RowContext<T>> { }\n\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * @docs-private\n */\nexport interface RenderRow<T> {\n  data: T;\n  dataIndex: number;\n  rowDef: CdkRowDef<T>;\n}\n\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-table, table[cdk-table]',\n  exportAs: 'cdkTable',\n  template: CDK_TABLE_TEMPLATE,\n  host: {\n    'class': 'cdk-table',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkTable<T> implements AfterContentChecked, CollectionViewer, OnDestroy, OnInit {\n  private _document: Document;\n\n  /** Latest data provided by the data source. */\n  protected _data: T[] | ReadonlyArray<T>;\n\n  /** Subject that emits when the component has been destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  /** List of the rendered rows as identified by their `RenderRow` object. */\n  private _renderRows: RenderRow<T>[];\n\n  /** Subscription that listens for the data provided by the data source. */\n  private _renderChangeSubscription: Subscription | null;\n\n  /**\n   * Map of all the user's defined columns (header, data, and footer cell template) identified by\n   * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n   * any custom column definitions added to `_customColumnDefs`.\n   */\n  private _columnDefsByName = new Map<string,  CdkColumnDef>();\n\n  /**\n   * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n   * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n   */\n  private _rowDefs: CdkRowDef<T>[];\n\n  /**\n   * Set of all header row definitions that can be used by this table. Populated by the rows\n   * gathered by using `ContentChildren` as well as any custom row definitions added to\n   * `_customHeaderRowDefs`.\n   */\n  private _headerRowDefs: CdkHeaderRowDef[];\n\n  /**\n   * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n   * using `ContentChildren` as well as any custom row definitions added to\n   * `_customFooterRowDefs`.\n   */\n  private _footerRowDefs: CdkFooterRowDef[];\n\n  /** Differ used to find the changes in the data provided by the data source. */\n  private _dataDiffer: IterableDiffer<RenderRow<T>>;\n\n  /** Stores the row definition that does not have a when predicate. */\n  private _defaultRowDef: CdkRowDef<T> | null;\n\n  /**\n   * Column definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n   * column definitions as *it's* content child.\n   */\n  private _customColumnDefs = new Set<CdkColumnDef>();\n\n  /**\n   * Data row definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n   * built-in data rows as *it's* content child.\n   */\n  private _customRowDefs = new Set<CdkRowDef<T>>();\n\n  /**\n   * Header row definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n   * built-in header rows as *it's* content child.\n   */\n  private _customHeaderRowDefs = new Set<CdkHeaderRowDef>();\n\n  /**\n   * Footer row definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n   * built-in footer row as *it's* content child.\n   */\n  private _customFooterRowDefs = new Set<CdkFooterRowDef>();\n\n  /**\n   * Whether the header row definition has been changed. Triggers an update to the header row after\n   * content is checked. Initialized as true so that the table renders the initial set of rows.\n   */\n  private _headerRowDefChanged = true;\n\n  /**\n   * Whether the footer row definition has been changed. Triggers an update to the footer row after\n   * content is checked. Initialized as true so that the table renders the initial set of rows.\n   */\n  private _footerRowDefChanged = true;\n\n  /**\n   * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n   * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n   * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n   * and row template matches, which allows the `IterableDiffer` to check rows by reference\n   * and understand which rows are added/moved/removed.\n   *\n   * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n   * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n   * contains an array of created pairs. The array is necessary to handle cases where the data\n   * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n   * stored.\n   */\n  private _cachedRenderRowsMap = new Map<T, WeakMap<CdkRowDef<T>, RenderRow<T>[]>>();\n\n  /** Whether the table is applied to a native `<table>`. */\n  private _isNativeHtmlTable: boolean;\n\n  /**\n   * Utility class that is responsible for applying the appropriate sticky positioning styles to\n   * the table's rows and cells.\n   */\n  private _stickyStyler: StickyStyler;\n\n  /**\n   * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n   * table subclasses.\n   */\n  protected stickyCssClass: string = 'cdk-table-sticky';\n\n  /**\n   * Tracking function that will be used to check the differences in data changes. Used similarly\n   * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n   * relative to the function to know if a row should be added/removed/moved.\n   * Accepts a function that takes two parameters, `index` and `item`.\n   */\n  @Input()\n  get trackBy(): TrackByFunction<T> { return this._trackByFn; }\n  set trackBy(fn: TrackByFunction<T>) {\n    if (isDevMode() &&\n        fn != null && typeof fn !== 'function' &&\n        <any>console && <any>console.warn) {\n        console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n    this._trackByFn = fn;\n  }\n  private _trackByFn: TrackByFunction<T>;\n\n  /**\n   * The table's source of data, which can be provided in three ways (in order of complexity):\n   *   - Simple data array (each object represents one table row)\n   *   - Stream that emits a data array each time the array changes\n   *   - `DataSource` object that implements the connect/disconnect interface.\n   *\n   * If a data array is provided, the table must be notified when the array's objects are\n   * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n   * render the diff since the last table render. If the data array reference is changed, the table\n   * will automatically trigger an update to the rows.\n   *\n   * When providing an Observable stream, the table will trigger an update automatically when the\n   * stream emits a new array of data.\n   *\n   * Finally, when providing a `DataSource` object, the table will use the Observable stream\n   * provided by the connect function and trigger updates when that stream emits new data array\n   * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n   * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n   * subscriptions registered during the connect process).\n   */\n  @Input()\n  get dataSource(): CdkTableDataSourceInput<T> { return this._dataSource; }\n  set dataSource(dataSource: CdkTableDataSourceInput<T>) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\n  private _dataSource: CdkTableDataSourceInput<T>;\n\n  /**\n   * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n   * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n   * dataobject will render the first row that evaluates its when predicate to true, in the order\n   * defined in the table, or otherwise the default row which does not have a when predicate.\n   */\n  @Input()\n  get multiTemplateDataRows(): boolean { return this._multiTemplateDataRows; }\n  set multiTemplateDataRows(v: boolean) {\n    this._multiTemplateDataRows = coerceBooleanProperty(v);\n    if (this._rowOutlet.viewContainer.length) {\n      this._forceRenderDataRows();\n    }\n  }\n  _multiTemplateDataRows: boolean = false;\n\n  // TODO(andrewseguin): Remove max value as the end index\n  //   and instead calculate the view on init and scroll.\n  /**\n   * Stream containing the latest information on what rows are being displayed on screen.\n   * Can be used by the data source to as a heuristic of what data should be provided.\n   */\n  viewChange: BehaviorSubject<{start: number, end: number}> =\n      new BehaviorSubject<{start: number, end: number}>({start: 0, end: Number.MAX_VALUE});\n\n  // Outlets in the table's template where the header, data rows, and footer will be inserted.\n  @ViewChild(DataRowOutlet) _rowOutlet: DataRowOutlet;\n  @ViewChild(HeaderRowOutlet) _headerRowOutlet: HeaderRowOutlet;\n  @ViewChild(FooterRowOutlet) _footerRowOutlet: FooterRowOutlet;\n\n  /**\n   * The column definitions provided by the user that contain what the header, data, and footer\n   * cells should render for each column.\n   */\n  @ContentChildren(CdkColumnDef) _contentColumnDefs: QueryList<CdkColumnDef>;\n\n  /** Set of data row definitions that were provided to the table as content children. */\n  @ContentChildren(CdkRowDef) _contentRowDefs: QueryList<CdkRowDef<T>>;\n\n  /** Set of header row definitions that were provided to the table as content children. */\n  @ContentChildren(CdkHeaderRowDef) _contentHeaderRowDefs: QueryList<CdkHeaderRowDef>;\n\n  /** Set of footer row definitions that were provided to the table as content children. */\n  @ContentChildren(CdkFooterRowDef) _contentFooterRowDefs: QueryList<CdkFooterRowDef>;\n\n  constructor(protected readonly _differs: IterableDiffers,\n              protected readonly _changeDetectorRef: ChangeDetectorRef,\n              protected readonly _elementRef: ElementRef,\n              @Attribute('role') role: string,\n              @Optional() protected readonly _dir: Directionality,\n              /**\n               * @deprecated\n               * @breaking-change 8.0.0 `_document` and `_platform` to\n               *    be made into a required parameters.\n               */\n              @Inject(DOCUMENT) _document?: any,\n              private _platform?: Platform) {\n    if (!role) {\n      this._elementRef.nativeElement.setAttribute('role', 'grid');\n    }\n\n    this._document = _document;\n    this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n  }\n\n  ngOnInit() {\n    this._setupStickyStyler();\n\n    if (this._isNativeHtmlTable) {\n      this._applyNativeTableSections();\n    }\n\n    // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n    // the user has provided a custom trackBy, return the result of that function as evaluated\n    // with the values of the `RenderRow`'s data and index.\n    this._dataDiffer = this._differs.find([]).create((_i: number, dataRow: RenderRow<T>) => {\n      return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n    });\n  }\n\n  ngAfterContentChecked() {\n    // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n    this._cacheRowDefs();\n    this._cacheColumnDefs();\n\n    // Make sure that the user has at least added header, footer, or data row def.\n    if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n      throw getTableMissingRowDefsError();\n    }\n\n    // Render updates if the list of columns have been changed for the header, row, or footer defs.\n    this._renderUpdatedColumns();\n\n    // If the header row definition has been changed, trigger a render to the header row.\n    if (this._headerRowDefChanged) {\n      this._forceRenderHeaderRows();\n      this._headerRowDefChanged = false;\n    }\n\n    // If the footer row definition has been changed, trigger a render to the footer row.\n    if (this._footerRowDefChanged) {\n      this._forceRenderFooterRows();\n      this._footerRowDefChanged = false;\n    }\n\n    // If there is a data source and row definitions, connect to the data source unless a\n    // connection has already been made.\n    if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n      this._observeRenderChanges();\n    }\n\n    this._checkStickyStates();\n  }\n\n  ngOnDestroy() {\n    this._rowOutlet.viewContainer.clear();\n    this._headerRowOutlet.viewContainer.clear();\n    this._footerRowOutlet.viewContainer.clear();\n\n    this._cachedRenderRowsMap.clear();\n\n    this._onDestroy.next();\n    this._onDestroy.complete();\n\n    if (this.dataSource instanceof DataSource) {\n      this.dataSource.disconnect(this);\n    }\n  }\n\n  /**\n   * Renders rows based on the table's latest set of data, which was either provided directly as an\n   * input or retrieved through an Observable stream (directly or from a DataSource).\n   * Checks for differences in the data since the last diff to perform only the necessary\n   * changes (add/remove/move rows).\n   *\n   * If the table's data source is a DataSource or Observable, this will be invoked automatically\n   * each time the provided Observable stream emits a new data array. Otherwise if your data is\n   * an array, this function will need to be called to render any changes.\n   */\n  renderRows() {\n    this._renderRows = this._getAllRenderRows();\n    const changes = this._dataDiffer.diff(this._renderRows);\n    if (!changes) { return; }\n\n    const viewContainer = this._rowOutlet.viewContainer;\n\n    changes.forEachOperation((record: IterableChangeRecord<RenderRow<T>>,\n                              prevIndex: number | null,\n                              currentIndex: number | null) => {\n      if (record.previousIndex == null) {\n        this._insertRow(record.item, currentIndex!);\n      } else if (currentIndex == null) {\n        viewContainer.remove(prevIndex!);\n      } else {\n        const view = <RowViewRef<T>>viewContainer.get(prevIndex!);\n        viewContainer.move(view!, currentIndex);\n      }\n    });\n\n    // Update the meta context of a row's context data (index, count, first, last, ...)\n    this._updateRowIndexContext();\n\n    // Update rows that did not get added/removed/moved but may have had their identity changed,\n    // e.g. if trackBy matched data on some property but the actual data reference changed.\n    changes.forEachIdentityChange((record: IterableChangeRecord<RenderRow<T>>) => {\n      const rowView = <RowViewRef<T>>viewContainer.get(record.currentIndex!);\n      rowView.context.$implicit = record.item.data;\n    });\n\n    this.updateStickyColumnStyles();\n  }\n\n  /**\n   * Sets the header row definition to be used. Overrides the header row definition gathered by\n   * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n   * table's content is checked.\n   * @docs-private\n   * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n   * @breaking-change 8.0.0\n   */\n  setHeaderRowDef(headerRowDef: CdkHeaderRowDef) {\n    this._customHeaderRowDefs = new Set([headerRowDef]);\n    this._headerRowDefChanged = true;\n  }\n\n  /**\n   * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n   * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n   * table's content is checked.\n   * @docs-private\n   * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n   * @breaking-change 8.0.0\n   */\n  setFooterRowDef(footerRowDef: CdkFooterRowDef) {\n    this._customFooterRowDefs = new Set([footerRowDef]);\n    this._footerRowDefChanged = true;\n  }\n\n  /** Adds a column definition that was not included as part of the content children. */\n  addColumnDef(columnDef: CdkColumnDef) {\n    this._customColumnDefs.add(columnDef);\n  }\n\n  /** Removes a column definition that was not included as part of the content children. */\n  removeColumnDef(columnDef: CdkColumnDef) {\n    this._customColumnDefs.delete(columnDef);\n  }\n\n  /** Adds a row definition that was not included as part of the content children. */\n  addRowDef(rowDef: CdkRowDef<T>) {\n    this._customRowDefs.add(rowDef);\n  }\n\n  /** Removes a row definition that was not included as part of the content children. */\n  removeRowDef(rowDef: CdkRowDef<T>) {\n    this._customRowDefs.delete(rowDef);\n  }\n\n  /** Adds a header row definition that was not included as part of the content children. */\n  addHeaderRowDef(headerRowDef: CdkHeaderRowDef) {\n    this._customHeaderRowDefs.add(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n\n  /** Removes a header row definition that was not included as part of the content children. */\n  removeHeaderRowDef(headerRowDef: CdkHeaderRowDef) {\n    this._customHeaderRowDefs.delete(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n\n  /** Adds a footer row definition that was not included as part of the content children. */\n  addFooterRowDef(footerRowDef: CdkFooterRowDef) {\n    this._customFooterRowDefs.add(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n\n  /** Removes a footer row definition that was not included as part of the content children. */\n  removeFooterRowDef(footerRowDef: CdkFooterRowDef) {\n    this._customFooterRowDefs.delete(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n\n  /**\n   * Updates the header sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n   * automatically called when the header row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyHeaderRowStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n\n    const stickyStates = this._headerRowDefs.map(def => def.sticky);\n    this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._headerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n\n  /**\n   * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n   * automatically called when the footer row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyFooterRowStyles() {\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n    this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n\n    const stickyStates = this._footerRowDefs.map(def => def.sticky);\n    this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n    this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._footerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n\n  /**\n   * Updates the column sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the left and right. Then sticky styles are added for the left and right according\n   * to the column definitions for each cell in each row. This is automatically called when\n   * the data source provides a new set of data or when a column definition changes its sticky\n   * input. May be called manually for cases where the cell content changes outside of these events.\n   */\n  updateStickyColumnStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    const dataRows = this._getRenderedRows(this._rowOutlet);\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n\n    // Clear the left and right positioning from all columns in the table across all rows since\n    // sticky columns span across all table sections (header, data, footer)\n    this._stickyStyler.clearStickyPositioning(\n        [...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n\n    // Update the sticky styles for each header row depending on the def's sticky state\n    headerRows.forEach((headerRow, i) => {\n      this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n    });\n\n    // Update the sticky styles for each data row depending on its def's sticky state\n    this._rowDefs.forEach(rowDef => {\n      // Collect all the rows rendered with this row definition.\n      const rows: HTMLElement[] = [];\n      for (let i = 0; i < dataRows.length; i++) {\n        if (this._renderRows[i].rowDef === rowDef) {\n          rows.push(dataRows[i]);\n        }\n      }\n\n      this._addStickyColumnStyles(rows, rowDef);\n    });\n\n    // Update the sticky styles for each footer row depending on the def's sticky state\n    footerRows.forEach((footerRow, i) => {\n      this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n    });\n\n    // Reset the dirty state of the sticky input change since it has been used.\n    Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n  }\n\n  /**\n   * Get the list of RenderRow objects to render according to the current list of data and defined\n   * row definitions. If the previous list already contained a particular pair, it should be reused\n   * so that the differ equates their references.\n   */\n  private _getAllRenderRows(): RenderRow<T>[] {\n    const renderRows: RenderRow<T>[] = [];\n\n    // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n    // new cache while unused ones can be picked up by garbage collection.\n    const prevCachedRenderRows = this._cachedRenderRowsMap;\n    this._cachedRenderRowsMap = new Map();\n\n    // For each data object, get the list of rows that should be rendered, represented by the\n    // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n    for (let i = 0; i < this._data.length; i++) {\n      let data = this._data[i];\n      const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n\n      if (!this._cachedRenderRowsMap.has(data)) {\n        this._cachedRenderRowsMap.set(data, new WeakMap());\n      }\n\n      for (let j = 0; j < renderRowsForData.length; j++) {\n        let renderRow = renderRowsForData[j];\n\n        const cache = this._cachedRenderRowsMap.get(renderRow.data)!;\n        if (cache.has(renderRow.rowDef)) {\n          cache.get(renderRow.rowDef)!.push(renderRow);\n        } else {\n          cache.set(renderRow.rowDef, [renderRow]);\n        }\n        renderRows.push(renderRow);\n      }\n    }\n\n    return renderRows;\n  }\n\n  /**\n   * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n   * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n   * `(T, CdkRowDef)` pair.\n   */\n  private _getRenderRowsForData(\n      data: T, dataIndex: number, cache?: WeakMap<CdkRowDef<T>, RenderRow<T>[]>): RenderRow<T>[] {\n    const rowDefs = this._getRowDefs(data, dataIndex);\n\n    return rowDefs.map(rowDef => {\n      const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef)! : [];\n      if (cachedRenderRows.length) {\n        const dataRow = cachedRenderRows.shift()!;\n        dataRow.dataIndex = dataIndex;\n        return dataRow;\n      } else {\n        return {data, rowDef, dataIndex};\n      }\n    });\n  }\n\n  /** Update the map containing the content's column definitions. */\n  private _cacheColumnDefs() {\n    this._columnDefsByName.clear();\n\n    const columnDefs = mergeQueryListAndSet(this._contentColumnDefs, this._customColumnDefs);\n    columnDefs.forEach(columnDef => {\n      if (this._columnDefsByName.has(columnDef.name)) {\n        throw getTableDuplicateColumnNameError(columnDef.name);\n      }\n      this._columnDefsByName.set(columnDef.name, columnDef);\n    });\n  }\n\n  /** Update the list of all available row definitions that can be used. */\n  private _cacheRowDefs() {\n    this._headerRowDefs =\n        mergeQueryListAndSet(this._contentHeaderRowDefs, this._customHeaderRowDefs);\n    this._footerRowDefs =\n        mergeQueryListAndSet(this._contentFooterRowDefs, this._customFooterRowDefs);\n    this._rowDefs =\n        mergeQueryListAndSet(this._contentRowDefs, this._customRowDefs);\n\n    // After all row definitions are determined, find the row definition to be considered default.\n    const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n    if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n      throw getTableMultipleDefaultRowDefsError();\n    }\n    this._defaultRowDef = defaultRowDefs[0];\n  }\n\n  /**\n   * Check if the header, data, or footer rows have changed what columns they want to display or\n   * whether the sticky states have changed for the header or footer. If there is a diff, then\n   * re-render that section.\n   */\n  private _renderUpdatedColumns() {\n    const columnsDiffReducer = (acc: boolean, def: BaseRowDef) => acc || !!def.getColumnsDiff();\n\n    // Force re-render data rows if the list of column definitions have changed.\n    if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n      this._forceRenderDataRows();\n    }\n\n    // Force re-render header/footer rows if the list of column definitions have changed..\n    if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n      this._forceRenderHeaderRows();\n    }\n\n    if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n      this._forceRenderFooterRows();\n    }\n  }\n\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current\n   * render change subscription if one exists. If the data source is null, interpret this by\n   * clearing the row outlet. Otherwise start listening for new data.\n   */\n  private _switchDataSource(dataSource: CdkTableDataSourceInput<T>) {\n    this._data = [];\n\n    if (this.dataSource instanceof DataSource) {\n      this.dataSource.disconnect(this);\n    }\n\n    // Stop listening for data from the previous data source.\n    if (this._renderChangeSubscription) {\n      this._renderChangeSubscription.unsubscribe();\n      this._renderChangeSubscription = null;\n    }\n\n    if (!dataSource) {\n      if (this._dataDiffer) {\n        this._dataDiffer.diff([]);\n      }\n      this._rowOutlet.viewContainer.clear();\n    }\n\n    this._dataSource = dataSource;\n  }\n\n  /** Set up a subscription for the data provided by the data source. */\n  private _observeRenderChanges() {\n    // If no data source has been set, there is nothing to observe for changes.\n    if (!this.dataSource) { return; }\n\n    let dataStream: Observable<T[] | ReadonlyArray<T>> | undefined;\n\n    // Check if the datasource is a DataSource object by observing if it has a connect function.\n    // Cannot check this.dataSource['connect'] due to potential property renaming, nor can it\n    // checked as an instanceof DataSource<T> since the table should allow for data sources\n    // that did not explicitly extend DataSource<T>.\n    if ((this.dataSource as DataSource<T>).connect instanceof Function) {\n      dataStream = (this.dataSource as DataSource<T>).connect(this);\n    } else if (this.dataSource instanceof Observable) {\n      dataStream = this.dataSource;\n    } else if (Array.isArray(this.dataSource)) {\n      dataStream = observableOf(this.dataSource);\n    }\n\n    if (dataStream === undefined) {\n      throw getTableUnknownDataSourceError();\n    }\n\n    this._renderChangeSubscription = dataStream\n        .pipe(takeUntil(this._onDestroy))\n        .subscribe(data => {\n          this._data = data || [];\n          this.renderRows();\n        });\n  }\n\n  /**\n   * Clears any existing content in the header row outlet and creates a new embedded view\n   * in the outlet using the header row definition.\n   */\n  private _forceRenderHeaderRows() {\n    // Clear the header row outlet if any content exists.\n    if (this._headerRowOutlet.viewContainer.length > 0) {\n      this._headerRowOutlet.viewContainer.clear();\n    }\n\n    this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n    this.updateStickyHeaderRowStyles();\n    this.updateStickyColumnStyles();\n  }\n  /**\n   * Clears any existing content in the footer row outlet and creates a new embedded view\n   * in the outlet using the footer row definition.\n   */\n  private _forceRenderFooterRows() {\n    // Clear the footer row outlet if any content exists.\n    if (this._footerRowOutlet.viewContainer.length > 0) {\n      this._footerRowOutlet.viewContainer.clear();\n    }\n\n    this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n    this.updateStickyFooterRowStyles();\n    this.updateStickyColumnStyles();\n  }\n\n  /** Adds the sticky column styles for the rows according to the columns' stick states. */\n  private _addStickyColumnStyles(rows: HTMLElement[], rowDef: BaseRowDef) {\n    const columnDefs = Array.from(rowDef.columns || []).map(c => this._columnDefsByName.get(c)!);\n    const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n    const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n    this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n  }\n\n  /** Gets the list of rows that have been rendered in the row outlet. */\n  _getRenderedRows(rowOutlet: RowOutlet) {\n    const renderedRows: HTMLElement[] = [];\n\n    for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n      const viewRef = (rowOutlet.viewContainer.get(i)! as EmbeddedViewRef<any>);\n      renderedRows.push(viewRef.rootNodes[0]);\n    }\n\n    return renderedRows;\n  }\n\n  /**\n   * Get the matching row definitions that should be used for this row data. If there is only\n   * one row definition, it is returned. Otherwise, find the row definitions that has a when\n   * predicate that returns true with the data. If none return true, return the default row\n   * definition.\n   */\n  _getRowDefs(data: T, dataIndex: number): CdkRowDef<T>[] {\n    if (this._rowDefs.length == 1) { return [this._rowDefs[0]]; }\n\n    let rowDefs: CdkRowDef<T>[] = [];\n    if (this.multiTemplateDataRows) {\n      rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n    } else {\n      let rowDef =\n          this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n      if (rowDef) {\n        rowDefs.push(rowDef);\n      }\n    }\n\n    if (!rowDefs.length) {\n      throw getTableMissingMatchingRowDefError(data);\n    }\n\n    return rowDefs;\n  }\n\n  /**\n   * Create the embedded view for the data row template and place it in the correct index location\n   * within the data row view container.\n   */\n  private _insertRow(renderRow: RenderRow<T>, renderIndex: number) {\n    const rowDef = renderRow.rowDef;\n    const context: RowContext<T> = {$implicit: renderRow.data};\n    this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n  }\n\n  /**\n   * Creates a new row template in the outlet and fills it with the set of cell templates.\n   * Optionally takes a context to provide to the row and cells, as well as an optional index\n   * of where to place the new row template in the outlet.\n   */\n  private _renderRow(\n      outlet: RowOutlet, rowDef: BaseRowDef, index: number, context: RowContext<T> = {}) {\n    // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n    outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n\n    for (let cellTemplate of this._getCellTemplates(rowDef)) {\n      if (CdkCellOutlet.mostRecentCellOutlet) {\n        CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Updates the index-related context for each row to reflect any changes in the index of the rows,\n   * e.g. first/last/even/odd.\n   */\n  private _updateRowIndexContext() {\n    const viewContainer = this._rowOutlet.viewContainer;\n    for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n      const viewRef = viewContainer.get(renderIndex) as RowViewRef<T>;\n      const context = viewRef.context as RowContext<T>;\n      context.count = count;\n      context.first = renderIndex === 0;\n      context.last = renderIndex === count - 1;\n      context.even = renderIndex % 2 === 0;\n      context.odd = !context.even;\n\n      if (this.multiTemplateDataRows) {\n        context.dataIndex = this._renderRows[renderIndex].dataIndex;\n        context.renderIndex = renderIndex;\n      } else {\n        context.index = this._renderRows[renderIndex].dataIndex;\n      }\n    }\n  }\n\n  /** Gets the column definitions for the provided row def. */\n  private _getCellTemplates(rowDef: BaseRowDef): TemplateRef<any>[] {\n    if (!rowDef || !rowDef.columns) { return []; }\n    return Array.from(rowDef.columns, columnId => {\n      const column = this._columnDefsByName.get(columnId);\n\n      if (!column) {\n        throw getTableUnknownColumnError(columnId);\n      }\n\n      return rowDef.extractCellTemplate(column);\n    });\n  }\n\n  /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n  private _applyNativeTableSections() {\n    const sections = [\n      {tag: 'thead', outlet: this._headerRowOutlet},\n      {tag: 'tbody', outlet: this._rowOutlet},\n      {tag: 'tfoot', outlet: this._footerRowOutlet},\n    ];\n\n    for (const section of sections) {\n      // @breaking-change 8.0.0 remove the `|| document` once the `_document` is a required param.\n      const documentRef = this._document || document;\n      const element = documentRef.createElement(section.tag);\n      element.appendChild(section.outlet.elementRef.nativeElement);\n      this._elementRef.nativeElement.appendChild(element);\n    }\n  }\n\n  /**\n   * Forces a re-render of the data rows. Should be called in cases where there has been an input\n   * change that affects the evaluation of which rows should be rendered, e.g. toggling\n   * `multiTemplateDataRows` or adding/removing row definitions.\n   */\n  private _forceRenderDataRows() {\n    this._dataDiffer.diff([]);\n    this._rowOutlet.viewContainer.clear();\n    this.renderRows();\n    this.updateStickyColumnStyles();\n  }\n\n  /**\n   * Checks if there has been a change in sticky states since last check and applies the correct\n   * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n   * during a change detection and after the inputs are settled (after content check).\n   */\n  private _checkStickyStates() {\n    const stickyCheckReducer = (acc: boolean, d: CdkHeaderRowDef|CdkFooterRowDef|CdkColumnDef) => {\n      return acc || d.hasStickyChanged();\n    };\n\n    // Note that the check needs to occur for every definition since it notifies the definition\n    // that it can reset its dirty state. Using another operator like `some` may short-circuit\n    // remaining definitions and leave them in an unchecked state.\n\n    if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyHeaderRowStyles();\n    }\n\n    if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyFooterRowStyles();\n    }\n\n    if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n      this.updateStickyColumnStyles();\n    }\n  }\n\n  /**\n   * Creates the sticky styler that will be used for sticky rows and columns. Listens\n   * for directionality changes and provides the latest direction to the styler. Re-applies column\n   * stickiness when directionality changes.\n   */\n  private _setupStickyStyler() {\n    const direction: Direction = this._dir ? this._dir.value : 'ltr';\n    this._stickyStyler = new StickyStyler(this._isNativeHtmlTable,\n        // @breaking-change 8.0.0 remove the null check for `this._platform`.\n        this.stickyCssClass, direction, this._platform ? this._platform.isBrowser : true);\n    (this._dir ? this._dir.change : observableOf<Direction>())\n        .pipe(takeUntil(this._onDestroy))\n        .subscribe(value => {\n          this._stickyStyler.direction = value;\n          this.updateStickyColumnStyles();\n        });\n  }\n}\n\n/** Utility function that gets a merged list of the entries in a QueryList and values of a Set. */\nfunction mergeQueryListAndSet<T>(queryList: QueryList<T>, set: Set<T>): T[] {\n  return queryList.toArray().concat(Array.from(set));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {HeaderRowOutlet, DataRowOutlet, CdkTable, FooterRowOutlet} from './table';\nimport {\n  CdkCellOutlet, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow,\n  CdkRowDef\n} from './row';\nimport {\n  CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCell, CdkCellDef,\n  CdkFooterCellDef, CdkFooterCell\n} from './cell';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkTable,\n  CdkRowDef,\n  CdkCellDef,\n  CdkCellOutlet,\n  CdkHeaderCellDef,\n  CdkFooterCellDef,\n  CdkColumnDef,\n  CdkCell,\n  CdkRow,\n  CdkHeaderCell,\n  CdkFooterCell,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkFooterRow,\n  CdkFooterRowDef,\n  DataRowOutlet,\n  HeaderRowOutlet,\n  FooterRowOutlet,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS\n\n})\nexport class CdkTableModule { }\n"]}