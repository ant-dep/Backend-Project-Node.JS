{"version":3,"file":"stepper.es5.js","sources":["../../../src/cdk/stepper/step-label.ts","../../../src/cdk/stepper/stepper.ts","../../../src/cdk/stepper/stepper-button.ts","../../../src/cdk/stepper/stepper-module.ts"],"names":["obaservableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkStepLabel]',\n})\nexport class CdkStepLabel {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {END, ENTER, HOME, SPACE} from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl} from '@angular/forms';\nimport {CdkStepLabel} from './step-label';\nimport {Observable, Subject, of as obaservableOf} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n\n/**\n * Position state of the content of each step in stepper that is used for transitioning\n * the content into correct position upon step selection change.\n */\nexport type StepContentPositionState = 'previous' | 'current' | 'next';\n\n/** Possible orientation of a stepper. */\nexport type StepperOrientation = 'horizontal' | 'vertical';\n\n/** Change event emitted on selection changes. */\nexport class StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex: number;\n\n  /** Index of the step previously selected. */\n  previouslySelectedIndex: number;\n\n  /** The step instance now selected. */\n  selectedStep: CdkStep;\n\n  /** The step instance previously selected. */\n  previouslySelectedStep: CdkStep;\n}\n\n/** The state of each step. */\nexport type StepState = 'number' | 'edit' | 'done' | 'error' | string;\n\n/** Enum to represent the different states of the steps. */\nexport const STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n\n/** InjectionToken that can be used to specify the global stepper options. */\nexport const MAT_STEPPER_GLOBAL_OPTIONS =\n  new InjectionToken<StepperOptions>('mat-stepper-global-options');\n\n/** Configurable options for stepper. */\nexport interface StepperOptions {\n  /**\n   * Whether the stepper should display an error state or not.\n   * Default behavior is assumed to be false.\n   */\n  showError?: boolean;\n\n  /**\n   * Whether the stepper should display the default indicator type\n   * or not.\n   * Default behavior is assumed to be true.\n   */\n  displayDefaultIndicatorType?: boolean;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-step',\n  exportAs: 'cdkStep',\n  template: '<ng-template><ng-content></ng-content></ng-template>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkStep implements OnChanges {\n  private _stepperOptions: StepperOptions;\n  _showError: boolean;\n  _displayDefaultIndicatorType: boolean;\n\n  /** Template for step label if it exists. */\n  @ContentChild(CdkStepLabel) stepLabel: CdkStepLabel;\n\n  /** Template for step content. */\n  @ViewChild(TemplateRef) content: TemplateRef<any>;\n\n  /** The top level abstract control of the step. */\n  @Input() stepControl: AbstractControl;\n\n  /** Whether user has seen the expanded step content or not. */\n  interacted = false;\n\n  /** Plain text label of the step. */\n  @Input() label: string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** State of the step. */\n  @Input() state: StepState;\n\n  /** Whether the user can return to this step once it has been marked as complted. */\n  @Input()\n  get editable(): boolean { return this._editable; }\n  set editable(value: boolean) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  private _editable = true;\n\n  /** Whether the completion of step is optional. */\n  @Input()\n  get optional(): boolean { return this._optional; }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional = false;\n\n  /** Whether step is marked as completed. */\n  @Input()\n  get completed(): boolean {\n    return this._customCompleted == null ? this._getDefaultCompleted() : this._customCompleted;\n  }\n  set completed(value: boolean) {\n    this._customCompleted = coerceBooleanProperty(value);\n  }\n  private _customCompleted: boolean | null = null;\n\n  private _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  /** Whether step has an error. */\n  @Input()\n  get hasError(): boolean {\n    return this._customError || this._getDefaultError();\n  }\n  set hasError(value: boolean) {\n    this._customError = coerceBooleanProperty(value);\n  }\n  private _customError: boolean | null = null;\n\n  private _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(\n    @Inject(forwardRef(() => CdkStepper)) private _stepper: CdkStepper,\n    @Optional() @Inject(MAT_STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n\n  /** Selects this step component. */\n  select(): void {\n    this._stepper.selected = this;\n  }\n\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset(): void {\n    this.interacted = false;\n\n    if (this._customCompleted != null) {\n      this._customCompleted = false;\n    }\n\n    if (this._customError != null) {\n      this._customError = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n}\n\n@Directive({\n  selector: '[cdkStepper]',\n  exportAs: 'cdkStepper',\n})\nexport class CdkStepper implements AfterViewInit, OnDestroy {\n  /** Emits when the component is destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** Used for managing keyboard focus. */\n  private _keyManager: FocusKeyManager<FocusableOption>;\n\n  /**\n   * @breaking-change 8.0.0 Remove `| undefined` once the `_document`\n   * constructor param is required.\n   */\n  private _document: Document | undefined;\n\n  /** The list of step components that the stepper is holding. */\n  @ContentChildren(CdkStep) _steps: QueryList<CdkStep>;\n\n  /** The list of step headers of the steps in the stepper. */\n  _stepHeader: QueryList<FocusableOption>;\n\n  /** Whether the validity of previous steps should be checked or not. */\n  @Input()\n  get linear(): boolean { return this._linear; }\n  set linear(value: boolean) { this._linear = coerceBooleanProperty(value); }\n  private _linear = false;\n\n  /** The index of the selected step. */\n  @Input()\n  get selectedIndex() { return this._selectedIndex; }\n  set selectedIndex(index: number) {\n    if (this._steps) {\n      // Ensure that the index can't be out of bounds.\n      if (index < 0 || index > this._steps.length - 1) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      if (this._selectedIndex != index &&\n          !this._anyControlsInvalidOrPending(index) &&\n          (index >= this._selectedIndex || this._steps.toArray()[index].editable)) {\n        this._updateSelectedItemIndex(index);\n      }\n    } else {\n      this._selectedIndex = index;\n    }\n  }\n  private _selectedIndex = 0;\n\n  /** The step that is selected. */\n  @Input()\n  get selected(): CdkStep {\n    // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n    return this._steps ? this._steps.toArray()[this.selectedIndex] : undefined!;\n  }\n  set selected(step: CdkStep) {\n    this.selectedIndex = this._steps ? this._steps.toArray().indexOf(step) : -1;\n  }\n\n  /** Event emitted when the selected step has changed. */\n  @Output() selectionChange: EventEmitter<StepperSelectionEvent>\n      = new EventEmitter<StepperSelectionEvent>();\n\n  /** Used to track unique ID for each stepper component. */\n  _groupId: number;\n\n  protected _orientation: StepperOrientation = 'horizontal';\n\n  constructor(\n    @Optional() private _dir: Directionality,\n    private _changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n    private _elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n\n  ngAfterViewInit() {\n    this._keyManager = new FocusKeyManager(this._stepHeader)\n      .withWrap()\n      .withVerticalOrientation(this._orientation === 'vertical');\n\n    (this._dir ? this._dir.change as Observable<Direction> : obaservableOf<Direction>())\n      .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n      .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n    this._keyManager.updateActiveItemIndex(this._selectedIndex);\n\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Selects and focuses the next step in list. */\n  next(): void {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this._steps.length - 1);\n  }\n\n  /** Selects and focuses the previous step in list. */\n  previous(): void {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset(): void {\n    this._updateSelectedItemIndex(0);\n    this._steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i: number): string {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i: number): string {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index: number): StepContentPositionState {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index: number, state: StepState = STEP_STATE.NUMBER): StepState {\n    const step = this._steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n\n    return step._displayDefaultIndicatorType\n      ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n      : this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n\n  private _getDefaultIndicatorLogic(step: CdkStep, isCurrentStep: boolean): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n\n  private _getGuidelineLogic(\n    step: CdkStep,\n    isCurrentStep: boolean,\n    state: StepState = STEP_STATE.NUMBER): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n\n  private _isCurrentStep(index: number) {\n    return this._selectedIndex === index;\n  }\n\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n\n  private _updateSelectedItemIndex(newIndex: number): void {\n    const stepsArray = this._steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex],\n    });\n\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                            this._keyManager.updateActiveItemIndex(newIndex);\n\n    this._selectedIndex = newIndex;\n    this._stateChanged();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n\n    if (this._keyManager.activeItemIndex != null && (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = this._keyManager.activeItemIndex;\n      event.preventDefault();\n    } else if (keyCode === HOME) {\n      this._keyManager.setFirstItemActive();\n      event.preventDefault();\n    } else if (keyCode === END) {\n      this._keyManager.setLastItemActive();\n      event.preventDefault();\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  private _anyControlsInvalidOrPending(index: number): boolean {\n    const steps = this._steps.toArray();\n\n    steps[this._selectedIndex].interacted = true;\n\n    if (this._linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete = control ?\n            (control.invalid || control.pending || !step.interacted) :\n            !step.completed;\n        return isIncomplete && !step.optional;\n      });\n    }\n\n    return false;\n  }\n\n  private _layoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Checks whether the stepper contains the focused element. */\n  private _containsFocus(): boolean {\n    if (!this._document || !this._elementRef) {\n      return false;\n    }\n\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = this._document.activeElement;\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {CdkStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperNext]',\n  host: {\n    '(click)': '_stepper.next()',\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperNext {\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  @Input() type: string = 'submit';\n\n  constructor(public _stepper: CdkStepper) {}\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperPrevious]',\n  host: {\n    '(click)': '_stepper.previous()',\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperPrevious {\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  @Input() type: string = 'button';\n\n  constructor(public _stepper: CdkStepper) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkStepper, CdkStep} from './stepper';\nimport {CommonModule} from '@angular/common';\nimport {CdkStepLabel} from './step-label';\nimport {CdkStepperNext, CdkStepperPrevious} from './stepper-button';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n@NgModule({\n  imports: [BidiModule, CommonModule],\n  exports: [CdkStep, CdkStepper, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n  declarations: [CdkStep, CdkStepper, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]\n})\nexport class CdkStepperModule {}\n"]}