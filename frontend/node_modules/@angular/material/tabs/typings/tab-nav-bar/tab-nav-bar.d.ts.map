{"version":3,"file":"tab-nav-bar.d.ts","sources":["tab-nav-bar.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { AfterContentChecked, AfterContentInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, QueryList } from '@angular/core';\nimport { CanColor, CanColorCtor, CanDisable, CanDisableCtor, CanDisableRipple, CanDisableRippleCtor, HasTabIndex, HasTabIndexCtor, RippleConfig, RippleGlobalOptions, RippleRenderer, RippleTarget, ThemePalette } from '@angular/material/core';\nimport { MatInkBar } from '../ink-bar';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n/** @docs-private */\nexport declare class MatTabNavBase {\n    _elementRef: ElementRef;\n    constructor(_elementRef: ElementRef);\n}\nexport declare const _MatTabNavMixinBase: CanDisableRippleCtor & CanColorCtor & typeof MatTabNavBase;\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nexport declare class MatTabNav extends _MatTabNavMixinBase implements AfterContentChecked, AfterContentInit, CanColor, CanDisableRipple, OnDestroy {\n    private _dir;\n    private _ngZone;\n    private _changeDetectorRef;\n    private _viewportRuler;\n    /** Subject that emits when the component has been destroyed. */\n    private readonly _onDestroy;\n    private _activeLinkChanged;\n    private _activeLinkElement;\n    _inkBar: MatInkBar;\n    /** Query list of all tab links of the tab navigation. */\n    _tabLinks: QueryList<MatTabLink>;\n    /** Background color of the tab nav. */\n    backgroundColor: ThemePalette;\n    private _backgroundColor;\n    constructor(elementRef: ElementRef, _dir: Directionality, _ngZone: NgZone, _changeDetectorRef: ChangeDetectorRef, _viewportRuler: ViewportRuler);\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    updateActiveLink(element: ElementRef): void;\n    ngAfterContentInit(): void;\n    /** Checks if the active link has been changed and, if so, will update the ink bar. */\n    ngAfterContentChecked(): void;\n    ngOnDestroy(): void;\n    /** Aligns the ink bar to the active link. */\n    _alignInkBar(): void;\n}\nexport declare class MatTabLinkBase {\n}\nexport declare const _MatTabLinkMixinBase: HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkBase;\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nexport declare class MatTabLink extends _MatTabLinkMixinBase implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\n    private _tabNavBar;\n    _elementRef: ElementRef;\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0 `_focusMonitor` parameter to be made required.\n     */\n    private _focusMonitor?;\n    /** Whether the tab link is active or not. */\n    protected _isActive: boolean;\n    /** Reference to the RippleRenderer for the tab-link. */\n    protected _tabLinkRipple: RippleRenderer;\n    /** Whether the ripples are globally disabled through the RippleGlobalOptions */\n    private _ripplesGloballyDisabled;\n    /** Whether the link is active. */\n    active: boolean;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down.\n     * @docs-private\n     */\n    rippleConfig: RippleConfig;\n    /**\n     * Whether ripples are disabled on interaction\n     * @docs-private\n     */\n    readonly rippleDisabled: boolean;\n    constructor(_tabNavBar: MatTabNav, _elementRef: ElementRef, ngZone: NgZone, platform: Platform, globalOptions: RippleGlobalOptions, tabIndex: string, \n    /**\n     * @deprecated\n     * @breaking-change 8.0.0 `_focusMonitor` parameter to be made required.\n     */\n    _focusMonitor?: FocusMonitor | undefined);\n    ngOnDestroy(): void;\n}\n"]}