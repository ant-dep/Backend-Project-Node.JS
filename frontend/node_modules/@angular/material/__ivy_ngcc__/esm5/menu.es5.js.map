{"version":3,"file":"menu.es5.js","sources":["../../../src/lib/menu/menu-content.ts","../../../src/lib/menu/menu-animations.ts","../../../src/lib/menu/menu-errors.ts","../../../src/lib/menu/menu-panel.ts","../../../src/lib/menu/menu-item.ts","../../../src/lib/menu/menu-directive.ts","../../../src/lib/menu/menu-trigger.ts","../../../src/lib/menu/menu-module.ts"],"names":["tslib_1.__extends","observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  TemplateRef,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  ViewContainerRef,\n  Inject,\n  OnDestroy,\n} from '@angular/core';\nimport {TemplatePortal, DomPortalOutlet} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {Subject} from 'rxjs';\n\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\n@Directive({\n  selector: 'ng-template[matMenuContent]'\n})\nexport class MatMenuContent implements OnDestroy {\n  private _portal: TemplatePortal<any>;\n  private _outlet: DomPortalOutlet;\n\n  /** Emits when the menu content has been attached. */\n  _attached = new Subject<void>();\n\n  constructor(\n    private _template: TemplateRef<any>,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _injector: Injector,\n    private _viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n  attach(context: any = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n\n    this.detach();\n\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n          this._componentFactoryResolver, this._appRef, this._injector);\n    }\n\n    const element: HTMLElement = this._template.elementRef.nativeElement;\n\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode!.insertBefore(this._outlet.outletElement, element);\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n\n  /**\n   * Detaches the content.\n   * @docs-private\n   */\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport{\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  query,\n  group,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const matMenuAnimations: {\n  readonly transformMenu: AnimationTriggerMetadata;\n  readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(0.8)'\n    })),\n    transition('void => enter', group([\n      query('.mat-menu-content', animate('100ms linear', style({opacity: 1}))),\n      animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'})),\n    ])),\n    transition('* => void', animate('100ms 25ms linear', style({opacity: 0})))\n  ]),\n\n\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [\n    // TODO(crisbeto): this is inside the `transformMenu`\n    // now. Remove next time we do breaking changes.\n    state('showing', style({opacity: 1})),\n    transition('void => *', [\n      style({opacity: 0}),\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n    ])\n  ])\n};\n\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nexport const fadeInItems = matMenuAnimations.fadeInItems;\n\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nexport const transformMenu = matMenuAnimations.transformMenu;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nexport function throwMatMenuMissingError() {\n  throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, TemplateRef, InjectionToken} from '@angular/core';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {Direction} from '@angular/cdk/bidi';\nimport {FocusOrigin} from '@angular/cdk/a11y';\nimport {MatMenuContent} from './menu-content';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nexport const MAT_MENU_PANEL = new InjectionToken<MatMenuPanel>('MAT_MENU_PANEL');\n\n/**\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\n * @docs-private\n */\nexport interface MatMenuPanel<T = any> {\n  xPosition: MenuPositionX;\n  yPosition: MenuPositionY;\n  overlapTrigger: boolean;\n  templateRef: TemplateRef<any>;\n  close: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n  parentMenu?: MatMenuPanel | undefined;\n  direction?: Direction;\n  focusFirstItem: (origin?: FocusOrigin) => void;\n  resetActiveItem: () => void;\n  setPositionClasses?: (x: MenuPositionX, y: MenuPositionY) => void;\n  setElevation?(depth: number): void;\n  lazyContent?: MatMenuContent;\n  backdropClass?: string;\n  hasBackdrop?: boolean;\n  addItem?: (item: T) => void;\n  removeItem?: (item: T) => void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewEncapsulation,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  mixinDisabled,\n  mixinDisableRipple,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nexport class MatMenuItemBase {}\nexport const _MatMenuItemMixinBase: CanDisableRippleCtor & CanDisableCtor & typeof MatMenuItemBase =\n    mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-menu-item]',\n  exportAs: 'matMenuItem',\n  inputs: ['disabled', 'disableRipple'],\n  host: {\n    'role': 'menuitem',\n    'class': 'mat-menu-item',\n    '[class.mat-menu-item-highlighted]': '_highlighted',\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.disabled]': 'disabled || null',\n    '(click)': '_checkDisabled($event)',\n    '(mouseenter)': '_handleMouseEnter()',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: 'menu-item.html',\n})\nexport class MatMenuItem extends _MatMenuItemMixinBase\n    implements FocusableOption, CanDisable, CanDisableRipple, OnDestroy {\n\n  private _document: Document;\n\n  /** Stream that emits when the menu item is hovered. */\n  readonly _hovered: Subject<MatMenuItem> = new Subject<MatMenuItem>();\n\n  /** Whether the menu item is highlighted. */\n  _highlighted: boolean = false;\n\n  /** Whether the menu item acts as a trigger for a sub-menu. */\n  _triggersSubmenu: boolean = false;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) document?: any,\n    private _focusMonitor?: FocusMonitor,\n    @Inject(MAT_MENU_PANEL) @Optional() private _parentMenu?: MatMenuPanel<MatMenuItem>) {\n\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n    super();\n\n    if (_focusMonitor) {\n      // Start monitoring the element so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      _focusMonitor.monitor(this._elementRef, false);\n    }\n\n    if (_parentMenu && _parentMenu.addItem) {\n      _parentMenu.addItem(this);\n    }\n\n    this._document = document;\n  }\n\n  /** Focuses the menu item. */\n  focus(origin: FocusOrigin = 'program'): void {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\n    } else {\n      this._getHostElement().focus();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n\n    this._hovered.complete();\n  }\n\n  /** Used to set the `tabindex`. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Returns the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Prevents the default element actions if it is disabled. */\n  _checkDisabled(event: Event): void {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /** Emits to the hover stream. */\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n    let output = '';\n\n    if (element.childNodes) {\n      const length = element.childNodes.length;\n\n      // Go through all the top-level text nodes and extract their text.\n      // We skip anything that's not a text node to prevent the text from\n      // being thrown off by something like an icon.\n      for (let i = 0; i < length; i++) {\n        if (element.childNodes[i].nodeType === textNodeType) {\n          output += element.childNodes[i].textContent;\n        }\n      }\n    }\n\n    return output.trim();\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  OnInit,\n} from '@angular/core';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {startWith, switchMap, take} from 'rxjs/operators';\nimport {matMenuAnimations} from './menu-animations';\nimport {MatMenuContent} from './menu-content';\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {AnimationEvent} from '@angular/animations';\n\n\n/** Default `mat-menu` options that can be overridden. */\nexport interface MatMenuDefaultOptions {\n  /** The x-axis position of the menu. */\n  xPosition: MenuPositionX;\n\n  /** The y-axis position of the menu. */\n  yPosition: MenuPositionY;\n\n  /** Whether the menu should overlap the menu trigger. */\n  overlapTrigger: boolean;\n\n  /** Class to be applied to the menu's backdrop. */\n  backdropClass: string;\n\n  /** Whether the menu has a backdrop. */\n  hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-menu`. */\nexport const MAT_MENU_DEFAULT_OPTIONS =\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options', {\n      providedIn: 'root',\n      factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MAT_MENU_DEFAULT_OPTIONS_FACTORY(): MatMenuDefaultOptions {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n  };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-menu',\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matMenu',\n  animations: [\n    matMenuAnimations.transformMenu,\n    matMenuAnimations.fadeInItems\n  ],\n  providers: [\n    {provide: MAT_MENU_PANEL, useExisting: MatMenu}\n  ]\n})\nexport class MatMenu implements AfterContentInit, MatMenuPanel<MatMenuItem>, OnInit, OnDestroy {\n  private _keyManager: FocusKeyManager<MatMenuItem>;\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\n  private _previousElevation: string;\n\n  /** Menu items inside the current menu. */\n  private _items: MatMenuItem[] = [];\n\n  /** Emits whenever the amount of menu items changes. */\n  private _itemChanges = new Subject<MatMenuItem[]>();\n\n  /** Subscription to tab events on the menu panel */\n  private _tabSubscription = Subscription.EMPTY;\n\n  /** Config object to be passed into the menu's ngClass */\n  _classList: {[key: string]: boolean} = {};\n\n  /** Current state of the panel animation. */\n  _panelAnimationState: 'void' | 'enter' = 'void';\n\n  /** Emits whenever an animation on the menu completes. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  /** Whether the menu is animating. */\n  _isAnimating: boolean;\n\n  /** Parent menu of the current menu panel. */\n  parentMenu: MatMenuPanel | undefined;\n\n  /** Layout direction of the menu. */\n  direction: Direction;\n\n  /** Class to be added to the backdrop element. */\n  @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n  /** Position of the menu in the X axis. */\n  @Input()\n  get xPosition(): MenuPositionX { return this._xPosition; }\n  set xPosition(value: MenuPositionX) {\n    if (value !== 'before' && value !== 'after') {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Position of the menu in the Y axis. */\n  @Input()\n  get yPosition(): MenuPositionY { return this._yPosition; }\n  set yPosition(value: MenuPositionY) {\n    if (value !== 'above' && value !== 'below') {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** @docs-private */\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  /**\n   * List of the items inside of a menu.\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n\n  /**\n   * Menu content that will be rendered lazily.\n   * @docs-private\n   */\n  @ContentChild(MatMenuContent) lazyContent: MatMenuContent;\n\n  /** Whether the menu should overlap its trigger. */\n  @Input()\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\n  set overlapTrigger(value: boolean) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n\n  /** Whether the menu has a backdrop. */\n  @Input()\n  get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n  set hasBackdrop(value: boolean | undefined) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n  private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  @Input('class')\n  set panelClass(classes: string) {\n    if (classes && classes.length) {\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n        obj[className] = true;\n        return obj;\n      }, {});\n\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @breaking-change 8.0.0\n   */\n  @Input()\n  get classList(): string { return this.panelClass; }\n  set classList(classes: string) { this.panelClass = classes; }\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n      new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n  /**\n   * Event emitted when the menu is closed.\n   * @deprecated Switch to `closed` instead\n   * @breaking-change 8.0.0\n   */\n  @Output() close = this.closed;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(MAT_MENU_DEFAULT_OPTIONS) private _defaultOptions: MatMenuDefaultOptions) { }\n\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatMenuItem>(this._items).withWrap().withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n  }\n\n  ngOnDestroy() {\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n\n  /** Stream that emits whenever the hovered menu item changes. */\n  _hovered(): Observable<MatMenuItem> {\n    return this._itemChanges.pipe(\n      startWith(this._items),\n      switchMap(items => merge(...items.map(item => item._hovered)))\n    );\n  }\n\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n  _handleKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n\n    switch (keyCode) {\n      case ESCAPE:\n        this.closed.emit('keydown');\n      break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n      break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n      break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          this._keyManager.setFocusOrigin('keyboard');\n        }\n\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n    if (this.lazyContent) {\n      this._ngZone.onStable.asObservable()\n        .pipe(take(1))\n        .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n    } else {\n      this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n    }\n  }\n\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n\n  /**\n   * Sets the menu panel elevation.\n   * @param depth Number of parent menus that come before the menu.\n   */\n  setElevation(depth: number): void {\n    // The elevation starts at the base and increases by one for each level.\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n\n  /**\n   * Registers a menu item with the menu.\n   * @docs-private\n   */\n  addItem(item: MatMenuItem) {\n    // We register the items through this method, rather than picking them up through\n    // `ContentChildren`, because we need the items to be picked up by their closest\n    // `mat-menu` ancestor. If we used `@ContentChildren(MatMenuItem, {descendants: true})`,\n    // all descendant items will bleed into the top-level menu in the case where the consumer\n    // has `mat-menu` instances nested inside each other.\n    if (this._items.indexOf(item) === -1) {\n      this._items.push(item);\n      this._itemChanges.next(this._items);\n    }\n  }\n\n  /**\n   * Removes an item from the menu.\n   * @docs-private\n   */\n  removeItem(item: MatMenuItem) {\n    const index = this._items.indexOf(item);\n\n    if (this._items.indexOf(item) > -1) {\n      this._items.splice(index, 1);\n      this._itemChanges.next(this._items);\n    }\n  }\n\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * @param posX Position of the menu along the x axis.\n   * @param posY Position of the menu along the y axis.\n   * @docs-private\n   */\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\n    const classes = this._classList;\n    classes['mat-menu-before'] = posX === 'before';\n    classes['mat-menu-after'] = posX === 'after';\n    classes['mat-menu-above'] = posY === 'above';\n    classes['mat-menu-below'] = posY === 'below';\n  }\n\n  /** Starts the enter animation. */\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n\n  /** Resets the panel animation to its initial state. */\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone(event: AnimationEvent) {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n\n    // Scroll the content element to the top once the animation is done. This is necessary, because\n    // we move focus to the first item while it's still being animated, which can throw the browser\n    // off when it determines the scroll position. Alternatively we can move focus when the\n    // animation is done, however moving focus asynchronously will interrupt screen readers\n    // which are in the process of reading out the menu already. We take the `element` from\n    // the `event` since we can't use a `ViewChild` to access the pane.\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin, isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  VerticalConnectionPos,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport {asapScheduler, merge, of as observableOf, Subscription} from 'rxjs';\nimport {delay, filter, take, takeUntil} from 'rxjs/operators';\nimport {MatMenu} from './menu-directive';\nimport {throwMatMenuMissingError} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n\n/** Injection token that determines the scroll handling while the menu is open. */\nexport const MAT_MENU_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n\n/** Default top padding of the menu panel. */\nexport const MENU_PANEL_TOP_PADDING = 8;\n\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\n@Directive({\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n  host: {\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'menuOpen || null',\n    '(mousedown)': '_handleMousedown($event)',\n    '(touchstart)': '_openedBy = \"touch\"',\n    '(keydown)': '_handleKeydown($event)',\n    '(click)': '_handleClick($event)',\n  },\n  exportAs: 'matMenuTrigger'\n})\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\n  private _portal: TemplatePortal;\n  private _overlayRef: OverlayRef | null = null;\n  private _menuOpen: boolean = false;\n  private _closeSubscription = Subscription.EMPTY;\n  private _hoverSubscription = Subscription.EMPTY;\n  private _scrollStrategy: () => ScrollStrategy;\n\n  // Tracking input type is necessary so it's possible to only auto-focus\n  // the first item of the list when the menu is opened via the keyboard\n  _openedBy: 'mouse' | 'touch' | null = null;\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @Input('mat-menu-trigger-for')\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel {\n    return this.menu;\n  }\n\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\n    this.menu = v;\n  }\n\n  /** References the menu instance that the trigger is associated with. */\n  @Input('matMenuTriggerFor') menu: MatMenuPanel;\n\n  /** Data to be passed along to any lazily-rendered content. */\n  @Input('matMenuTriggerData') menuData: any;\n\n  /** Event emitted when the associated menu is opened. */\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is opened.\n   * @deprecated Switch to `menuOpened` instead\n   * @breaking-change 8.0.0\n   */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\n\n  /** Event emitted when the associated menu is closed. */\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is closed.\n   * @deprecated Switch to `menuClosed` instead\n   * @breaking-change 8.0.0\n   */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\n\n  constructor(private _overlay: Overlay,\n              private _element: ElementRef<HTMLElement>,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_MENU_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _parentMenu: MatMenu,\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\n              @Optional() private _dir: Directionality,\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n              // @breaking-change 8.0.0\n              private _focusMonitor?: FocusMonitor) {\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngAfterContentInit() {\n    this._checkMenu();\n\n    this.menu.close.asObservable().subscribe(reason => {\n      this._destroyMenu();\n\n      // If a click closed the menu, we should close the entire chain of nested menus.\n      if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n        this._parentMenu.closed.emit(reason);\n      }\n    });\n\n    this._handleHover();\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._cleanUpSubscriptions();\n  }\n\n  /** Whether the menu is open. */\n  get menuOpen(): boolean {\n    return this._menuOpen;\n  }\n\n  /** The text direction of the containing app. */\n  get dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n  triggersSubmenu(): boolean {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n\n  /** Toggles the menu between the open and closed states. */\n  toggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  /** Opens the menu. */\n  openMenu(): void {\n    if (this._menuOpen) {\n      return;\n    }\n\n    this._checkMenu();\n\n    const overlayRef = this._createOverlay();\n    this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n    overlayRef.attach(this._portal);\n\n    if (this.menu.lazyContent) {\n      this.menu.lazyContent.attach(this.menuData);\n    }\n\n    this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n    this._initMenu();\n\n    if (this.menu instanceof MatMenu) {\n      this.menu._startAnimation();\n    }\n  }\n\n  /** Closes the menu. */\n  closeMenu(): void {\n    this.menu.close.emit();\n  }\n\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n  focus(origin: FocusOrigin = 'program') {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._element, origin);\n    } else {\n      this._element.nativeElement.focus();\n    }\n  }\n\n  /** Closes the menu and does the necessary cleanup. */\n  private _destroyMenu() {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n\n    const menu = this.menu;\n\n    this._closeSubscription.unsubscribe();\n    this._overlayRef.detach();\n\n    if (menu instanceof MatMenu) {\n      menu._resetAnimation();\n\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone\n          .pipe(\n            filter(event => event.toState === 'void'),\n            take(1),\n            // Interrupt if the content got re-attached.\n            takeUntil(menu.lazyContent._attached)\n          )\n          .subscribe(() => menu.lazyContent!.detach(), undefined, () => {\n            // No matter whether the content got re-attached, reset the menu.\n            this._resetMenu();\n          });\n      } else {\n        this._resetMenu();\n      }\n    } else {\n      this._resetMenu();\n\n      if (menu.lazyContent) {\n        menu.lazyContent.detach();\n      }\n    }\n  }\n\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   */\n  private _initMenu(): void {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n    this.menu.focusFirstItem(this._openedBy || 'program');\n  }\n\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\n  private _setMenuElevation(): void {\n    if (this.menu.setElevation) {\n      let depth = 0;\n      let parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n\n  /**\n   * This method resets the menu when it's closed, most importantly restoring\n   * focus to the menu trigger if the menu was opened via the keyboard.\n   */\n  private _resetMenu(): void {\n    this._setIsMenuOpen(false);\n\n    // We should reset focus if the user is navigating using a keyboard or\n    // if we have a top-level trigger which might cause focus to be lost\n    // when clicking on the backdrop.\n    if (!this._openedBy) {\n      // Note that the focus style will show up both for `program` and\n      // `keyboard` so we don't have to specify which one it is.\n      this.focus();\n    } else if (!this.triggersSubmenu()) {\n      this.focus(this._openedBy);\n    }\n\n    this._openedBy = null;\n  }\n\n  // set state rather than toggle to support triggers sharing a menu\n  private _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n\n  /**\n   * This method checks that a valid instance of MatMenu has been passed into\n   * matMenuTriggerFor. If not, an exception is thrown.\n   */\n  private _checkMenu() {\n    if (!this.menu) {\n      throwMatMenuMissingError();\n    }\n  }\n\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  private _createOverlay(): OverlayRef {\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      const config = this._getOverlayConfig();\n      this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n      this._overlayRef = this._overlay.create(config);\n\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\n      this._overlayRef.keydownEvents().subscribe();\n    }\n\n    return this._overlayRef;\n  }\n\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position()\n          .flexibleConnectedTo(this._element)\n          .withLockedPosition()\n          .withTransformOriginOn('.mat-menu-panel'),\n      hasBackdrop: this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop,\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir\n    });\n  }\n\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n  private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n    if (this.menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n        this.menu.setPositionClasses!(posX, posY);\n      });\n    }\n  }\n\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param positionStrategy Strategy whose position to update.\n   */\n  private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    positionStrategy.withPositions([\n      {originX, originY, overlayX, overlayY, offsetY},\n      {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n      {\n        originX,\n        originY: originFallbackY,\n        overlayX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      },\n      {\n        originX: originFallbackX,\n        originY: originFallbackY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }\n    ]);\n  }\n\n  /** Cleans up the active subscriptions. */\n  private _cleanUpSubscriptions(): void {\n    this._closeSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  private _menuClosingActions() {\n    const backdrop = this._overlayRef!.backdropClick();\n    const detachments = this._overlayRef!.detachments();\n    const parentClose = this._parentMenu ? this._parentMenu.closed : observableOf();\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\n      filter(active => active !== this._menuItemInstance),\n      filter(() => this._menuOpen)\n    ) : observableOf();\n\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n\n  /** Handles mouse presses on the trigger. */\n  _handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : null;\n\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /** Handles key presses on the trigger. */\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    if (this.triggersSubmenu() && (\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n      this.openMenu();\n    }\n  }\n\n  /** Handles click events on the trigger. */\n  _handleClick(event: MouseEvent): void {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\n  /** Handles the cases where the user hovers over the trigger. */\n  private _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu()) {\n      return;\n    }\n\n    this._hoverSubscription = this._parentMenu._hovered()\n      // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n      // with different data and triggers), we have to delay it by a tick to ensure that\n      // it won't be closed immediately after it is opened.\n      .pipe(\n        filter(active => active === this._menuItemInstance && !active.disabled),\n        delay(0, asapScheduler)\n      )\n      .subscribe(() => {\n        this._openedBy = 'mouse';\n\n        // If the same menu is used between multiple triggers, it might still be animating\n        // while the new trigger tries to re-open it. Wait for the animation to finish\n        // before doing so. Also interrupt if the user moves to another item.\n        if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n          // We need the `delay(0)` here in order to avoid\n          // 'changed after checked' errors in some cases. See #12194.\n          this.menu._animationDone\n            .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n            .subscribe(() => this.openMenu());\n        } else {\n          this.openMenu();\n        }\n      });\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatMenuContent} from './menu-content';\nimport {MatMenu} from './menu-directive';\nimport {MatMenuItem} from './menu-item';\nimport {\n  MatMenuTrigger,\n  MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './menu-trigger';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    MatRippleModule,\n    OverlayModule,\n  ],\n  exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\n  declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class MatMenuModule {}\n"]}