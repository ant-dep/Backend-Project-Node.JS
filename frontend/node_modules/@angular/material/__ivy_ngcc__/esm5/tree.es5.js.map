{"version":3,"file":"tree.es5.js","sources":["../../../src/lib/tree/outlet.ts","../../../src/lib/tree/node.ts","../../../src/lib/tree/padding.ts","../../../src/lib/tree/tree.ts","../../../src/lib/tree/toggle.ts","../../../src/lib/tree/tree-module.ts","../../../src/lib/tree/data-source/flat-data-source.ts","../../../src/lib/tree/data-source/nested-data-source.ts"],"names":["tslib_1.__extends"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CdkTreeNodeOutlet} from '@angular/cdk/tree';\nimport {\n  Directive,\n  ViewContainerRef,\n} from '@angular/core';\n\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\n@Directive({\n  selector: '[matTreeNodeOutlet]'\n})\nexport class MatTreeNodeOutlet implements CdkTreeNodeOutlet {\n  constructor(public viewContainer: ViewContainerRef) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkNestedTreeNode, CdkTree, CdkTreeNode, CdkTreeNodeDef} from '@angular/cdk/tree';\nimport {\n  AfterContentInit,\n  Attribute,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinDisabled,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {MatTreeNodeOutlet} from './outlet';\n\n// TODO(devversion): workaround for https://github.com/angular/material2/issues/12760\nexport const _CdkTreeNodeDef = CdkTreeNodeDef;\n\nexport const _MatTreeNodeMixinBase: HasTabIndexCtor & CanDisableCtor & typeof CdkTreeNode =\n    mixinTabIndex(mixinDisabled(CdkTreeNode));\n\nexport const _MatNestedTreeNodeMixinBase:\n    HasTabIndexCtor & CanDisableCtor & typeof CdkNestedTreeNode =\n        mixinTabIndex(mixinDisabled(CdkNestedTreeNode));\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n  selector: 'mat-tree-node',\n  exportAs: 'matTreeNode',\n  inputs: ['disabled', 'tabIndex'],\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n    '[attr.role]': 'role',\n    'class': 'mat-tree-node'\n  },\n  providers: [{provide: CdkTreeNode, useExisting: MatTreeNode}]\n})\nexport class MatTreeNode<T> extends _MatTreeNodeMixinBase<T>\n    implements CanDisable, HasTabIndex {\n  @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _tree: CdkTree<T>,\n              @Attribute('tabindex') tabIndex: string) {\n    super(_elementRef, _tree);\n\n    this.tabIndex = Number(tabIndex) || 0;\n  }\n}\n\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n */\n@Directive({\n  selector: '[matTreeNodeDef]',\n  inputs: [\n    'when: matTreeNodeDefWhen'\n  ],\n  providers: [{provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef}]\n})\nexport class MatTreeNodeDef<T> extends _CdkTreeNodeDef<T> {\n  @Input('matTreeNode') data: T;\n}\n\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\n@Directive({\n  selector: 'mat-nested-tree-node',\n  exportAs: 'matNestedTreeNode',\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.role]': 'role',\n    'class': 'mat-nested-tree-node',\n  },\n  inputs: ['disabled', 'tabIndex'],\n  providers: [\n    {provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode},\n    {provide: CdkTreeNode, useExisting: MatNestedTreeNode}\n  ]\n})\nexport class MatNestedTreeNode<T> extends _MatNestedTreeNodeMixinBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex, OnDestroy {\n\n  @Input('matNestedTreeNode') node: T;\n\n  @ContentChildren(MatTreeNodeOutlet) nodeOutlet: QueryList<MatTreeNodeOutlet>;\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _tree: CdkTree<T>,\n              protected _differs: IterableDiffers,\n              @Attribute('tabindex') tabIndex: string) {\n    super(_elementRef, _tree, _differs);\n\n    this.tabIndex = Number(tabIndex) || 0;\n  }\n\n  // This is a workaround for https://github.com/angular/angular/issues/23091\n  // In aot mode, the lifecycle hooks from parent class are not called.\n  // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CdkTreeNodePadding} from '@angular/cdk/tree';\nimport {Directive, Input} from '@angular/core';\n\n// TODO(devversion): workaround for https://github.com/angular/material2/issues/12760\nexport const _CdkTreeNodePadding = CdkTreeNodePadding;\n\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\n@Directive({\n  selector: '[matTreeNodePadding]',\n  providers: [{provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding}]\n})\nexport class MatTreeNodePadding<T> extends _CdkTreeNodePadding<T> {\n\n  /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n  @Input('matTreeNodePadding') level: number;\n\n  /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n  @Input('matTreeNodePaddingIndent') indent: number;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTree} from '@angular/cdk/tree';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTreeNodeOutlet} from './outlet';\n\n// TODO(devversion): workaround for https://github.com/angular/material2/issues/12760\nexport const _CdkTree = CdkTree;\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tree',\n  exportAs: 'matTree',\n  template: `<ng-container matTreeNodeOutlet></ng-container>`,\n  host: {\n    'class': 'mat-tree',\n    'role': 'tree',\n  },\n  styleUrls: ['tree.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{provide: CdkTree, useExisting: MatTree}]\n})\nexport class MatTree<T> extends _CdkTree<T> {\n  // Outlets within the tree's template where the dataNodes will be inserted.\n  @ViewChild(MatTreeNodeOutlet) _nodeOutlet: MatTreeNodeOutlet;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTreeNodeToggle} from '@angular/cdk/tree';\nimport {Directive, Input} from '@angular/core';\n\n// TODO(devversion): workaround for https://github.com/angular/material2/issues/12760\nexport const _CdkTreeNodeToggle = CdkTreeNodeToggle;\n\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\n@Directive({\n  selector: '[matTreeNodeToggle]',\n  host: {\n    '(click)': '_toggle($event)',\n  },\n  providers: [{provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle}]\n})\nexport class MatTreeNodeToggle<T> extends _CdkTreeNodeToggle<T> {\n  @Input('matTreeNodeToggleRecursive') recursive: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatNestedTreeNode, MatTreeNodeDef, MatTreeNode} from './node';\nimport {MatTree} from './tree';\nimport {MatTreeNodeToggle} from './toggle';\nimport {MatTreeNodeOutlet} from './outlet';\nimport {MatTreeNodePadding} from './padding';\n\nconst MAT_TREE_DIRECTIVES = [\n  MatNestedTreeNode,\n  MatTreeNodeDef,\n  MatTreeNodePadding,\n  MatTreeNodeToggle,\n  MatTree,\n  MatTreeNode,\n  MatTreeNodeOutlet\n];\n\n@NgModule({\n  imports: [CdkTreeModule, CommonModule, MatCommonModule],\n  exports: MAT_TREE_DIRECTIVES,\n  declarations: MAT_TREE_DIRECTIVES,\n})\nexport class MatTreeModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CollectionViewer, DataSource} from '@angular/cdk/collections';\nimport {FlatTreeControl, TreeControl} from '@angular/cdk/tree';\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\nimport {map, take} from 'rxjs/operators';\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class MatTreeFlattener<T, F> {\n\n  constructor(public transformFunction: (node: T, level: number) => F,\n              public getLevel: (node: F) => number,\n              public isExpandable: (node: F) => boolean,\n              public getChildren: (node: T) => Observable<T[]> | T[]) {}\n\n  _flattenNode(node: T, level: number,\n               resultNodes: F[], parentMap: boolean[]): F[] {\n    const flatNode = this.transformFunction(node, level);\n    resultNodes.push(flatNode);\n\n    if (this.isExpandable(flatNode)) {\n      const childrenNodes = this.getChildren(node);\n      if (Array.isArray(childrenNodes)) {\n        this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n      } else {\n        childrenNodes.pipe(take(1)).subscribe(children => {\n          this._flattenChildren(children, level, resultNodes, parentMap);\n        });\n      }\n    }\n    return resultNodes;\n  }\n\n  _flattenChildren(children: T[], level: number,\n                   resultNodes: F[], parentMap: boolean[]): void {\n    children.forEach((child, index) => {\n      let childParentMap: boolean[] = parentMap.slice();\n      childParentMap.push(index != children.length - 1);\n      this._flattenNode(child, level + 1, resultNodes, childParentMap);\n    });\n  }\n\n  /**\n   * Flatten a list of node type T to flattened version of node F.\n   * Please note that type T may be nested, and the length of `structuredData` may be different\n   * from that of returned list `F[]`.\n   */\n  flattenNodes(structuredData: T[]): F[] {\n    let resultNodes: F[] = [];\n    structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n    return resultNodes;\n  }\n\n  /**\n   * Expand flattened node with current expansion status.\n   * The returned list may have different length.\n   */\n  expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n    let results: F[] = [];\n    let currentExpand: boolean[] = [];\n    currentExpand[0] = true;\n\n    nodes.forEach(node => {\n      let expand = true;\n      for (let i = 0; i <= this.getLevel(node); i++) {\n        expand = expand && currentExpand[i];\n      }\n      if (expand) {\n        results.push(node);\n      }\n      if (this.isExpandable(node)) {\n        currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n      }\n    });\n    return results;\n  }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n */\nexport class MatTreeFlatDataSource<T, F> extends DataSource<F> {\n  _flattenedData = new BehaviorSubject<F[]>([]);\n\n  _expandedData = new BehaviorSubject<F[]>([]);\n\n  _data: BehaviorSubject<T[]>;\n  get data() { return this._data.value; }\n  set data(value: T[]) {\n    this._data.next(value);\n    this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n    this.treeControl.dataNodes = this._flattenedData.value;\n  }\n\n  constructor(private treeControl: FlatTreeControl<F>,\n              private treeFlattener: MatTreeFlattener<T, F>,\n              initialData: T[] = []) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<F[]> {\n    const changes = [\n      collectionViewer.viewChange,\n      this.treeControl.expansionModel.onChange,\n      this._flattenedData\n    ];\n    return merge(...changes).pipe(map(() => {\n      this._expandedData.next(\n        this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n      return this._expandedData.value;\n    }));\n  }\n\n  disconnect() {\n    // no op\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CollectionViewer, DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class MatTreeNestedDataSource<T> extends DataSource<T> {\n  _data = new BehaviorSubject<T[]>([]);\n\n  /**\n   * Data for the nested tree\n   */\n  get data() { return this._data.value; }\n  set data(value: T[]) { this._data.next(value); }\n\n  connect(collectionViewer: CollectionViewer): Observable<T[]> {\n    return merge(...[collectionViewer.viewChange, this._data])\n      .pipe(map(() => {\n        return this.data;\n      }));\n  }\n\n  disconnect() {\n    // no op\n  }\n}\n"]}