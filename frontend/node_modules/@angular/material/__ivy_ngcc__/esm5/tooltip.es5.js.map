{"version":3,"file":"tooltip.es5.js","sources":["../../../src/lib/tooltip/tooltip-animations.ts","../../../src/lib/tooltip/tooltip.ts","../../../src/lib/tooltip/tooltip-module.ts"],"names":["tslib_1.__assign"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nexport const matTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({opacity: 0, transform: 'scale(0)'})),\n    state('visible', style({transform: 'scale(1)'})),\n    transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n      style({opacity: 0, transform: 'scale(0)', offset: 0}),\n      style({opacity: 0.5, transform: 'scale(0.99)', offset: 0.5}),\n      style({opacity: 1, transform: 'scale(1)', offset: 1})\n    ]))),\n    transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({opacity: 0}))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent} from '@angular/animations';\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  VerticalConnectionPos,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {Platform} from '@angular/cdk/platform';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subject, Observable} from 'rxjs';\nimport {matTooltipAnimations} from './tooltip-animations';\n\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/** CSS class that will be attached to the overlay panel. */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nexport function getMatTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({scrollThrottle: SCROLL_THROTTLE_MS});\n}\n\n/** @docs-private */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n\n/** Default `matTooltip` options that can be overridden. */\nexport interface MatTooltipDefaultOptions {\n  showDelay: number;\n  hideDelay: number;\n  touchendHideDelay: number;\n}\n\n/** Injection token to be used to override the default options for `matTooltip`. */\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options', {\n      providedIn: 'root',\n      factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): MatTooltipDefaultOptions {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500,\n  };\n}\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\n@Directive({\n  selector: '[matTooltip]',\n  exportAs: 'matTooltip',\n  host: {\n    '(longpress)': 'show()',\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': '_handleTouchend()',\n  },\n})\nexport class MatTooltip implements OnDestroy {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\n\n  private _portal: ComponentPortal<TooltipComponent>;\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('matTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        this._updatePosition();\n\n        if (this._tooltipInstance) {\n          this._tooltipInstance!.show(0);\n        }\n\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('matTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('matTooltipShowDelay') showDelay = this._defaultOptions.showDelay;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('matTooltipHideDelay') hideDelay = this._defaultOptions.hideDelay;\n\n  private _message = '';\n\n  /** The message to be displayed in the tooltip */\n  @Input('matTooltip')\n  get message() { return this._message; }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._updateTooltipMessage();\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n    }\n  }\n\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  @Input('matTooltipClass')\n  get tooltipClass() { return this._tooltipClass; }\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n\n  private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    private _platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) scrollStrategy: any,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions: MatTooltipDefaultOptions) {\n\n    this._scrollStrategy = scrollStrategy;\n    const element: HTMLElement = _elementRef.nativeElement;\n    const elementStyle = element.style as CSSStyleDeclaration & {webkitUserDrag: string};\n\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (!_platform.IOS && !_platform.ANDROID) {\n      this._manualListeners\n        .set('mouseenter', () => this.show())\n        .set('mouseleave', () => this.hide())\n        .forEach((listener, event) => element.addEventListener(event, listener));\n    }\n\n    if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n      // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n      // will add some inline styles by default, including `user-select: none`. This is\n      // problematic on iOS and in Safari, because it will prevent users from typing in inputs.\n      // Since `user-select: none` is not needed for the `longpress` event and can cause unexpected\n      // behavior for text fields, we always clear the `user-select` to avoid such issues.\n      elementStyle.webkitUserSelect = elementStyle.userSelect = elementStyle.msUserSelect = '';\n    }\n\n    // Hammer applies `-webkit-user-drag: none` on all elements by default,\n    // which breaks the native drag&drop. If the consumer explicitly made\n    // the element draggable, clear the `-webkit-user-drag`.\n    if (element.draggable && elementStyle.webkitUserDrag === 'none') {\n      elementStyle.webkitUserDrag = '';\n    }\n\n    _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        _ngZone.run(() => this.hide(0));\n      } else if (origin === 'keyboard') {\n        _ngZone.run(() => this.show());\n      }\n    });\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    if (!this._platform.IOS) {\n      this._manualListeners.forEach((listener, event) =>\n        this._elementRef.nativeElement.removeEventListener(event, listener));\n\n      this._manualListeners.clear();\n    }\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message || (this._isTooltipVisible() &&\n      !this._tooltipInstance!._showTimeoutId && !this._tooltipInstance!._hideTimeoutId)) {\n        return;\n    }\n\n    const overlayRef = this._createOverlay();\n\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = overlayRef.attach(this._portal).instance;\n    this._tooltipInstance.afterHidden()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    this._tooltipInstance!.show(delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Handles the keydown events on the host element. */\n  _handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n\n  /** Handles the touchend events on the host element. */\n  _handleTouchend() {\n    this.hide(this._defaultOptions.touchendHideDelay);\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    if (this._overlayRef) {\n      return this._overlayRef;\n    }\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position()\n      .flexibleConnectedTo(this._elementRef)\n      .withTransformOriginOn('.mat-tooltip')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8);\n\n    const scrollableAncestors = this._scrollDispatcher\n      .getAncestorScrollContainers(this._elementRef);\n\n    strategy.withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n\n    this._overlayRef = this._overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy()\n    });\n\n    this._updatePosition();\n\n    this._overlayRef.detachments()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n\n    return this._overlayRef;\n  }\n\n  /** Detaches the currently-attached tooltip. */\n  private _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /** Updates the position of the current tooltip. */\n  private _updatePosition() {\n    const position =\n        this._overlayRef!.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    position.withPositions([\n      {...origin.main, ...overlay.main},\n      {...origin.fallback, ...overlay.fallback}\n    ]);\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n   */\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let originPosition: OriginConnectionPosition;\n\n    if (position == 'above' || position == 'below') {\n      originPosition = {originX: 'center', originY: position == 'above' ? 'top' : 'bottom'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      originPosition = {originX: 'start', originY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      originPosition = {originX: 'end', originY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n    return {\n      main: originPosition,\n      fallback: {originX: x, originY: y}\n    };\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let overlayPosition: OverlayConnectionPosition;\n\n    if (position == 'above') {\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (position == 'below') {\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n    return {\n      main: overlayPosition,\n      fallback: {overlayX: x, overlayY: y}\n    };\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(\n        take(1),\n        takeUntil(this._destroyed)\n      ).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef!.updatePosition();\n        }\n      });\n    }\n  }\n\n  /** Updates the tooltip class */\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  /** Inverts an overlay position. */\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n\n    return {x, y};\n  }\n}\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class TooltipComponent {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number | null;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number | null;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<any> = new Subject();\n\n  /** Stream that emits whether the user has a handset-sized display.  */\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _breakpointObserver: BreakpointObserver) {}\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n      this._hideTimeoutId = null;\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n      this._showTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n      this._showTimeoutId = null;\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._hideTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.io/design/components/tooltips.html#behavior\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {GestureConfig, MatCommonModule} from '@angular/material/core';\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {\n  MatTooltip,\n  TooltipComponent,\n  MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './tooltip';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n  ],\n  exports: [MatTooltip, TooltipComponent, MatCommonModule],\n  declarations: [MatTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [\n    MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig},\n  ]\n})\nexport class MatTooltipModule {}\n"]}