{"version":3,"file":"table.es5.js","sources":["../../../src/lib/table/table.ts","../../../src/lib/table/cell.ts","../../../src/lib/table/row.ts","../../../src/lib/table/table-module.ts","../../../src/lib/table/table-data-source.ts"],"names":["tslib_1.__extends","observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CDK_TABLE_TEMPLATE, CdkTable} from '@angular/cdk/table';\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\n\n// TODO(devversion): workaround for https://github.com/angular/material2/issues/12760\nexport const _CdkTable = CdkTable;\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-table, table[mat-table]',\n  exportAs: 'matTable',\n  template: CDK_TABLE_TEMPLATE,\n  styleUrls: ['table.css'],\n  host: {\n    'class': 'mat-table',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTable<T> extends _CdkTable<T> {\n  /** Overrides the sticky CSS class set by the `CdkTable`. */\n  protected stickyCssClass = 'mat-table-sticky';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Input} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef, CdkFooterCell, CdkFooterCellDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n// TODO(devversion): workaround for https://github.com/angular/material2/issues/12760\nexport const _CdkCellDef = CdkCellDef;\nexport const _CdkHeaderCellDef = CdkHeaderCellDef;\nexport const _CdkFooterCellDef = CdkFooterCellDef;\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: MatCellDef}]\n})\nexport class MatCellDef extends _CdkCellDef {}\n\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef}]\n})\nexport class MatHeaderCellDef extends _CdkHeaderCellDef {}\n\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matFooterCellDef]',\n  providers: [{provide: CdkFooterCellDef, useExisting: MatFooterCellDef}]\n})\nexport class MatFooterCellDef extends _CdkFooterCellDef {}\n\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[matColumnDef]',\n  providers: [\n    {provide: CdkColumnDef, useExisting: MatColumnDef},\n    {provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef}\n  ],\n})\nexport class MatColumnDef extends CdkColumnDef {\n  /** Unique name for this column. */\n  @Input('matColumnDef') name: string;\n\n  /** Whether this column should be sticky positioned at the start of the row */\n  @Input() sticky: boolean;\n\n  /** Whether this column should be sticky positioned on the end of the row */\n  @Input() stickyEnd: boolean;\n}\n\n/** Header cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-header-cell, th[mat-header-cell]',\n  host: {\n    'class': 'mat-header-cell',\n    'role': 'columnheader',\n  },\n})\nexport class MatHeaderCell extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef<HTMLElement>) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n/** Footer cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-footer-cell, td[mat-footer-cell]',\n  host: {\n    'class': 'mat-footer-cell',\n    'role': 'gridcell',\n  },\n})\nexport class MatFooterCell extends CdkFooterCell {\n  constructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n/** Cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-cell, td[mat-cell]',\n  host: {\n    'class': 'mat-cell',\n    'role': 'gridcell',\n  },\n})\nexport class MatCell extends CdkCell {\n  constructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef<HTMLElement>) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n// TODO(devversion): workaround for https://github.com/angular/material2/issues/12760\nexport const _CdkHeaderRowDef = CdkHeaderRowDef;\nexport const _CdkFooterRowDef = CdkFooterRowDef;\nexport const _CdkRowDef = CdkRowDef;\n\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[matHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef}],\n  inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n})\nexport class MatHeaderRowDef extends _CdkHeaderRowDef {}\n\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n@Directive({\n  selector: '[matFooterRowDef]',\n  providers: [{provide: CdkFooterRowDef, useExisting: MatFooterRowDef}],\n  inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n})\nexport class MatFooterRowDef extends _CdkFooterRowDef {}\n\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[matRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: MatRowDef}],\n  inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n})\nexport class MatRowDef<T> extends _CdkRowDef<T> {}\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-header-row, tr[mat-header-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-header-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matHeaderRow',\n  providers: [{provide: CdkHeaderRow, useExisting: MatHeaderRow}],\n})\nexport class MatHeaderRow extends CdkHeaderRow { }\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-footer-row, tr[mat-footer-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-footer-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matFooterRow',\n  providers: [{provide: CdkFooterRow, useExisting: MatFooterRow}],\n})\nexport class MatFooterRow extends CdkFooterRow { }\n\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-row, tr[mat-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matRow',\n  providers: [{provide: CdkRow, useExisting: MatRow}],\n})\nexport class MatRow extends CdkRow { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatTable} from './table';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatFooterCell,\n  MatFooterCellDef,\n  MatHeaderCell,\n  MatHeaderCellDef\n} from './cell';\nimport {\n  MatFooterRow,\n  MatFooterRowDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef\n} from './row';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule} from '@angular/material/core';\n\nconst EXPORTED_DECLARATIONS = [\n  // Table\n  MatTable,\n\n  // Template defs\n  MatHeaderCellDef,\n  MatHeaderRowDef,\n  MatColumnDef,\n  MatCellDef,\n  MatRowDef,\n  MatFooterCellDef,\n  MatFooterRowDef,\n\n  // Cell directives\n  MatHeaderCell,\n  MatCell,\n  MatFooterCell,\n\n  // Row directions\n  MatHeaderRow,\n  MatRow,\n  MatFooterRow,\n];\n\n@NgModule({\n  imports: [CdkTableModule, CommonModule, MatCommonModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class MatTableModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {_isNumberValue} from '@angular/cdk/coercion';\nimport {DataSource} from '@angular/cdk/table';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  merge,\n  Observable,\n  of as observableOf,\n  Subscription\n} from 'rxjs';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport {map} from 'rxjs/operators';\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n */\nexport class MatTableDataSource<T> extends DataSource<T> {\n  /** Stream that emits when a new data array is set on the data source. */\n  private readonly _data: BehaviorSubject<T[]>;\n\n  /** Stream emitting render data to the table (depends on ordered data changes). */\n  private readonly _renderData = new BehaviorSubject<T[]>([]);\n\n  /** Stream that emits when a new filter string is set on the data source. */\n  private readonly _filter = new BehaviorSubject<string>('');\n\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  _renderChangesSubscription = Subscription.EMPTY;\n\n  /**\n   * The filtered set of data that has been matched by the filter string, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData: T[];\n\n  /** Array of data that should be rendered by the table, where each object represents one row. */\n  get data() { return this._data.value; }\n  set data(data: T[]) { this._data.next(data); }\n\n  /**\n   * Filter term that should be used to filter out objects from the data array. To override how\n   * data objects match to this filter string, provide a custom function for filterPredicate.\n   */\n  get filter(): string { return this._filter.value; }\n  set filter(filter: string) { this._filter.next(filter); }\n\n  /**\n   * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n   * emitted by the MatSort will trigger an update to the table's rendered data.\n   */\n  get sort(): MatSort | null { return this._sort; }\n  set sort(sort: MatSort|null) {\n    this._sort = sort;\n    this._updateChangeSubscription();\n  }\n  private _sort: MatSort|null;\n\n  /**\n   * Instance of the MatPaginator component used by the table to control what page of the data is\n   * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n   * table's rendered data.\n   *\n   * Note that the data source uses the paginator's properties to calculate which page of data\n   * should be displayed. If the paginator receives its properties as template inputs,\n   * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n   * initialized before assigning it to this data source.\n   */\n  get paginator(): MatPaginator | null { return this._paginator; }\n  set paginator(paginator: MatPaginator|null) {\n    this._paginator = paginator;\n    this._updateChangeSubscription();\n  }\n  private _paginator: MatPaginator|null;\n\n  /**\n   * Data accessor function that is used for accessing data properties for sorting through\n   * the default sortData function.\n   * This default function assumes that the sort header IDs (which defaults to the column name)\n   * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n   * May be set to a custom function for different behavior.\n   * @param data Data object that is being accessed.\n   * @param sortHeaderId The name of the column that represents the data.\n   */\n  sortingDataAccessor: ((data: T, sortHeaderId: string) => string|number) =\n      (data: T, sortHeaderId: string): string|number => {\n    const value = (data as {[key: string]: any})[sortHeaderId];\n\n    if (_isNumberValue(value)) {\n      const numberValue = Number(value);\n\n      // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n      // leave them as strings. For more info: https://goo.gl/y5vbSg\n      return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n    }\n\n    return value;\n  }\n\n  /**\n   * Gets a sorted copy of the data array based on the state of the MatSort. Called\n   * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n   * By default, the function retrieves the active sort and its direction and compares data\n   * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n   * of data ordering.\n   * @param data The array of data that should be sorted.\n   * @param sort The connected MatSort that holds the current sort state.\n   */\n  sortData: ((data: T[], sort: MatSort) => T[]) = (data: T[], sort: MatSort): T[] => {\n    const active = sort.active;\n    const direction = sort.direction;\n    if (!active || direction == '') { return data; }\n\n    return data.sort((a, b) => {\n      let valueA = this.sortingDataAccessor(a, active);\n      let valueB = this.sortingDataAccessor(b, active);\n\n      // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n      // one value exists while the other doesn't. In this case, existing value should come first.\n      // This avoids inconsistent results when comparing values to undefined/null.\n      // If neither value exists, return 0 (equal).\n      let comparatorResult = 0;\n      if (valueA != null && valueB != null) {\n        // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n        if (valueA > valueB) {\n          comparatorResult = 1;\n        } else if (valueA < valueB) {\n          comparatorResult = -1;\n        }\n      } else if (valueA != null) {\n        comparatorResult = 1;\n      } else if (valueB != null) {\n        comparatorResult = -1;\n      }\n\n      return comparatorResult * (direction == 'asc' ? 1 : -1);\n    });\n  }\n\n  /**\n   * Checks if a data object matches the data source's filter string. By default, each data object\n   * is converted to a string of its properties and returns true if the filter has\n   * at least one occurrence in that string. By default, the filter string has its whitespace\n   * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n   * filter matching.\n   * @param data Data object used to check against the filter.\n   * @param filter Filter string that has been set on the data source.\n   * @returns Whether the filter matches against the data\n   */\n  filterPredicate: ((data: T, filter: string) => boolean) = (data: T, filter: string): boolean => {\n    // Transform the data into a lowercase string of all property values.\n    const dataStr = Object.keys(data).reduce((currentTerm: string, key: string) => {\n      // Use an obscure Unicode character to delimit the words in the concatenated string.\n      // This avoids matches where the values of two columns combined will match the user's query\n      // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n      // that has a very low chance of being typed in by somebody in a text field. This one in\n      // particular is \"White up-pointing triangle with dot\" from\n      // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n      return currentTerm + (data as {[key: string]: any})[key] + '◬';\n    }, '').toLowerCase();\n\n    // Transform the filter by converting it to lowercase and removing whitespace.\n    const transformedFilter = filter.trim().toLowerCase();\n\n    return dataStr.indexOf(transformedFilter) != -1;\n  }\n\n  constructor(initialData: T[] = []) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n    this._updateChangeSubscription();\n  }\n\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with\n   * the provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription() {\n    // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n    // The events should emit whenever the component emits a change or initializes, or if no\n    // component is provided, a stream with just a null event should be provided.\n    // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n    // pipeline can progress to the next step. Note that the value from these streams are not used,\n    // they purely act as a signal to progress in the pipeline.\n    const sortChange: Observable<Sort|null|void> = this._sort ?\n        merge<Sort|void>(this._sort.sortChange, this._sort.initialized) :\n        observableOf(null);\n    const pageChange: Observable<PageEvent|null|void> = this._paginator ?\n        merge<PageEvent|void>(this._paginator.page, this._paginator.initialized) :\n        observableOf(null);\n\n    const dataStream = this._data;\n    // Watch for base data or filter changes to provide a filtered set of data.\n    const filteredData = combineLatest(dataStream, this._filter)\n      .pipe(map(([data]) => this._filterData(data)));\n    // Watch for filtered data or sort changes to provide an ordered set of data.\n    const orderedData = combineLatest(filteredData, sortChange)\n      .pipe(map(([data]) => this._orderData(data)));\n    // Watch for ordered data or page changes to provide a paged set of data.\n    const paginatedData = combineLatest(orderedData, pageChange)\n      .pipe(map(([data]) => this._pageData(data)));\n    // Watched for paged data changes and send the result to the table to render.\n    this._renderChangesSubscription.unsubscribe();\n    this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n  }\n\n  /**\n   * Returns a filtered data array where each filter object contains the filter string within\n   * the result of the filterTermAccessor function. If no filter is set, returns the data array\n   * as provided.\n   */\n  _filterData(data: T[]) {\n    // If there is a filter string, filter out data that does not contain it.\n    // Each data object is converted to a string using the function defined by filterTermAccessor.\n    // May be overridden for customization.\n    this.filteredData =\n        !this.filter ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n\n    if (this.paginator) { this._updatePaginator(this.filteredData.length); }\n\n    return this.filteredData;\n  }\n\n  /**\n   * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n   * data array as provided. Uses the default data accessor for data lookup, unless a\n   * sortDataAccessor function is defined.\n   */\n  _orderData(data: T[]): T[] {\n    // If there is no active sort or direction, return the data without trying to sort.\n    if (!this.sort) { return data; }\n\n    return this.sortData(data.slice(), this.sort);\n  }\n\n  /**\n   * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n   * index and length. If there is no paginator provided, returns the data array as provided.\n   */\n  _pageData(data: T[]): T[] {\n    if (!this.paginator) { return data; }\n\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.slice().splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n   * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n   * guard against making property changes within a round of change detection.\n   */\n  _updatePaginator(filteredDataLength: number) {\n    Promise.resolve().then(() => {\n      if (!this.paginator) { return; }\n\n      this.paginator.length = filteredDataLength;\n\n      // If the page index is set beyond the page, reduce it to the last page.\n      if (this.paginator.pageIndex > 0) {\n        const lastPageIndex = Math.ceil(this.paginator.length / this.paginator.pageSize) - 1 || 0;\n        this.paginator.pageIndex = Math.min(this.paginator.pageIndex, lastPageIndex);\n      }\n    });\n  }\n\n  /**\n   * Used by the MatTable. Called when it connects to the data source.\n   * @docs-private\n   */\n  connect() { return this._renderData; }\n\n  /**\n   * Used by the MatTable. Called when it is destroyed. No-op.\n   * @docs-private\n   */\n  disconnect() { }\n}\n"]}