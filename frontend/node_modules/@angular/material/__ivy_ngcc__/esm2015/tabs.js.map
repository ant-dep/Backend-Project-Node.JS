{"version":3,"file":"tabs.js","sources":["../../../src/lib/tabs/ink-bar.ts","../../../src/lib/tabs/tab-content.ts","../../../src/lib/tabs/tab-label.ts","../../../src/lib/tabs/tab.ts","../../../src/lib/tabs/tabs-animations.ts","../../../src/lib/tabs/tab-body.ts","../../../src/lib/tabs/tab-label-wrapper.ts","../../../src/lib/tabs/tab-header.ts","../../../src/lib/tabs/tab-group.ts","../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../../src/lib/tabs/tabs-module.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone} from '@angular/core';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n// TODO(devversion): Workaround for https://github.com/angular/material2/issues/12760\nexport const _CdkPortal = CdkPortal;\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends _CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MatTabContent} from './tab-content';\nimport {MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nexport class MatTabBase {}\nexport const _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel) templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef}) _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {Subscription} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\n      super(componentFactoryResolver, viewContainerRef);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  },\n})\nexport class MatTabBody implements OnInit, OnDestroy {\n\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number;\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              /**\n               * @breaking-change 8.0.0 changeDetectorRef to be made required.\n               */\n              changeDetectorRef?: ChangeDetectorRef) {\n\n    if (this._dir && changeDetectorRef) {\n      this._dirChangeSubscription = this._dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin();\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n  }\n\n  _onTranslateTabStarted(e: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(e.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  _onTranslateTabComplete(e: AnimationEvent): void {\n    // If the transition to the center is complete, emit an event.\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n      this._onCentered.emit();\n    }\n\n    if (this._isCenterPosition(e.fromState) && !this._isCenterPosition(this._position)) {\n      this._afterLeavingCenter.emit();\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nexport class MatTabLabelWrapperBase {}\nexport const _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {END, ENTER, HOME, SPACE} from '@angular/cdk/keycodes';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisableRipple, CanDisableRippleCtor, mixinDisableRipple} from '@angular/material/core';\nimport {merge, of as observableOf, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to MatTabHeader.\n/** @docs-private */\nexport class MatTabHeaderBase {}\nexport const _MatTabHeaderMixinBase: CanDisableRippleCtor & typeof MatTabHeaderBase =\n    mixinDisableRipple(MatTabHeaderBase);\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderMixinBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy, CanDisableRipple {\n\n  @ContentChildren(MatTabLabelWrapper) _labelWrappers: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer') _tabListContainer: ElementRef;\n  @ViewChild('tabList') _tabList: ElementRef;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatTabLabelWrapper>;\n\n  private _selectedIndex: number = 0;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n    this._selectedIndexChanged = this._selectedIndex != value;\n    this._selectedIndex = value;\n\n    if (this._keyManager) {\n      this._keyManager.updateActiveItemIndex(value);\n    }\n  }\n\n  /** Event emitted when the option is selected. */\n  @Output() readonly selectFocusedIndex = new EventEmitter();\n\n  /** Event emitted when a label is focused. */\n  @Output() readonly indexFocused = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              // @breaking-change 8.0.0 `_ngZone` parameter to be made required.\n              private _ngZone?: NgZone) {\n    super();\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._labelWrappers.length) {\n      this._updatePagination();\n      this._tabLabelCount = this._labelWrappers.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  _handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Aligns the ink bar to the selected tab on load.\n   */\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this._updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager(this._labelWrappers)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      realign();\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const zoneCallback = () => {\n      this._updatePagination();\n      this._alignInkBarToSelectedTab();\n      this._changeDetectorRef.markForCheck();\n    };\n\n    // The content observer runs outside the `NgZone` by default, which\n    // means that we need to bring the callback back in ourselves.\n    // @breaking-change 8.0.0 Remove null check for `_ngZone` once it's a required parameter.\n    this._ngZone ? this._ngZone.run(zoneCallback) : zoneCallback();\n  }\n\n  /**\n   * Updating the view whether pagination should be enabled or not\n   */\n  _updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._labelWrappers) { return true; }\n\n    const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/material2/issues/10276\n    this._tabList.nativeElement.style.transform = `translateX(${translateX}px)`;\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(scrollDir: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = selectedLabel.getOffsetLeft();\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    const isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n        null;\n\n    this._inkBar.alignToElement(selectedLabelWrapper!);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, Subscription} from 'rxjs';\nimport {MatTab} from './tab';\nimport {MatTabHeader} from './tab-header';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nexport class MatTabGroupBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupBase =\n    mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\n\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\n\n  @ViewChild('tabHeader') _tabHeader: MatTabHeader;\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef);\n    this._groupId = nextId++;\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n    this._tabBodyWrapper.nativeElement.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabHeader, idx: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = idx;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor, CanColorCtor,\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, of as observableOf, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MatInkBar} from '../ink-bar';\nimport {FocusMonitor} from '@angular/cdk/a11y';\n\n\n// Boilerplate for applying mixins to MatTabNav.\n/** @docs-private */\nexport class MatTabNavBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatTabNavMixinBase: CanDisableRippleCtor & CanColorCtor & typeof MatTabNavBase =\n    mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color', 'disableRipple'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {'class': 'mat-tab-nav-bar'},\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavMixinBase\n    implements AfterContentChecked, AfterContentInit, CanColor, CanDisableRipple, OnDestroy {\n\n  /** Subject that emits when the component has been destroyed. */\n  private readonly _onDestroy = new Subject<void>();\n\n  private _activeLinkChanged: boolean;\n  private _activeLinkElement: ElementRef<HTMLElement> | null;\n\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\n\n  /** Query list of all tab links of the tab navigation. */\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true})\n  _tabLinks: QueryList<MatTabLink>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  constructor(elementRef: ElementRef,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler) {\n    super(elementRef);\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(element: ElementRef) {\n    // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n    // @breaking-change 8.0.0\n    this._activeLinkChanged = !!element;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentInit(): void {\n    this._ngZone.runOutsideAngular(() => {\n      const dirChange = this._dir ? this._dir.change : observableOf(null);\n\n      return merge(dirChange, this._viewportRuler.change(10))\n          .pipe(takeUntil(this._onDestroy))\n          .subscribe(() => this._alignInkBar());\n    });\n  }\n\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\n  ngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      const activeTab = this._tabLinks.find(tab => tab.active);\n\n      this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  /** Aligns the ink bar to the active link. */\n  _alignInkBar(): void {\n    if (this._activeLinkElement) {\n      this._inkBar.show();\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n}\n\n\n// Boilerplate for applying mixins to MatTabLink.\nexport class MatTabLinkBase {}\nexport const _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-current]': 'active',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkMixinBase\n    implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Reference to the RippleRenderer for the tab-link. */\n  protected _tabLinkRipple: RippleRenderer;\n\n  /** Whether the ripples are globally disabled through the RippleGlobalOptions */\n  private _ripplesGloballyDisabled = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig = {};\n\n  /**\n   * Whether ripples are disabled on interaction\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      this._ripplesGloballyDisabled;\n  }\n\n  constructor(private _tabNavBar: MatTabNav,\n              public _elementRef: ElementRef,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions,\n              @Attribute('tabindex') tabIndex: string,\n              /**\n               * @deprecated\n               * @breaking-change 8.0.0 `_focusMonitor` parameter to be made required.\n               */\n              private _focusMonitor?: FocusMonitor) {\n    super();\n\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (globalOptions) {\n      // TODO(paul): Do not copy each option manually. Allow dynamic global option changes: #9729\n      this._ripplesGloballyDisabled = !!globalOptions.disabled;\n      this.rippleConfig = {\n        terminateOnPointerUp: globalOptions.terminateOnPointerUp,\n        animation: globalOptions.animation,\n      };\n    }\n\n    if (_focusMonitor) {\n      _focusMonitor.monitor(_elementRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabLinkRipple._removeTriggerEvents();\n\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup} from './tab-group';\nimport {MatTabHeader} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\nimport {A11yModule} from '@angular/cdk/a11y';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n  ],\n})\nexport class MatTabsModule {}\n"]}