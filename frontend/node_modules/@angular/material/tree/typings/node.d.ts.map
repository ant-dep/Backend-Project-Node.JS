{"version":3,"file":"node.d.ts","sources":["node.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CdkNestedTreeNode, CdkTree, CdkTreeNode, CdkTreeNodeDef } from '@angular/cdk/tree';\nimport { AfterContentInit, ElementRef, IterableDiffers, OnDestroy, QueryList } from '@angular/core';\nimport { CanDisable, CanDisableCtor, HasTabIndex, HasTabIndexCtor } from '@angular/material/core';\nimport { MatTreeNodeOutlet } from './outlet';\nexport declare const _CdkTreeNodeDef: typeof CdkTreeNodeDef;\nexport declare const _MatTreeNodeMixinBase: HasTabIndexCtor & CanDisableCtor & typeof CdkTreeNode;\nexport declare const _MatNestedTreeNodeMixinBase: HasTabIndexCtor & CanDisableCtor & typeof CdkNestedTreeNode;\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nexport declare class MatTreeNode<T> extends _MatTreeNodeMixinBase<T> implements CanDisable, HasTabIndex {\n    protected _elementRef: ElementRef<HTMLElement>;\n    protected _tree: CdkTree<T>;\n    role: 'treeitem' | 'group';\n    constructor(_elementRef: ElementRef<HTMLElement>, _tree: CdkTree<T>, tabIndex: string);\n}\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n */\nexport declare class MatTreeNodeDef<T> extends _CdkTreeNodeDef<T> {\n    data: T;\n}\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nexport declare class MatNestedTreeNode<T> extends _MatNestedTreeNodeMixinBase<T> implements AfterContentInit, CanDisable, HasTabIndex, OnDestroy {\n    protected _elementRef: ElementRef<HTMLElement>;\n    protected _tree: CdkTree<T>;\n    protected _differs: IterableDiffers;\n    node: T;\n    nodeOutlet: QueryList<MatTreeNodeOutlet>;\n    constructor(_elementRef: ElementRef<HTMLElement>, _tree: CdkTree<T>, _differs: IterableDiffers, tabIndex: string);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n}\n"]}