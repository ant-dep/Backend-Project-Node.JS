{"ast":null,"code":"import _createClass from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, Inject, isDevMode, ViewEncapsulation, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nvar _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nvar _c1 = [\"*\", \"mat-toolbar-row\"];\n\nvar MatToolbarBase =\n/**\n * @param {?} _elementRef\n */\nfunction MatToolbarBase(_elementRef) {\n  _classCallCheck(this, MatToolbarBase);\n\n  this._elementRef = _elementRef;\n};\n/** @type {?} */\n\n\nvar _MatToolbarMixinBase = mixinColor(MatToolbarBase);\n\nvar MatToolbarRow = function MatToolbarRow() {\n  _classCallCheck(this, MatToolbarRow);\n};\n\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) {\n  return new (t || MatToolbarRow)();\n};\n\nMatToolbarRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatToolbarRow,\n  selectors: [[\"mat-toolbar-row\"]],\n  hostAttrs: [1, \"mat-toolbar-row\"],\n  exportAs: [\"matToolbarRow\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-toolbar-row',\n      exportAs: 'matToolbarRow',\n      host: {\n        'class': 'mat-toolbar-row'\n      }\n    }]\n  }], null, null);\n})();\n\nvar MatToolbar = /*#__PURE__*/function (_MatToolbarMixinBase2) {\n  _inherits(MatToolbar, _MatToolbarMixinBase2);\n\n  var _super = _createSuper(MatToolbar);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} _platform\n   * @param {?=} document\n   */\n  function MatToolbar(elementRef, _platform, document) {\n    var _this;\n\n    _classCallCheck(this, MatToolbar);\n\n    _this = _super.call(this, elementRef);\n    _this._platform = _platform; // TODO: make the document a required param when doing breaking changes.\n\n    _this._document = document;\n    return _this;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(MatToolbar, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      if (!isDevMode() || !this._platform.isBrowser) {\n        return;\n      }\n\n      this._checkToolbarMixedModes();\n\n      this._toolbarRows.changes.subscribe(function () {\n        return _this2._checkToolbarMixedModes();\n      });\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_checkToolbarMixedModes\",\n    value: function _checkToolbarMixedModes() {\n      var _this3 = this;\n\n      if (!this._toolbarRows.length) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes).filter(function (node) {\n        return !(node.classList && node.classList.contains('mat-toolbar-row'));\n      }).filter(function (node) {\n        return node.nodeType !== (_this3._document ? _this3._document.COMMENT_NODE : 8);\n      }).some(function (node) {\n        return !!(node.textContent && node.textContent.trim());\n      });\n\n      if (isCombinedUsage) {\n        throwToolbarMixedModesError();\n      }\n    }\n  }]);\n\n  return MatToolbar;\n}(_MatToolbarMixinBase);\n\nMatToolbar.ɵfac = function MatToolbar_Factory(t) {\n  return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nMatToolbar.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatToolbar,\n  selectors: [[\"mat-toolbar\"]],\n  contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 4);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-toolbar\"],\n  hostVars: 4,\n  hostBindings: function MatToolbar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matToolbar\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 0,\n  template: function MatToolbar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵprojection(1, 1);\n    }\n  },\n  styles: [\"@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatToolbar.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nMatToolbar.propDecorators = {\n  _toolbarRows: [{\n    type: ContentChildren,\n    args: [MatToolbarRow]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-toolbar',\n      exportAs: 'matToolbar',\n      template: \"<ng-content></ng-content><ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\",\n      styles: [\"@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\"],\n      inputs: ['color'],\n      host: {\n        'class': 'mat-toolbar',\n        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    _toolbarRows: [{\n      type: ContentChildren,\n      args: [MatToolbarRow]\n    }]\n  });\n})();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\n\n\nfunction throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' + 'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' + 'inside of a `<mat-toolbar>` for a single row.');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar MatToolbarModule = function MatToolbarModule() {\n  _classCallCheck(this, MatToolbarModule);\n};\n\nMatToolbarModule.ɵfac = function MatToolbarModule_Factory(t) {\n  return new (t || MatToolbarModule)();\n};\n\nMatToolbarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatToolbarModule\n});\nMatToolbarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n      declarations: [MatToolbar, MatToolbarRow]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, {\n    declarations: function declarations() {\n      return [MatToolbar, MatToolbarRow];\n    },\n    imports: function imports() {\n      return [MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatToolbar, MatToolbarRow, MatCommonModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatToolbarModule, throwToolbarMixedModesError, MatToolbarBase, _MatToolbarMixinBase, MatToolbarRow, MatToolbar }; //# sourceMappingURL=toolbar.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@angular/material/__ivy_ngcc__/esm2015/toolbar.js"],"names":["Platform","DOCUMENT","ChangeDetectionStrategy","Component","ContentChildren","Directive","ElementRef","Inject","isDevMode","ViewEncapsulation","NgModule","mixinColor","MatCommonModule","ɵngcc0","ɵngcc1","_c0","_c1","MatToolbarBase","_elementRef","_MatToolbarMixinBase","MatToolbarRow","ɵfac","MatToolbarRow_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","document","_document","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","subscribe","length","isCombinedUsage","Array","from","nativeElement","childNodes","filter","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","trim","throwToolbarMixedModesError","MatToolbar_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","contentQueries","MatToolbar_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","MatToolbar_HostBindings","ɵɵclassProp","inputs","color","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","MatToolbar_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","ctorParameters","undefined","decorators","propDecorators","OnPush","None","Error","MatToolbarModule","MatToolbarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, Inject, isDevMode, ViewEncapsulation, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n            .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n            .some(node => !!(node.textContent && node.textContent.trim()));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\"@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{ selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content><ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\",\n                styles: [\"@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\"],\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow]\n        }] }); })();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); };\nMatToolbarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar, MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar, MatToolbarRow, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatToolbarModule, throwToolbarMixedModesError, MatToolbarBase, _MatToolbarMixinBase, MatToolbarRow, MatToolbar };\n\n//# sourceMappingURL=toolbar.js.map"]},"metadata":{},"sourceType":"module"}