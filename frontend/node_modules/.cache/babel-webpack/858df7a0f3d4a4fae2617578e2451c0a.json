{"ast":null,"code":"import _toConsumableArray from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { internalFromArray } from '../observable/fromArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nexport function merge() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var scheduler = popScheduler(args);\n  var concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n  return operate(function (source, subscriber) {\n    mergeAll(concurrent)(internalFromArray([source].concat(_toConsumableArray(args)), scheduler)).subscribe(subscriber);\n  });\n} //# sourceMappingURL=merge.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/rxjs/dist/esm/internal/operators/merge.js"],"names":["operate","argsOrArgArray","internalFromArray","mergeAll","popNumber","popScheduler","merge","args","scheduler","concurrent","Infinity","source","subscriber","subscribe"],"mappings":";AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,cAAxC;AACA,OAAO,SAASC,KAAT,GAAwB;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC3B,MAAMC,SAAS,GAAGH,YAAY,CAACE,IAAD,CAA9B;AACA,MAAME,UAAU,GAAGL,SAAS,CAACG,IAAD,EAAOG,QAAP,CAA5B;AACAH,EAAAA,IAAI,GAAGN,cAAc,CAACM,IAAD,CAArB;AACA,SAAOP,OAAO,CAAC,UAACW,MAAD,EAASC,UAAT,EAAwB;AACnCT,IAAAA,QAAQ,CAACM,UAAD,CAAR,CAAqBP,iBAAiB,EAAES,MAAF,4BAAaJ,IAAb,IAAoBC,SAApB,CAAtC,EAAsEK,SAAtE,CAAgFD,UAAhF;AACH,GAFa,CAAd;AAGH,C,CACD","sourcesContent":["import { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { internalFromArray } from '../observable/fromArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nexport function merge(...args) {\n    const scheduler = popScheduler(args);\n    const concurrent = popNumber(args, Infinity);\n    args = argsOrArgArray(args);\n    return operate((source, subscriber) => {\n        mergeAll(concurrent)(internalFromArray([source, ...args], scheduler)).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=merge.js.map"]},"metadata":{},"sourceType":"module"}