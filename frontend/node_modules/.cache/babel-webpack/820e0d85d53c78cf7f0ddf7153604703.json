{"ast":null,"code":"import _slicedToArray from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CDK_TABLE_TEMPLATE, CdkTable, CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation, Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, combineLatest, merge, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\nvar _CdkTable = CdkTable;\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\n\nvar MatTable = /*#__PURE__*/function (_CdkTable2) {\n  _inherits(MatTable, _CdkTable2);\n\n  var _super = _createSuper(MatTable);\n\n  function MatTable() {\n    var _this;\n\n    _classCallCheck(this, MatTable);\n\n    _this = _super.apply(this, arguments);\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     */\n\n    _this.stickyCssClass = 'mat-table-sticky';\n    return _this;\n  }\n\n  return MatTable;\n}(_CdkTable);\n\nMatTable.ɵfac = /*@__PURE__*/function () {\n  var ɵMatTable_BaseFactory;\n  return function MatTable_Factory(t) {\n    return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable);\n  };\n}();\n\nMatTable.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatTable,\n  selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]],\n  hostAttrs: [1, \"mat-table\"],\n  exportAs: [\"matTable\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 0,\n  consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n  template: function MatTable_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n      ɵngcc0.ɵɵelementContainer(1, 1);\n      ɵngcc0.ɵɵelementContainer(2, 2);\n    }\n  },\n  directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet],\n  styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTable, [{\n    type: Component,\n    args: [{\n      selector: 'mat-table, table[mat-table]',\n      exportAs: 'matTable',\n      template: CDK_TABLE_TEMPLATE,\n      styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"],\n      host: {\n        'class': 'mat-table'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar _CdkCellDef = CdkCellDef;\n/** @type {?} */\n\nvar _CdkHeaderCellDef = CdkHeaderCellDef;\n/** @type {?} */\n\nvar _CdkFooterCellDef = CdkFooterCellDef;\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n\nvar MatCellDef = /*#__PURE__*/function (_CdkCellDef2) {\n  _inherits(MatCellDef, _CdkCellDef2);\n\n  var _super2 = _createSuper(MatCellDef);\n\n  function MatCellDef() {\n    _classCallCheck(this, MatCellDef);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return MatCellDef;\n}(_CdkCellDef);\n\nMatCellDef.ɵfac = /*@__PURE__*/function () {\n  var ɵMatCellDef_BaseFactory;\n  return function MatCellDef_Factory(t) {\n    return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef);\n  };\n}();\n\nMatCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatCellDef,\n  selectors: [[\"\", \"matCellDef\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkCellDef,\n    useExisting: MatCellDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matCellDef]',\n      providers: [{\n        provide: CdkCellDef,\n        useExisting: MatCellDef\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n\n\nvar MatHeaderCellDef = /*#__PURE__*/function (_CdkHeaderCellDef2) {\n  _inherits(MatHeaderCellDef, _CdkHeaderCellDef2);\n\n  var _super3 = _createSuper(MatHeaderCellDef);\n\n  function MatHeaderCellDef() {\n    _classCallCheck(this, MatHeaderCellDef);\n\n    return _super3.apply(this, arguments);\n  }\n\n  return MatHeaderCellDef;\n}(_CdkHeaderCellDef);\n\nMatHeaderCellDef.ɵfac = /*@__PURE__*/function () {\n  var ɵMatHeaderCellDef_BaseFactory;\n  return function MatHeaderCellDef_Factory(t) {\n    return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef);\n  };\n}();\n\nMatHeaderCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatHeaderCellDef,\n  selectors: [[\"\", \"matHeaderCellDef\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkHeaderCellDef,\n    useExisting: MatHeaderCellDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matHeaderCellDef]',\n      providers: [{\n        provide: CdkHeaderCellDef,\n        useExisting: MatHeaderCellDef\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n\n\nvar MatFooterCellDef = /*#__PURE__*/function (_CdkFooterCellDef2) {\n  _inherits(MatFooterCellDef, _CdkFooterCellDef2);\n\n  var _super4 = _createSuper(MatFooterCellDef);\n\n  function MatFooterCellDef() {\n    _classCallCheck(this, MatFooterCellDef);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return MatFooterCellDef;\n}(_CdkFooterCellDef);\n\nMatFooterCellDef.ɵfac = /*@__PURE__*/function () {\n  var ɵMatFooterCellDef_BaseFactory;\n  return function MatFooterCellDef_Factory(t) {\n    return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef);\n  };\n}();\n\nMatFooterCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatFooterCellDef,\n  selectors: [[\"\", \"matFooterCellDef\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkFooterCellDef,\n    useExisting: MatFooterCellDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matFooterCellDef]',\n      providers: [{\n        provide: CdkFooterCellDef,\n        useExisting: MatFooterCellDef\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\n\n\nvar MatColumnDef = /*#__PURE__*/function (_CdkColumnDef) {\n  _inherits(MatColumnDef, _CdkColumnDef);\n\n  var _super5 = _createSuper(MatColumnDef);\n\n  function MatColumnDef() {\n    _classCallCheck(this, MatColumnDef);\n\n    return _super5.apply(this, arguments);\n  }\n\n  return MatColumnDef;\n}(CdkColumnDef);\n\nMatColumnDef.ɵfac = /*@__PURE__*/function () {\n  var ɵMatColumnDef_BaseFactory;\n  return function MatColumnDef_Factory(t) {\n    return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef);\n  };\n}();\n\nMatColumnDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatColumnDef,\n  selectors: [[\"\", \"matColumnDef\", \"\"]],\n  inputs: {\n    name: [\"matColumnDef\", \"name\"],\n    sticky: \"sticky\",\n    stickyEnd: \"stickyEnd\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkColumnDef,\n    useExisting: MatColumnDef\n  }, {\n    provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n    useExisting: MatColumnDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMatColumnDef.propDecorators = {\n  name: [{\n    type: Input,\n    args: ['matColumnDef']\n  }],\n  sticky: [{\n    type: Input\n  }],\n  stickyEnd: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matColumnDef]',\n      providers: [{\n        provide: CdkColumnDef,\n        useExisting: MatColumnDef\n      }, {\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: MatColumnDef\n      }]\n    }]\n  }], null, {\n    name: [{\n      type: Input,\n      args: ['matColumnDef']\n    }],\n    sticky: [{\n      type: Input\n    }],\n    stickyEnd: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Header cell template container that adds the right classes and role.\n */\n\n\nvar MatHeaderCell = /*#__PURE__*/function (_CdkHeaderCell) {\n  _inherits(MatHeaderCell, _CdkHeaderCell);\n\n  var _super6 = _createSuper(MatHeaderCell);\n\n  /**\n   * @param {?} columnDef\n   * @param {?} elementRef\n   */\n  function MatHeaderCell(columnDef, elementRef) {\n    var _this2;\n\n    _classCallCheck(this, MatHeaderCell);\n\n    _this2 = _super6.call(this, columnDef, elementRef);\n    elementRef.nativeElement.classList.add(\"mat-column-\".concat(columnDef.cssClassFriendlyName));\n    return _this2;\n  }\n\n  return MatHeaderCell;\n}(CdkHeaderCell);\n\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) {\n  return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatHeaderCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatHeaderCell,\n  selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]],\n  hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatHeaderCell.ctorParameters = function () {\n  return [{\n    type: CdkColumnDef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-header-cell, th[mat-header-cell]',\n      host: {\n        'class': 'mat-header-cell',\n        'role': 'columnheader'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Footer cell template container that adds the right classes and role.\n */\n\n\nvar MatFooterCell = /*#__PURE__*/function (_CdkFooterCell) {\n  _inherits(MatFooterCell, _CdkFooterCell);\n\n  var _super7 = _createSuper(MatFooterCell);\n\n  /**\n   * @param {?} columnDef\n   * @param {?} elementRef\n   */\n  function MatFooterCell(columnDef, elementRef) {\n    var _this3;\n\n    _classCallCheck(this, MatFooterCell);\n\n    _this3 = _super7.call(this, columnDef, elementRef);\n    elementRef.nativeElement.classList.add(\"mat-column-\".concat(columnDef.cssClassFriendlyName));\n    return _this3;\n  }\n\n  return MatFooterCell;\n}(CdkFooterCell);\n\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) {\n  return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatFooterCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatFooterCell,\n  selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatFooterCell.ctorParameters = function () {\n  return [{\n    type: CdkColumnDef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-footer-cell, td[mat-footer-cell]',\n      host: {\n        'class': 'mat-footer-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Cell template container that adds the right classes and role.\n */\n\n\nvar MatCell = /*#__PURE__*/function (_CdkCell) {\n  _inherits(MatCell, _CdkCell);\n\n  var _super8 = _createSuper(MatCell);\n\n  /**\n   * @param {?} columnDef\n   * @param {?} elementRef\n   */\n  function MatCell(columnDef, elementRef) {\n    var _this4;\n\n    _classCallCheck(this, MatCell);\n\n    _this4 = _super8.call(this, columnDef, elementRef);\n    elementRef.nativeElement.classList.add(\"mat-column-\".concat(columnDef.cssClassFriendlyName));\n    return _this4;\n  }\n\n  return MatCell;\n}(CdkCell);\n\nMatCell.ɵfac = function MatCell_Factory(t) {\n  return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatCell,\n  selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatCell.ctorParameters = function () {\n  return [{\n    type: CdkColumnDef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-cell, td[mat-cell]',\n      host: {\n        'class': 'mat-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar _CdkHeaderRowDef = CdkHeaderRowDef;\n/** @type {?} */\n\nvar _CdkFooterRowDef = CdkFooterRowDef;\n/** @type {?} */\n\nvar _CdkRowDef = CdkRowDef;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n\nvar MatHeaderRowDef = /*#__PURE__*/function (_CdkHeaderRowDef2) {\n  _inherits(MatHeaderRowDef, _CdkHeaderRowDef2);\n\n  var _super9 = _createSuper(MatHeaderRowDef);\n\n  function MatHeaderRowDef() {\n    _classCallCheck(this, MatHeaderRowDef);\n\n    return _super9.apply(this, arguments);\n  }\n\n  return MatHeaderRowDef;\n}(_CdkHeaderRowDef);\n\nMatHeaderRowDef.ɵfac = /*@__PURE__*/function () {\n  var ɵMatHeaderRowDef_BaseFactory;\n  return function MatHeaderRowDef_Factory(t) {\n    return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef);\n  };\n}();\n\nMatHeaderRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatHeaderRowDef,\n  selectors: [[\"\", \"matHeaderRowDef\", \"\"]],\n  inputs: {\n    columns: [\"matHeaderRowDef\", \"columns\"],\n    sticky: [\"matHeaderRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkHeaderRowDef,\n    useExisting: MatHeaderRowDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matHeaderRowDef]',\n      providers: [{\n        provide: CdkHeaderRowDef,\n        useExisting: MatHeaderRowDef\n      }],\n      inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n    }]\n  }], null, null);\n})();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n\n\nvar MatFooterRowDef = /*#__PURE__*/function (_CdkFooterRowDef2) {\n  _inherits(MatFooterRowDef, _CdkFooterRowDef2);\n\n  var _super10 = _createSuper(MatFooterRowDef);\n\n  function MatFooterRowDef() {\n    _classCallCheck(this, MatFooterRowDef);\n\n    return _super10.apply(this, arguments);\n  }\n\n  return MatFooterRowDef;\n}(_CdkFooterRowDef);\n\nMatFooterRowDef.ɵfac = /*@__PURE__*/function () {\n  var ɵMatFooterRowDef_BaseFactory;\n  return function MatFooterRowDef_Factory(t) {\n    return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef);\n  };\n}();\n\nMatFooterRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatFooterRowDef,\n  selectors: [[\"\", \"matFooterRowDef\", \"\"]],\n  inputs: {\n    columns: [\"matFooterRowDef\", \"columns\"],\n    sticky: [\"matFooterRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkFooterRowDef,\n    useExisting: MatFooterRowDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matFooterRowDef]',\n      providers: [{\n        provide: CdkFooterRowDef,\n        useExisting: MatFooterRowDef\n      }],\n      inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n    }]\n  }], null, null);\n})();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\n\n\nvar MatRowDef = /*#__PURE__*/function (_CdkRowDef2) {\n  _inherits(MatRowDef, _CdkRowDef2);\n\n  var _super11 = _createSuper(MatRowDef);\n\n  function MatRowDef() {\n    _classCallCheck(this, MatRowDef);\n\n    return _super11.apply(this, arguments);\n  }\n\n  return MatRowDef;\n}(_CdkRowDef);\n\nMatRowDef.ɵfac = /*@__PURE__*/function () {\n  var ɵMatRowDef_BaseFactory;\n  return function MatRowDef_Factory(t) {\n    return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef);\n  };\n}();\n\nMatRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatRowDef,\n  selectors: [[\"\", \"matRowDef\", \"\"]],\n  inputs: {\n    columns: [\"matRowDefColumns\", \"columns\"],\n    when: [\"matRowDefWhen\", \"when\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkRowDef,\n    useExisting: MatRowDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matRowDef]',\n      providers: [{\n        provide: CdkRowDef,\n        useExisting: MatRowDef\n      }],\n      inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n    }]\n  }], null, null);\n})();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\n\n\nvar MatHeaderRow = /*#__PURE__*/function (_CdkHeaderRow) {\n  _inherits(MatHeaderRow, _CdkHeaderRow);\n\n  var _super12 = _createSuper(MatHeaderRow);\n\n  function MatHeaderRow() {\n    _classCallCheck(this, MatHeaderRow);\n\n    return _super12.apply(this, arguments);\n  }\n\n  return MatHeaderRow;\n}(CdkHeaderRow);\n\nMatHeaderRow.ɵfac = /*@__PURE__*/function () {\n  var ɵMatHeaderRow_BaseFactory;\n  return function MatHeaderRow_Factory(t) {\n    return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow);\n  };\n}();\n\nMatHeaderRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatHeaderRow,\n  selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"],\n  exportAs: [\"matHeaderRow\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkHeaderRow,\n    useExisting: MatHeaderRow\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function MatHeaderRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  directives: [ɵngcc1.CdkCellOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-header-row, tr[mat-header-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'mat-header-row',\n        'role': 'row'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matHeaderRow',\n      providers: [{\n        provide: CdkHeaderRow,\n        useExisting: MatHeaderRow\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\n\n\nvar MatFooterRow = /*#__PURE__*/function (_CdkFooterRow) {\n  _inherits(MatFooterRow, _CdkFooterRow);\n\n  var _super13 = _createSuper(MatFooterRow);\n\n  function MatFooterRow() {\n    _classCallCheck(this, MatFooterRow);\n\n    return _super13.apply(this, arguments);\n  }\n\n  return MatFooterRow;\n}(CdkFooterRow);\n\nMatFooterRow.ɵfac = /*@__PURE__*/function () {\n  var ɵMatFooterRow_BaseFactory;\n  return function MatFooterRow_Factory(t) {\n    return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow);\n  };\n}();\n\nMatFooterRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatFooterRow,\n  selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"],\n  exportAs: [\"matFooterRow\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkFooterRow,\n    useExisting: MatFooterRow\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function MatFooterRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  directives: [ɵngcc1.CdkCellOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-footer-row, tr[mat-footer-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'mat-footer-row',\n        'role': 'row'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matFooterRow',\n      providers: [{\n        provide: CdkFooterRow,\n        useExisting: MatFooterRow\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n\n\nvar MatRow = /*#__PURE__*/function (_CdkRow) {\n  _inherits(MatRow, _CdkRow);\n\n  var _super14 = _createSuper(MatRow);\n\n  function MatRow() {\n    _classCallCheck(this, MatRow);\n\n    return _super14.apply(this, arguments);\n  }\n\n  return MatRow;\n}(CdkRow);\n\nMatRow.ɵfac = /*@__PURE__*/function () {\n  var ɵMatRow_BaseFactory;\n  return function MatRow_Factory(t) {\n    return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow);\n  };\n}();\n\nMatRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatRow,\n  selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"mat-row\"],\n  exportAs: [\"matRow\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkRow,\n    useExisting: MatRow\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function MatRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  directives: [ɵngcc1.CdkCellOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-row, tr[mat-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'mat-row',\n        'role': 'row'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matRow',\n      providers: [{\n        provide: CdkRow,\n        useExisting: MatRow\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar EXPORTED_DECLARATIONS = [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow];\n\nvar MatTableModule = function MatTableModule() {\n  _classCallCheck(this, MatTableModule);\n};\n\nMatTableModule.ɵfac = function MatTableModule_Factory(t) {\n  return new (t || MatTableModule)();\n};\n\nMatTableModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatTableModule\n});\nMatTableModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CdkTableModule, CommonModule, MatCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkTableModule, CommonModule, MatCommonModule],\n      exports: EXPORTED_DECLARATIONS,\n      declarations: EXPORTED_DECLARATIONS\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, {\n    declarations: function declarations() {\n      return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow];\n    },\n    imports: function imports() {\n      return [CdkTableModule, CommonModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n  @type {?} */\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n * @template T\n */\n\nvar MatTableDataSource = /*#__PURE__*/function (_DataSource) {\n  _inherits(MatTableDataSource, _DataSource);\n\n  var _super15 = _createSuper(MatTableDataSource);\n\n  /**\n   * @param {?=} initialData\n   */\n  function MatTableDataSource() {\n    var _this5;\n\n    var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, MatTableDataSource);\n\n    _this5 = _super15.call(this);\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     */\n\n    _this5._renderData = new BehaviorSubject([]);\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     */\n\n    _this5._filter = new BehaviorSubject('');\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     */\n\n    _this5._renderChangesSubscription = Subscription.EMPTY;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * @param data Data object that is being accessed.\n     * @param sortHeaderId The name of the column that represents the data.\n     */\n\n    _this5.sortingDataAccessor = function (data, sortHeaderId) {\n      /** @type {?} */\n      var value =\n      /** @type {?} */\n      data[sortHeaderId];\n\n      if (_isNumberValue(value)) {\n        /** @type {?} */\n        var numberValue = Number(value); // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n        // leave them as strings. For more info: https://goo.gl/y5vbSg\n\n        return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n      }\n\n      return value;\n    };\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * @param data The array of data that should be sorted.\n     * @param sort The connected MatSort that holds the current sort state.\n     */\n\n\n    _this5.sortData = function (data, sort) {\n      /** @type {?} */\n      var active = sort.active;\n      /** @type {?} */\n\n      var direction = sort.direction;\n\n      if (!active || direction == '') {\n        return data;\n      }\n\n      return data.sort(function (a, b) {\n        /** @type {?} */\n        var valueA = _this5.sortingDataAccessor(a, active);\n        /** @type {?} */\n\n\n        var valueB = _this5.sortingDataAccessor(b, active);\n        /** @type {?} */\n\n\n        var comparatorResult = 0;\n\n        if (valueA != null && valueB != null) {\n          // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n          if (valueA > valueB) {\n            comparatorResult = 1;\n          } else if (valueA < valueB) {\n            comparatorResult = -1;\n          }\n        } else if (valueA != null) {\n          comparatorResult = 1;\n        } else if (valueB != null) {\n          comparatorResult = -1;\n        }\n\n        return comparatorResult * (direction == 'asc' ? 1 : -1);\n      });\n    };\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * @param data Data object used to check against the filter.\n     * @param filter Filter string that has been set on the data source.\n     * @return Whether the filter matches against the data\n     */\n\n\n    _this5.filterPredicate = function (data, filter) {\n      /** @type {?} */\n      var dataStr = Object.keys(data).reduce(function (currentTerm, key) {\n        // Use an obscure Unicode character to delimit the words in the concatenated string.\n        // This avoids matches where the values of two columns combined will match the user's query\n        // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n        // that has a very low chance of being typed in by somebody in a text field. This one in\n        // particular is \"White up-pointing triangle with dot\" from\n        // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n        return currentTerm +\n        /** @type {?} */\n        data[key] + '◬';\n      }, '').toLowerCase();\n      /** @type {?} */\n\n      var transformedFilter = filter.trim().toLowerCase();\n      return dataStr.indexOf(transformedFilter) != -1;\n    };\n\n    _this5._data = new BehaviorSubject(initialData);\n\n    _this5._updateChangeSubscription();\n\n    return _this5;\n  }\n  /**\n   * Array of data that should be rendered by the table, where each object represents one row.\n   * @return {?}\n   */\n\n\n  _createClass(MatTableDataSource, [{\n    key: \"data\",\n    get: function get() {\n      return this._data.value;\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ,\n    set: function set(data) {\n      this._data.next(data);\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n\n  }, {\n    key: \"filter\",\n    get: function get() {\n      return this._filter.value;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    ,\n    set: function set(filter) {\n      this._filter.next(filter);\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n\n  }, {\n    key: \"sort\",\n    get: function get() {\n      return this._sort;\n    }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    ,\n    set: function set(sort) {\n      this._sort = sort;\n\n      this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n\n  }, {\n    key: \"paginator\",\n    get: function get() {\n      return this._paginator;\n    }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    ,\n    set: function set(paginator) {\n      this._paginator = paginator;\n\n      this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updateChangeSubscription\",\n    value: function _updateChangeSubscription() {\n      var _this6 = this;\n\n      /** @type {?} */\n      var sortChange = this._sort ? merge(this._sort.sortChange, this._sort.initialized) : of(null);\n      /** @type {?} */\n\n      var pageChange = this._paginator ? merge(this._paginator.page, this._paginator.initialized) : of(null);\n      /** @type {?} */\n\n      var dataStream = this._data;\n      /** @type {?} */\n\n      var filteredData = combineLatest(dataStream, this._filter).pipe(map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            data = _ref2[0];\n\n        return _this6._filterData(data);\n      }));\n      /** @type {?} */\n\n      var orderedData = combineLatest(filteredData, sortChange).pipe(map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            data = _ref4[0];\n\n        return _this6._orderData(data);\n      }));\n      /** @type {?} */\n\n      var paginatedData = combineLatest(orderedData, pageChange).pipe(map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 1),\n            data = _ref6[0];\n\n        return _this6._pageData(data);\n      })); // Watched for paged data changes and send the result to the table to render.\n\n      this._renderChangesSubscription.unsubscribe();\n\n      this._renderChangesSubscription = paginatedData.subscribe(function (data) {\n        return _this6._renderData.next(data);\n      });\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n\n  }, {\n    key: \"_filterData\",\n    value: function _filterData(data) {\n      var _this7 = this;\n\n      // If there is a filter string, filter out data that does not contain it.\n      // Each data object is converted to a string using the function defined by filterTermAccessor.\n      // May be overridden for customization.\n      this.filteredData = !this.filter ? data : data.filter(function (obj) {\n        return _this7.filterPredicate(obj, _this7.filter);\n      });\n\n      if (this.paginator) {\n        this._updatePaginator(this.filteredData.length);\n      }\n\n      return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n\n  }, {\n    key: \"_orderData\",\n    value: function _orderData(data) {\n      // If there is no active sort or direction, return the data without trying to sort.\n      if (!this.sort) {\n        return data;\n      }\n\n      return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n\n  }, {\n    key: \"_pageData\",\n    value: function _pageData(data) {\n      if (!this.paginator) {\n        return data;\n      }\n      /** @type {?} */\n\n\n      var startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.slice().splice(startIndex, this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updatePaginator\",\n    value: function _updatePaginator(filteredDataLength) {\n      var _this8 = this;\n\n      Promise.resolve().then(function () {\n        if (!_this8.paginator) {\n          return;\n        }\n\n        _this8.paginator.length = filteredDataLength; // If the page index is set beyond the page, reduce it to the last page.\n\n        if (_this8.paginator.pageIndex > 0) {\n          /** @type {?} */\n          var lastPageIndex = Math.ceil(_this8.paginator.length / _this8.paginator.pageSize) - 1 || 0;\n          _this8.paginator.pageIndex = Math.min(_this8.paginator.pageIndex, lastPageIndex);\n        }\n      });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {}\n  }]);\n\n  return MatTableDataSource;\n}(DataSource);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatTableModule, _CdkCellDef, _CdkHeaderCellDef, _CdkFooterCellDef, MatCellDef, MatHeaderCellDef, MatFooterCellDef, MatColumnDef, MatHeaderCell, MatFooterCell, MatCell, _CdkTable, MatTable, _CdkHeaderRowDef, _CdkFooterRowDef, _CdkRowDef, MatHeaderRowDef, MatFooterRowDef, MatRowDef, MatHeaderRow, MatFooterRow, MatRow, MatTableDataSource }; //# sourceMappingURL=table.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js"],"names":["CDK_TABLE_TEMPLATE","CdkTable","CdkCell","CdkCellDef","CdkColumnDef","CdkFooterCell","CdkFooterCellDef","CdkHeaderCell","CdkHeaderCellDef","CDK_ROW_TEMPLATE","CdkFooterRow","CdkFooterRowDef","CdkHeaderRow","CdkHeaderRowDef","CdkRow","CdkRowDef","CdkTableModule","DataSource","ChangeDetectionStrategy","Component","ViewEncapsulation","Directive","ElementRef","Input","NgModule","CommonModule","MatCommonModule","_isNumberValue","BehaviorSubject","combineLatest","merge","of","Subscription","map","ɵngcc0","ɵngcc1","_CdkTable","MatTable","arguments","stickyCssClass","ɵfac","ɵMatTable_BaseFactory","MatTable_Factory","t","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","exportAs","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatTable_Template","rf","ctx","ɵɵelementContainer","directives","HeaderRowOutlet","DataRowOutlet","FooterRowOutlet","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","None","OnPush","_CdkCellDef","_CdkHeaderCellDef","_CdkFooterCellDef","MatCellDef","ɵMatCellDef_BaseFactory","MatCellDef_Factory","ɵdir","ɵɵdefineDirective","ɵɵProvidersFeature","provide","useExisting","providers","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatHeaderCellDef_Factory","MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatFooterCellDef_Factory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatColumnDef_Factory","inputs","name","sticky","stickyEnd","propDecorators","MatHeaderCell","columnDef","elementRef","nativeElement","classList","add","cssClassFriendlyName","MatHeaderCell_Factory","ɵɵdirectiveInject","ctorParameters","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","_CdkHeaderRowDef","_CdkFooterRowDef","_CdkRowDef","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatHeaderRowDef_Factory","columns","MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatFooterRowDef_Factory","MatRowDef","ɵMatRowDef_BaseFactory","MatRowDef_Factory","when","MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Factory","MatHeaderRow_Template","CdkCellOutlet","MatFooterRow","ɵMatFooterRow_BaseFactory","MatFooterRow_Factory","MatFooterRow_Template","MatRow","ɵMatRow_BaseFactory","MatRow_Factory","MatRow_Template","EXPORTED_DECLARATIONS","MatTableModule","MatTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_renderChangesSubscription","EMPTY","sortingDataAccessor","data","sortHeaderId","value","numberValue","Number","sortData","sort","active","direction","a","b","valueA","valueB","comparatorResult","filterPredicate","filter","dataStr","Object","keys","reduce","currentTerm","key","toLowerCase","transformedFilter","trim","indexOf","_data","_updateChangeSubscription","next","_sort","_paginator","paginator","sortChange","initialized","pageChange","page","dataStream","filteredData","pipe","_filterData","orderedData","_orderData","paginatedData","_pageData","unsubscribe","subscribe","obj","_updatePaginator","length","slice","startIndex","pageIndex","pageSize","splice","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","min"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CDK_TABLE_TEMPLATE, CdkTable, CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation, Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, combineLatest, merge, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\nconst _CdkTable = CdkTable;\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nclass MatTable extends _CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = /*@__PURE__*/ function () { let ɵMatTable_BaseFactory; return function MatTable_Factory(t) { return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable); }; }();\nMatTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n        ɵngcc0.ɵɵelementContainer(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{ selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"],\n                host: {\n                    'class': 'mat-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _CdkCellDef = CdkCellDef;\n/** @type {?} */\nconst _CdkHeaderCellDef = CdkHeaderCellDef;\n/** @type {?} */\nconst _CdkFooterCellDef = CdkFooterCellDef;\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends _CdkCellDef {\n}\nMatCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatCellDef_BaseFactory; return function MatCellDef_Factory(t) { return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef); }; }();\nMatCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends _CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderCellDef_BaseFactory; return function MatHeaderCellDef_Factory(t) { return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef); }; }();\nMatHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends _CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterCellDef_BaseFactory; return function MatFooterCellDef_Factory(t) { return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef); }; }();\nMatFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = /*@__PURE__*/ function () { let ɵMatColumnDef_BaseFactory; return function MatColumnDef_Factory(t) { return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef); }; }();\nMatColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { name: [\"matColumnDef\", \"name\"], sticky: \"sticky\", stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }],\n    sticky: [{ type: Input }],\n    stickyEnd: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }], sticky: [{\n            type: Input\n        }], stickyEnd: [{\n            type: Input\n        }] }); })();\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _CdkHeaderRowDef = CdkHeaderRowDef;\n/** @type {?} */\nconst _CdkFooterRowDef = CdkFooterRowDef;\n/** @type {?} */\nconst _CdkRowDef = CdkRowDef;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends _CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRowDef_BaseFactory; return function MatHeaderRowDef_Factory(t) { return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef); }; }();\nMatHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends _CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRowDef_BaseFactory; return function MatFooterRowDef_Factory(t) { return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef); }; }();\nMatFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends _CdkRowDef {\n}\nMatRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatRowDef_BaseFactory; return function MatRowDef_Factory(t) { return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef); }; }();\nMatRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRow_BaseFactory; return function MatHeaderRow_Factory(t) { return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow); }; }();\nMatHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{ selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow', providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRow_BaseFactory; return function MatFooterRow_Factory(t) { return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow); }; }();\nMatFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{ selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow', providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = /*@__PURE__*/ function () { let ɵMatRow_BaseFactory; return function MatRow_Factory(t) { return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow); }; }();\nMatRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{ selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow', providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    MatTable,\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = function MatTableModule_Factory(t) { return new (t || MatTableModule)(); };\nMatTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CdkTableModule, CommonModule, MatCommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CdkTableModule, CommonModule, MatCommonModule],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow]; }, imports: function () { return [CdkTableModule, CommonModule, MatCommonModule]; }, exports: function () { return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n  @type {?} */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = (/** @type {?} */ (data))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + (/** @type {?} */ (data))[key] + '◬';\n            }, '').toLowerCase();\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        /** @type {?} */\n        const sortChange = this._sort ?\n            merge(this._sort.sortChange, this._sort.initialized) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            merge(this._paginator.page, this._paginator.initialized) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        /** @type {?} */\n        const filteredData = combineLatest(dataStream, this._filter)\n            .pipe(map(([data]) => this._filterData(data)));\n        /** @type {?} */\n        const orderedData = combineLatest(filteredData, sortChange)\n            .pipe(map(([data]) => this._orderData(data)));\n        /** @type {?} */\n        const paginatedData = combineLatest(orderedData, pageChange)\n            .pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice().splice(startIndex, this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            if (!this.paginator) {\n                return;\n            }\n            this.paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (this.paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(this.paginator.length / this.paginator.pageSize) - 1 || 0;\n                this.paginator.pageIndex = Math.min(this.paginator.pageIndex, lastPageIndex);\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatTableModule, _CdkCellDef, _CdkHeaderCellDef, _CdkFooterCellDef, MatCellDef, MatHeaderCellDef, MatFooterCellDef, MatColumnDef, MatHeaderCell, MatFooterCell, MatCell, _CdkTable, MatTable, _CdkHeaderRowDef, _CdkFooterRowDef, _CdkRowDef, MatHeaderRowDef, MatFooterRowDef, MatRowDef, MatHeaderRow, MatFooterRow, MatRow, MatTableDataSource };\n\n//# sourceMappingURL=table.js.map"]},"metadata":{},"sourceType":"module"}