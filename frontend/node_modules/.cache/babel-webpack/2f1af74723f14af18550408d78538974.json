{"ast":null,"code":"import _slicedToArray from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CDK_TABLE_TEMPLATE, CdkTable, CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation, Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, combineLatest, merge, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\nvar _CdkTable = CdkTable;\n\nvar MatTable = /*@__PURE__*/function () {\n  var MatTable = /*#__PURE__*/function (_CdkTable2) {\n    _inherits(MatTable, _CdkTable2);\n\n    var _super = _createSuper(MatTable);\n\n    function MatTable() {\n      var _this;\n\n      _classCallCheck(this, MatTable);\n\n      _this = _super.apply(this, arguments);\n      /**\n       * Overrides the sticky CSS class set by the `CdkTable`.\n       */\n\n      _this.stickyCssClass = 'mat-table-sticky';\n      return _this;\n    }\n\n    return MatTable;\n  }(_CdkTable);\n\n  MatTable.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatTable_BaseFactory;\n    return function MatTable_Factory(t) {\n      return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable);\n    };\n  }();\n\n  MatTable.ɵcmp =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineComponent({\n    type: MatTable,\n    selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]],\n    hostAttrs: [1, \"mat-table\"],\n    exportAs: [\"matTable\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 0,\n    consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n    template: function MatTable_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n        ɵngcc0.ɵɵelementContainer(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 2);\n      }\n    },\n    directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet],\n    styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatTable;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar _CdkCellDef = CdkCellDef;\n/** @type {?} */\n\nvar _CdkHeaderCellDef = CdkHeaderCellDef;\n/** @type {?} */\n\nvar _CdkFooterCellDef = CdkFooterCellDef;\n\nvar MatCellDef = /*@__PURE__*/function () {\n  var MatCellDef = /*#__PURE__*/function (_CdkCellDef2) {\n    _inherits(MatCellDef, _CdkCellDef2);\n\n    var _super2 = _createSuper(MatCellDef);\n\n    function MatCellDef() {\n      _classCallCheck(this, MatCellDef);\n\n      return _super2.apply(this, arguments);\n    }\n\n    return MatCellDef;\n  }(_CdkCellDef);\n\n  MatCellDef.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatCellDef_BaseFactory;\n    return function MatCellDef_Factory(t) {\n      return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef);\n    };\n  }();\n\n  MatCellDef.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatCellDef,\n    selectors: [[\"\", \"matCellDef\", \"\"]],\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkCellDef,\n      useExisting: MatCellDef\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatCellDef;\n}();\n\nvar MatHeaderCellDef = /*@__PURE__*/function () {\n  var MatHeaderCellDef = /*#__PURE__*/function (_CdkHeaderCellDef2) {\n    _inherits(MatHeaderCellDef, _CdkHeaderCellDef2);\n\n    var _super3 = _createSuper(MatHeaderCellDef);\n\n    function MatHeaderCellDef() {\n      _classCallCheck(this, MatHeaderCellDef);\n\n      return _super3.apply(this, arguments);\n    }\n\n    return MatHeaderCellDef;\n  }(_CdkHeaderCellDef);\n\n  MatHeaderCellDef.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatHeaderCellDef_BaseFactory;\n    return function MatHeaderCellDef_Factory(t) {\n      return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef);\n    };\n  }();\n\n  MatHeaderCellDef.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatHeaderCellDef,\n    selectors: [[\"\", \"matHeaderCellDef\", \"\"]],\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkHeaderCellDef,\n      useExisting: MatHeaderCellDef\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatHeaderCellDef;\n}();\n\nvar MatFooterCellDef = /*@__PURE__*/function () {\n  var MatFooterCellDef = /*#__PURE__*/function (_CdkFooterCellDef2) {\n    _inherits(MatFooterCellDef, _CdkFooterCellDef2);\n\n    var _super4 = _createSuper(MatFooterCellDef);\n\n    function MatFooterCellDef() {\n      _classCallCheck(this, MatFooterCellDef);\n\n      return _super4.apply(this, arguments);\n    }\n\n    return MatFooterCellDef;\n  }(_CdkFooterCellDef);\n\n  MatFooterCellDef.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatFooterCellDef_BaseFactory;\n    return function MatFooterCellDef_Factory(t) {\n      return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef);\n    };\n  }();\n\n  MatFooterCellDef.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatFooterCellDef,\n    selectors: [[\"\", \"matFooterCellDef\", \"\"]],\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkFooterCellDef,\n      useExisting: MatFooterCellDef\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatFooterCellDef;\n}();\n\nvar MatColumnDef = /*@__PURE__*/function () {\n  var MatColumnDef = /*#__PURE__*/function (_CdkColumnDef) {\n    _inherits(MatColumnDef, _CdkColumnDef);\n\n    var _super5 = _createSuper(MatColumnDef);\n\n    function MatColumnDef() {\n      _classCallCheck(this, MatColumnDef);\n\n      return _super5.apply(this, arguments);\n    }\n\n    return MatColumnDef;\n  }(CdkColumnDef);\n\n  MatColumnDef.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatColumnDef_BaseFactory;\n    return function MatColumnDef_Factory(t) {\n      return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef);\n    };\n  }();\n\n  MatColumnDef.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatColumnDef,\n    selectors: [[\"\", \"matColumnDef\", \"\"]],\n    inputs: {\n      name: [\"matColumnDef\", \"name\"],\n      sticky: \"sticky\",\n      stickyEnd: \"stickyEnd\"\n    },\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkColumnDef,\n      useExisting: MatColumnDef\n    }, {\n      provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n      useExisting: MatColumnDef\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatColumnDef;\n}();\n\nvar MatHeaderCell = /*@__PURE__*/function () {\n  var MatHeaderCell = /*#__PURE__*/function (_CdkHeaderCell) {\n    _inherits(MatHeaderCell, _CdkHeaderCell);\n\n    var _super6 = _createSuper(MatHeaderCell);\n\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    function MatHeaderCell(columnDef, elementRef) {\n      var _this2;\n\n      _classCallCheck(this, MatHeaderCell);\n\n      _this2 = _super6.call(this, columnDef, elementRef);\n      elementRef.nativeElement.classList.add(\"mat-column-\".concat(columnDef.cssClassFriendlyName));\n      return _this2;\n    }\n\n    return MatHeaderCell;\n  }(CdkHeaderCell);\n\n  MatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) {\n    return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MatHeaderCell.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatHeaderCell,\n    selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]],\n    hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatHeaderCell;\n}();\n\nvar MatFooterCell = /*@__PURE__*/function () {\n  var MatFooterCell = /*#__PURE__*/function (_CdkFooterCell) {\n    _inherits(MatFooterCell, _CdkFooterCell);\n\n    var _super7 = _createSuper(MatFooterCell);\n\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    function MatFooterCell(columnDef, elementRef) {\n      var _this3;\n\n      _classCallCheck(this, MatFooterCell);\n\n      _this3 = _super7.call(this, columnDef, elementRef);\n      elementRef.nativeElement.classList.add(\"mat-column-\".concat(columnDef.cssClassFriendlyName));\n      return _this3;\n    }\n\n    return MatFooterCell;\n  }(CdkFooterCell);\n\n  MatFooterCell.ɵfac = function MatFooterCell_Factory(t) {\n    return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MatFooterCell.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatFooterCell,\n    selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]],\n    hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatFooterCell;\n}();\n\nvar MatCell = /*@__PURE__*/function () {\n  var MatCell = /*#__PURE__*/function (_CdkCell) {\n    _inherits(MatCell, _CdkCell);\n\n    var _super8 = _createSuper(MatCell);\n\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    function MatCell(columnDef, elementRef) {\n      var _this4;\n\n      _classCallCheck(this, MatCell);\n\n      _this4 = _super8.call(this, columnDef, elementRef);\n      elementRef.nativeElement.classList.add(\"mat-column-\".concat(columnDef.cssClassFriendlyName));\n      return _this4;\n    }\n\n    return MatCell;\n  }(CdkCell);\n\n  MatCell.ɵfac = function MatCell_Factory(t) {\n    return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MatCell.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatCell,\n    selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]],\n    hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatCell;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar _CdkHeaderRowDef = CdkHeaderRowDef;\n/** @type {?} */\n\nvar _CdkFooterRowDef = CdkFooterRowDef;\n/** @type {?} */\n\nvar _CdkRowDef = CdkRowDef;\n\nvar MatHeaderRowDef = /*@__PURE__*/function () {\n  var MatHeaderRowDef = /*#__PURE__*/function (_CdkHeaderRowDef2) {\n    _inherits(MatHeaderRowDef, _CdkHeaderRowDef2);\n\n    var _super9 = _createSuper(MatHeaderRowDef);\n\n    function MatHeaderRowDef() {\n      _classCallCheck(this, MatHeaderRowDef);\n\n      return _super9.apply(this, arguments);\n    }\n\n    return MatHeaderRowDef;\n  }(_CdkHeaderRowDef);\n\n  MatHeaderRowDef.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatHeaderRowDef_BaseFactory;\n    return function MatHeaderRowDef_Factory(t) {\n      return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef);\n    };\n  }();\n\n  MatHeaderRowDef.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatHeaderRowDef,\n    selectors: [[\"\", \"matHeaderRowDef\", \"\"]],\n    inputs: {\n      columns: [\"matHeaderRowDef\", \"columns\"],\n      sticky: [\"matHeaderRowDefSticky\", \"sticky\"]\n    },\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkHeaderRowDef,\n      useExisting: MatHeaderRowDef\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatHeaderRowDef;\n}();\n\nvar MatFooterRowDef = /*@__PURE__*/function () {\n  var MatFooterRowDef = /*#__PURE__*/function (_CdkFooterRowDef2) {\n    _inherits(MatFooterRowDef, _CdkFooterRowDef2);\n\n    var _super10 = _createSuper(MatFooterRowDef);\n\n    function MatFooterRowDef() {\n      _classCallCheck(this, MatFooterRowDef);\n\n      return _super10.apply(this, arguments);\n    }\n\n    return MatFooterRowDef;\n  }(_CdkFooterRowDef);\n\n  MatFooterRowDef.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatFooterRowDef_BaseFactory;\n    return function MatFooterRowDef_Factory(t) {\n      return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef);\n    };\n  }();\n\n  MatFooterRowDef.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatFooterRowDef,\n    selectors: [[\"\", \"matFooterRowDef\", \"\"]],\n    inputs: {\n      columns: [\"matFooterRowDef\", \"columns\"],\n      sticky: [\"matFooterRowDefSticky\", \"sticky\"]\n    },\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkFooterRowDef,\n      useExisting: MatFooterRowDef\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatFooterRowDef;\n}();\n\nvar MatRowDef = /*@__PURE__*/function () {\n  var MatRowDef = /*#__PURE__*/function (_CdkRowDef2) {\n    _inherits(MatRowDef, _CdkRowDef2);\n\n    var _super11 = _createSuper(MatRowDef);\n\n    function MatRowDef() {\n      _classCallCheck(this, MatRowDef);\n\n      return _super11.apply(this, arguments);\n    }\n\n    return MatRowDef;\n  }(_CdkRowDef);\n\n  MatRowDef.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatRowDef_BaseFactory;\n    return function MatRowDef_Factory(t) {\n      return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef);\n    };\n  }();\n\n  MatRowDef.ɵdir =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineDirective({\n    type: MatRowDef,\n    selectors: [[\"\", \"matRowDef\", \"\"]],\n    inputs: {\n      columns: [\"matRowDefColumns\", \"columns\"],\n      when: [\"matRowDefWhen\", \"when\"]\n    },\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkRowDef,\n      useExisting: MatRowDef\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatRowDef;\n}();\n\nvar MatHeaderRow = /*@__PURE__*/function () {\n  var MatHeaderRow = /*#__PURE__*/function (_CdkHeaderRow) {\n    _inherits(MatHeaderRow, _CdkHeaderRow);\n\n    var _super12 = _createSuper(MatHeaderRow);\n\n    function MatHeaderRow() {\n      _classCallCheck(this, MatHeaderRow);\n\n      return _super12.apply(this, arguments);\n    }\n\n    return MatHeaderRow;\n  }(CdkHeaderRow);\n\n  MatHeaderRow.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatHeaderRow_BaseFactory;\n    return function MatHeaderRow_Factory(t) {\n      return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow);\n    };\n  }();\n\n  MatHeaderRow.ɵcmp =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineComponent({\n    type: MatHeaderRow,\n    selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"],\n    exportAs: [\"matHeaderRow\"],\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkHeaderRow,\n      useExisting: MatHeaderRow\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkCellOutlet\", \"\"]],\n    template: function MatHeaderRow_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n      }\n    },\n    directives: [ɵngcc1.CdkCellOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatHeaderRow;\n}();\n\nvar MatFooterRow = /*@__PURE__*/function () {\n  var MatFooterRow = /*#__PURE__*/function (_CdkFooterRow) {\n    _inherits(MatFooterRow, _CdkFooterRow);\n\n    var _super13 = _createSuper(MatFooterRow);\n\n    function MatFooterRow() {\n      _classCallCheck(this, MatFooterRow);\n\n      return _super13.apply(this, arguments);\n    }\n\n    return MatFooterRow;\n  }(CdkFooterRow);\n\n  MatFooterRow.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatFooterRow_BaseFactory;\n    return function MatFooterRow_Factory(t) {\n      return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow);\n    };\n  }();\n\n  MatFooterRow.ɵcmp =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineComponent({\n    type: MatFooterRow,\n    selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"],\n    exportAs: [\"matFooterRow\"],\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkFooterRow,\n      useExisting: MatFooterRow\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkCellOutlet\", \"\"]],\n    template: function MatFooterRow_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n      }\n    },\n    directives: [ɵngcc1.CdkCellOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatFooterRow;\n}();\n\nvar MatRow = /*@__PURE__*/function () {\n  var MatRow = /*#__PURE__*/function (_CdkRow) {\n    _inherits(MatRow, _CdkRow);\n\n    var _super14 = _createSuper(MatRow);\n\n    function MatRow() {\n      _classCallCheck(this, MatRow);\n\n      return _super14.apply(this, arguments);\n    }\n\n    return MatRow;\n  }(CdkRow);\n\n  MatRow.ɵfac =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  function () {\n    var ɵMatRow_BaseFactory;\n    return function MatRow_Factory(t) {\n      return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow);\n    };\n  }();\n\n  MatRow.ɵcmp =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineComponent({\n    type: MatRow,\n    selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"mat-row\"],\n    exportAs: [\"matRow\"],\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkRow,\n      useExisting: MatRow\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkCellOutlet\", \"\"]],\n    template: function MatRow_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n      }\n    },\n    directives: [ɵngcc1.CdkCellOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatRow;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar EXPORTED_DECLARATIONS = [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow];\n\nvar MatTableModule = /*@__PURE__*/function () {\n  var MatTableModule = function MatTableModule() {\n    _classCallCheck(this, MatTableModule);\n  };\n\n  MatTableModule.ɵfac = function MatTableModule_Factory(t) {\n    return new (t || MatTableModule)();\n  };\n\n  MatTableModule.ɵmod =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineNgModule({\n    type: MatTableModule\n  });\n  MatTableModule.ɵinj =\n  /*@__PURE__*/\n\n  /*@__PURE__*/\n  ɵngcc0.ɵɵdefineInjector({\n    imports: [[CdkTableModule, CommonModule, MatCommonModule]]\n  });\n  return MatTableModule;\n}();\n/*@__PURE__*/\n\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, {\n    declarations: function declarations() {\n      return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow];\n    },\n    imports: function imports() {\n      return [CdkTableModule, CommonModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n  @type {?} */\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n * @template T\n */\n\nvar MatTableDataSource = /*#__PURE__*/function (_DataSource) {\n  _inherits(MatTableDataSource, _DataSource);\n\n  var _super15 = _createSuper(MatTableDataSource);\n\n  /**\n   * @param {?=} initialData\n   */\n  function MatTableDataSource() {\n    var _this5;\n\n    var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, MatTableDataSource);\n\n    _this5 = _super15.call(this);\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     */\n\n    _this5._renderData = new BehaviorSubject([]);\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     */\n\n    _this5._filter = new BehaviorSubject('');\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     */\n\n    _this5._renderChangesSubscription = Subscription.EMPTY;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * @param data Data object that is being accessed.\n     * @param sortHeaderId The name of the column that represents the data.\n     */\n\n    _this5.sortingDataAccessor = function (data, sortHeaderId) {\n      /** @type {?} */\n      var value =\n      /** @type {?} */\n      data[sortHeaderId];\n\n      if (_isNumberValue(value)) {\n        /** @type {?} */\n        var numberValue = Number(value); // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n        // leave them as strings. For more info: https://goo.gl/y5vbSg\n\n        return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n      }\n\n      return value;\n    };\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * @param data The array of data that should be sorted.\n     * @param sort The connected MatSort that holds the current sort state.\n     */\n\n\n    _this5.sortData = function (data, sort) {\n      /** @type {?} */\n      var active = sort.active;\n      /** @type {?} */\n\n      var direction = sort.direction;\n\n      if (!active || direction == '') {\n        return data;\n      }\n\n      return data.sort(function (a, b) {\n        /** @type {?} */\n        var valueA = _this5.sortingDataAccessor(a, active);\n        /** @type {?} */\n\n\n        var valueB = _this5.sortingDataAccessor(b, active);\n        /** @type {?} */\n\n\n        var comparatorResult = 0;\n\n        if (valueA != null && valueB != null) {\n          // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n          if (valueA > valueB) {\n            comparatorResult = 1;\n          } else if (valueA < valueB) {\n            comparatorResult = -1;\n          }\n        } else if (valueA != null) {\n          comparatorResult = 1;\n        } else if (valueB != null) {\n          comparatorResult = -1;\n        }\n\n        return comparatorResult * (direction == 'asc' ? 1 : -1);\n      });\n    };\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * @param data Data object used to check against the filter.\n     * @param filter Filter string that has been set on the data source.\n     * @return Whether the filter matches against the data\n     */\n\n\n    _this5.filterPredicate = function (data, filter) {\n      /** @type {?} */\n      var dataStr = Object.keys(data).reduce(function (currentTerm, key) {\n        // Use an obscure Unicode character to delimit the words in the concatenated string.\n        // This avoids matches where the values of two columns combined will match the user's query\n        // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n        // that has a very low chance of being typed in by somebody in a text field. This one in\n        // particular is \"White up-pointing triangle with dot\" from\n        // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n        return currentTerm +\n        /** @type {?} */\n        data[key] + '◬';\n      }, '').toLowerCase();\n      /** @type {?} */\n\n      var transformedFilter = filter.trim().toLowerCase();\n      return dataStr.indexOf(transformedFilter) != -1;\n    };\n\n    _this5._data = new BehaviorSubject(initialData);\n\n    _this5._updateChangeSubscription();\n\n    return _this5;\n  }\n  /**\n   * Array of data that should be rendered by the table, where each object represents one row.\n   * @return {?}\n   */\n\n\n  _createClass(MatTableDataSource, [{\n    key: \"data\",\n    get: function get() {\n      return this._data.value;\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ,\n    set: function set(data) {\n      this._data.next(data);\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n\n  }, {\n    key: \"filter\",\n    get: function get() {\n      return this._filter.value;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    ,\n    set: function set(filter) {\n      this._filter.next(filter);\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n\n  }, {\n    key: \"sort\",\n    get: function get() {\n      return this._sort;\n    }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    ,\n    set: function set(sort) {\n      this._sort = sort;\n\n      this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n\n  }, {\n    key: \"paginator\",\n    get: function get() {\n      return this._paginator;\n    }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    ,\n    set: function set(paginator) {\n      this._paginator = paginator;\n\n      this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updateChangeSubscription\",\n    value: function _updateChangeSubscription() {\n      var _this6 = this;\n\n      /** @type {?} */\n      var sortChange = this._sort ? merge(this._sort.sortChange, this._sort.initialized) : of(null);\n      /** @type {?} */\n\n      var pageChange = this._paginator ? merge(this._paginator.page, this._paginator.initialized) : of(null);\n      /** @type {?} */\n\n      var dataStream = this._data;\n      /** @type {?} */\n\n      var filteredData = combineLatest(dataStream, this._filter).pipe(map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            data = _ref2[0];\n\n        return _this6._filterData(data);\n      }));\n      /** @type {?} */\n\n      var orderedData = combineLatest(filteredData, sortChange).pipe(map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            data = _ref4[0];\n\n        return _this6._orderData(data);\n      }));\n      /** @type {?} */\n\n      var paginatedData = combineLatest(orderedData, pageChange).pipe(map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 1),\n            data = _ref6[0];\n\n        return _this6._pageData(data);\n      })); // Watched for paged data changes and send the result to the table to render.\n\n      this._renderChangesSubscription.unsubscribe();\n\n      this._renderChangesSubscription = paginatedData.subscribe(function (data) {\n        return _this6._renderData.next(data);\n      });\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n\n  }, {\n    key: \"_filterData\",\n    value: function _filterData(data) {\n      var _this7 = this;\n\n      // If there is a filter string, filter out data that does not contain it.\n      // Each data object is converted to a string using the function defined by filterTermAccessor.\n      // May be overridden for customization.\n      this.filteredData = !this.filter ? data : data.filter(function (obj) {\n        return _this7.filterPredicate(obj, _this7.filter);\n      });\n\n      if (this.paginator) {\n        this._updatePaginator(this.filteredData.length);\n      }\n\n      return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n\n  }, {\n    key: \"_orderData\",\n    value: function _orderData(data) {\n      // If there is no active sort or direction, return the data without trying to sort.\n      if (!this.sort) {\n        return data;\n      }\n\n      return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n\n  }, {\n    key: \"_pageData\",\n    value: function _pageData(data) {\n      if (!this.paginator) {\n        return data;\n      }\n      /** @type {?} */\n\n\n      var startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.slice().splice(startIndex, this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updatePaginator\",\n    value: function _updatePaginator(filteredDataLength) {\n      var _this8 = this;\n\n      Promise.resolve().then(function () {\n        if (!_this8.paginator) {\n          return;\n        }\n\n        _this8.paginator.length = filteredDataLength; // If the page index is set beyond the page, reduce it to the last page.\n\n        if (_this8.paginator.pageIndex > 0) {\n          /** @type {?} */\n          var lastPageIndex = Math.ceil(_this8.paginator.length / _this8.paginator.pageSize) - 1 || 0;\n          _this8.paginator.pageIndex = Math.min(_this8.paginator.pageIndex, lastPageIndex);\n        }\n      });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {}\n  }]);\n\n  return MatTableDataSource;\n}(DataSource);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatTableModule, _CdkCellDef, _CdkHeaderCellDef, _CdkFooterCellDef, MatCellDef, MatHeaderCellDef, MatFooterCellDef, MatColumnDef, MatHeaderCell, MatFooterCell, MatCell, _CdkTable, MatTable, _CdkHeaderRowDef, _CdkFooterRowDef, _CdkRowDef, MatHeaderRowDef, MatFooterRowDef, MatRowDef, MatHeaderRow, MatFooterRow, MatRow, MatTableDataSource }; //# sourceMappingURL=table.js.map","map":null,"metadata":{},"sourceType":"module"}