{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleAsyncIterable(input, scheduler) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      var iterator = input[Symbol.asyncIterator]();\n      sub.add(scheduler.schedule(function () {\n        var _this = this;\n\n        iterator.next().then(function (result) {\n          if (result.done) {\n            subscriber.complete();\n          } else {\n            subscriber.next(result.value);\n\n            _this.schedule();\n          }\n        });\n      }));\n    }));\n    return sub;\n  });\n} //# sourceMappingURL=scheduleAsyncIterable.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/rxjs/dist/esm/internal/scheduled/scheduleAsyncIterable.js"],"names":["Observable","Subscription","scheduleAsyncIterable","input","scheduler","Error","subscriber","sub","add","schedule","iterator","Symbol","asyncIterator","next","then","result","done","complete","value"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAsCC,SAAtC,EAAiD;AACpD,MAAI,CAACD,KAAL,EAAY;AACR,UAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACD,SAAO,IAAIL,UAAJ,CAAe,UAAAM,UAAU,EAAI;AAChC,QAAMC,GAAG,GAAG,IAAIN,YAAJ,EAAZ;AACAM,IAAAA,GAAG,CAACC,GAAJ,CAAQJ,SAAS,CAACK,QAAV,CAAmB,YAAM;AAC7B,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAM,CAACC,aAAR,CAAL,EAAjB;AACAL,MAAAA,GAAG,CAACC,GAAJ,CAAQJ,SAAS,CAACK,QAAV,CAAmB,YAAY;AAAA;;AACnCC,QAAAA,QAAQ,CAACG,IAAT,GAAgBC,IAAhB,CAAqB,UAAAC,MAAM,EAAI;AAC3B,cAAIA,MAAM,CAACC,IAAX,EAAiB;AACbV,YAAAA,UAAU,CAACW,QAAX;AACH,WAFD,MAGK;AACDX,YAAAA,UAAU,CAACO,IAAX,CAAgBE,MAAM,CAACG,KAAvB;;AACA,YAAA,KAAI,CAACT,QAAL;AACH;AACJ,SARD;AASH,OAVO,CAAR;AAWH,KAbO,CAAR;AAcA,WAAOF,GAAP;AACH,GAjBM,CAAP;AAkBH,C,CACD","sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(subscriber => {\n        const sub = new Subscription();\n        sub.add(scheduler.schedule(() => {\n            const iterator = input[Symbol.asyncIterator]();\n            sub.add(scheduler.schedule(function () {\n                iterator.next().then(result => {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                        this.schedule();\n                    }\n                });\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map"]},"metadata":{},"sourceType":"module"}