{"ast":null,"code":"import _createClass from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, END, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinColor, mixinDisabled, mixinTabIndex, GestureConfig, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n  @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nvar _c0 = [\"sliderWrapper\"];\nvar MIN_AUTO_TICK_SEPARATION = 30;\n/** *\n * The thumb gap size for a disabled slider.\n  @type {?} */\n\nvar DISABLED_THUMB_GAP = 7;\n/** *\n * The thumb gap size for a non-active slider at its minimum value.\n  @type {?} */\n\nvar MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** *\n * The thumb gap size for an active slider at its minimum value.\n  @type {?} */\n\nvar MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/** *\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n  @type {?} */\n\nvar MAT_SLIDER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return MatSlider;\n  }),\n  multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\n\nvar MatSliderChange = function MatSliderChange() {\n  _classCallCheck(this, MatSliderChange);\n};\n/**\n * \\@docs-private\n */\n\n\nvar MatSliderBase =\n/**\n * @param {?} _elementRef\n */\nfunction MatSliderBase(_elementRef) {\n  _classCallCheck(this, MatSliderBase);\n\n  this._elementRef = _elementRef;\n};\n/** @type {?} */\n\n\nvar _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n\n\nvar MatSlider = /*#__PURE__*/function (_MatSliderMixinBase2) {\n  _inherits(MatSlider, _MatSliderMixinBase2);\n\n  var _super = _createSuper(MatSlider);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} _focusMonitor\n   * @param {?} _changeDetectorRef\n   * @param {?} _dir\n   * @param {?} tabIndex\n   * @param {?=} _animationMode\n   */\n  function MatSlider(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n  _animationMode) {\n    var _this;\n\n    _classCallCheck(this, MatSlider);\n\n    _this = _super.call(this, elementRef);\n    _this._focusMonitor = _focusMonitor;\n    _this._changeDetectorRef = _changeDetectorRef;\n    _this._dir = _dir;\n    _this._animationMode = _animationMode;\n    _this._invert = false;\n    _this._max = 100;\n    _this._min = 0;\n    _this._step = 1;\n    _this._thumbLabel = false;\n    _this._tickInterval = 0;\n    _this._value = null;\n    _this._vertical = false;\n    /**\n     * Event emitted when the slider value has changed.\n     */\n\n    _this.change = new EventEmitter();\n    /**\n     * Event emitted when the slider thumb moves.\n     */\n\n    _this.input = new EventEmitter();\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     */\n\n    _this.valueChange = new EventEmitter();\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     */\n\n    _this.onTouched = function () {};\n\n    _this._percent = 0;\n    /**\n     * Whether or not the thumb is sliding.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     */\n\n    _this._isSliding = false;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     */\n\n    _this._isActive = false;\n    /**\n     * The size of a tick interval as a percentage of the size of the track.\n     */\n\n    _this._tickIntervalPercent = 0;\n    /**\n     * The dimensions of the slider.\n     */\n\n    _this._sliderDimensions = null;\n\n    _this._controlValueAccessorChangeFn = function () {};\n    /**\n     * Subscription to the Directionality change EventEmitter.\n     */\n\n\n    _this._dirChangeSubscription = Subscription.EMPTY;\n    _this.tabIndex = parseInt(tabIndex) || 0;\n    return _this;\n  }\n  /**\n   * Whether the slider is inverted.\n   * @return {?}\n   */\n\n\n  _createClass(MatSlider, [{\n    key: \"invert\",\n    get: function get() {\n      return this._invert;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._invert = coerceBooleanProperty(value);\n    }\n    /**\n     * The maximum value that the slider can have.\n     * @return {?}\n     */\n\n  }, {\n    key: \"max\",\n    get: function get() {\n      return this._max;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    ,\n    set: function set(v) {\n      this._max = coerceNumberProperty(v, this._max);\n      this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The minimum value that the slider can have.\n     * @return {?}\n     */\n\n  }, {\n    key: \"min\",\n    get: function get() {\n      return this._min;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    ,\n    set: function set(v) {\n      this._min = coerceNumberProperty(v, this._min); // If the value wasn't explicitly set by the user, set it to the min.\n\n      if (this._value === null) {\n        this.value = this._min;\n      }\n\n      this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The values at which the thumb will snap.\n     * @return {?}\n     */\n\n  }, {\n    key: \"step\",\n    get: function get() {\n      return this._step;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    ,\n    set: function set(v) {\n      this._step = coerceNumberProperty(v, this._step);\n\n      if (this._step % 1 !== 0) {\n        this._roundToDecimal =\n        /** @type {?} */\n        this._step.toString().split('.').pop().length;\n      } // Since this could modify the label, we need to notify the change detection.\n\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether or not to show the thumb label.\n     * @return {?}\n     */\n\n  }, {\n    key: \"thumbLabel\",\n    get: function get() {\n      return this._thumbLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._thumbLabel = coerceBooleanProperty(value);\n    }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     * @return {?}\n     */\n\n  }, {\n    key: \"tickInterval\",\n    get: function get() {\n      return this._tickInterval;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (value === 'auto') {\n        this._tickInterval = 'auto';\n      } else if (typeof value === 'number' || typeof value === 'string') {\n        this._tickInterval = coerceNumberProperty(value,\n        /** @type {?} */\n        this._tickInterval);\n      } else {\n        this._tickInterval = 0;\n      }\n    }\n    /**\n     * Value of the slider.\n     * @return {?}\n     */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      // If the value needs to be read and it is still uninitialized, initialize it to the min.\n      if (this._value === null) {\n        this.value = this._min;\n      }\n\n      return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    ,\n    set: function set(v) {\n      if (v !== this._value) {\n        /** @type {?} */\n        var value = coerceNumberProperty(v); // While incrementing by a decimal we can end up with values like 33.300000000000004.\n        // Truncate it to ensure that it matches the label and to make it easier to work with.\n\n        if (this._roundToDecimal) {\n          value = parseFloat(value.toFixed(this._roundToDecimal));\n        }\n\n        this._value = value;\n        this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Whether the slider is vertical.\n     * @return {?}\n     */\n\n  }, {\n    key: \"vertical\",\n    get: function get() {\n      return this._vertical;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * The value to be used for display purposes.\n     * @return {?}\n     */\n\n  }, {\n    key: \"displayValue\",\n    get: function get() {\n      if (this.displayWith) {\n        return this.displayWith(this.value);\n      } // Note that this could be improved further by rounding something like 0.999 to 1 or\n      // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n      // every change detection cycle.\n\n\n      if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n        return this.value.toFixed(this._roundToDecimal);\n      }\n\n      return this.value || 0;\n    }\n    /**\n     * set focus to the host element\n     * @return {?}\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._focusHostElement();\n    }\n    /**\n     * blur the host element\n     * @return {?}\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this._blurHostElement();\n    }\n    /**\n     * The percentage of the slider that coincides with the value.\n     * @return {?}\n     */\n\n  }, {\n    key: \"percent\",\n    get: function get() {\n      return this._clamp(this._percent);\n    }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     * @return {?}\n     */\n\n  }, {\n    key: \"_invertAxis\",\n    get: function get() {\n      // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n      // top. However from a y-axis standpoint this is inverted.\n      return this.vertical ? !this.invert : this.invert;\n    }\n    /**\n     * Whether the slider is at its minimum value.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isMinValue\",\n    get: function get() {\n      return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_thumbGap\",\n    get: function get() {\n      if (this.disabled) {\n        return DISABLED_THUMB_GAP;\n      }\n\n      if (this._isMinValue && !this.thumbLabel) {\n        return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n      }\n\n      return 0;\n    }\n    /**\n     * CSS styles for the track background element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_trackBackgroundStyles\",\n    get: function get() {\n      /** @type {?} */\n      var axis = this.vertical ? 'Y' : 'X';\n      /** @type {?} */\n\n      var scale = this.vertical ? \"1, \".concat(1 - this.percent, \", 1\") : \"\".concat(1 - this.percent, \", 1, 1\");\n      /** @type {?} */\n\n      var sign = this._shouldInvertMouseCoords() ? '-' : '';\n      return {\n        // scale3d avoids some rendering issues in Chrome. See #12071.\n        transform: \"translate\".concat(axis, \"(\").concat(sign).concat(this._thumbGap, \"px) scale3d(\").concat(scale, \")\")\n      };\n    }\n    /**\n     * CSS styles for the track fill element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_trackFillStyles\",\n    get: function get() {\n      /** @type {?} */\n      var axis = this.vertical ? 'Y' : 'X';\n      /** @type {?} */\n\n      var scale = this.vertical ? \"1, \".concat(this.percent, \", 1\") : \"\".concat(this.percent, \", 1, 1\");\n      /** @type {?} */\n\n      var sign = this._shouldInvertMouseCoords() ? '' : '-';\n      return {\n        // scale3d avoids some rendering issues in Chrome. See #12071.\n        transform: \"translate\".concat(axis, \"(\").concat(sign).concat(this._thumbGap, \"px) scale3d(\").concat(scale, \")\")\n      };\n    }\n    /**\n     * CSS styles for the ticks container element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_ticksContainerStyles\",\n    get: function get() {\n      /** @type {?} */\n      var axis = this.vertical ? 'Y' : 'X';\n      /** @type {?} */\n\n      var sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n      /** @type {?} */\n\n      var offset = this._tickIntervalPercent / 2 * 100;\n      return {\n        'transform': \"translate\".concat(axis, \"(\").concat(sign).concat(offset, \"%)\")\n      };\n    }\n    /**\n     * CSS styles for the ticks element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_ticksStyles\",\n    get: function get() {\n      /** @type {?} */\n      var tickSize = this._tickIntervalPercent * 100;\n      /** @type {?} */\n\n      var backgroundSize = this.vertical ? \"2px \".concat(tickSize, \"%\") : \"\".concat(tickSize, \"% 2px\");\n      /** @type {?} */\n\n      var axis = this.vertical ? 'Y' : 'X';\n      /** @type {?} */\n\n      var sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n      /** @type {?} */\n\n      var rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n      /** @type {?} */\n\n      var styles = {\n        'backgroundSize': backgroundSize,\n        // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n        'transform': \"translateZ(0) translate\".concat(axis, \"(\").concat(sign).concat(tickSize / 2, \"%)\").concat(rotate)\n      };\n\n      if (this._isMinValue && this._thumbGap) {\n        /** @type {?} */\n        var side = this.vertical ? this._invertAxis ? 'Bottom' : 'Top' : this._invertAxis ? 'Right' : 'Left';\n        styles[\"padding\".concat(side)] = \"\".concat(this._thumbGap, \"px\");\n      }\n\n      return styles;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_thumbContainerStyles\",\n    get: function get() {\n      /** @type {?} */\n      var axis = this.vertical ? 'Y' : 'X';\n      /** @type {?} */\n\n      var invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !this._invertAxis : this._invertAxis;\n      /** @type {?} */\n\n      var offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n      return {\n        'transform': \"translate\".concat(axis, \"(-\").concat(offset, \"%)\")\n      };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_shouldInvertMouseCoords\",\n    value: function _shouldInvertMouseCoords() {\n      return this._getDirection() == 'rtl' && !this.vertical ? !this._invertAxis : this._invertAxis;\n    }\n    /**\n     * The language direction for this slider element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getDirection\",\n    value: function _getDirection() {\n      return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(function (origin) {\n        _this2._isActive = !!origin && origin !== 'keyboard';\n\n        _this2._changeDetectorRef.detectChanges();\n      });\n\n      if (this._dir) {\n        this._dirChangeSubscription = this._dir.change.subscribe(function () {\n          _this2._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n\n      this._dirChangeSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onMouseenter\",\n    value: function _onMouseenter() {\n      if (this.disabled) {\n        return;\n      } // We save the dimensions of the slider here so we can use them to update the spacing of the\n      // ticks and determine where on the slider click and slide events happen.\n\n\n      this._sliderDimensions = this._getSliderDimensions();\n\n      this._updateTickIntervalPercent();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onMousedown\",\n    value: function _onMousedown(event) {\n      if (this.disabled) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var oldValue = this.value;\n      this._isSliding = false;\n\n      this._focusHostElement();\n\n      this._updateValueFromPosition({\n        x: event.clientX,\n        y: event.clientY\n      }); // Emit a change and input event if the value changed.\n\n\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n\n        this._emitChangeEvent();\n      }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onSlide\",\n    value: function _onSlide(event) {\n      if (this.disabled) {\n        return;\n      } // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n      // state, call the slide start handler manually.\n\n\n      if (!this._isSliding) {\n        this._onSlideStart(null);\n      } // Prevent the slide from selecting anything else.\n\n\n      event.preventDefault();\n      /** @type {?} */\n\n      var oldValue = this.value;\n\n      this._updateValueFromPosition({\n        x: event.center.x,\n        y: event.center.y\n      }); // Native range elements always emit `input` events when the value changed while sliding.\n\n\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n      }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onSlideStart\",\n    value: function _onSlideStart(event) {\n      if (this.disabled || this._isSliding) {\n        return;\n      } // Simulate mouseenter in case this is a mobile device.\n\n\n      this._onMouseenter();\n\n      this._isSliding = true;\n\n      this._focusHostElement();\n\n      this._valueOnSlideStart = this.value;\n\n      if (event) {\n        this._updateValueFromPosition({\n          x: event.center.x,\n          y: event.center.y\n        });\n\n        event.preventDefault();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onSlideEnd\",\n    value: function _onSlideEnd() {\n      this._isSliding = false;\n\n      if (this._valueOnSlideStart != this.value && !this.disabled) {\n        this._emitChangeEvent();\n      }\n\n      this._valueOnSlideStart = null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onFocus\",\n    value: function _onFocus() {\n      // We save the dimensions of the slider here so we can use them to update the spacing of the\n      // ticks and determine where on the slider click and slide events happen.\n      this._sliderDimensions = this._getSliderDimensions();\n\n      this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBlur\",\n    value: function _onBlur() {\n      this.onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onKeydown\",\n    value: function _onKeydown(event) {\n      if (this.disabled) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var oldValue = this.value;\n\n      switch (event.keyCode) {\n        case PAGE_UP:\n          this._increment(10);\n\n          break;\n\n        case PAGE_DOWN:\n          this._increment(-10);\n\n          break;\n\n        case END:\n          this.value = this.max;\n          break;\n\n        case HOME:\n          this.value = this.min;\n          break;\n\n        case LEFT_ARROW:\n          // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n          // inverted slider the thumb moves in that direction. However for a blind user, nothing\n          // about the slider indicates that it is inverted. They will expect left to be decrement,\n          // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n          // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n          // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n          // sighted users, therefore we do not swap the meaning.\n          this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n\n          break;\n\n        case UP_ARROW:\n          this._increment(1);\n\n          break;\n\n        case RIGHT_ARROW:\n          // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n          this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n\n          break;\n\n        case DOWN_ARROW:\n          this._increment(-1);\n\n          break;\n\n        default:\n          // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n          // it.\n          return;\n      }\n\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n\n        this._emitChangeEvent();\n      }\n\n      this._isSliding = true;\n      event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onKeyup\",\n    value: function _onKeyup() {\n      this._isSliding = false;\n    }\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @param {?} numSteps\n     * @return {?}\n     */\n\n  }, {\n    key: \"_increment\",\n    value: function _increment(numSteps) {\n      this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @param {?} pos\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updateValueFromPosition\",\n    value: function _updateValueFromPosition(pos) {\n      if (!this._sliderDimensions) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n      /** @type {?} */\n\n      var size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      /** @type {?} */\n\n      var posComponent = this.vertical ? pos.y : pos.x;\n      /** @type {?} */\n\n      var percent = this._clamp((posComponent - offset) / size);\n\n      if (this._shouldInvertMouseCoords()) {\n        percent = 1 - percent;\n      } // Since the steps may not divide cleanly into the max value, if the user\n      // slid to 0 or 100 percent, we jump to the min/max value. This approach\n      // is slightly more intuitive than using `Math.ceil` below, because it\n      // follows the user's pointer closer.\n\n\n      if (percent === 0) {\n        this.value = this.min;\n      } else if (percent === 1) {\n        this.value = this.max;\n      } else {\n        /** @type {?} */\n        var exactValue = this._calculateValue(percent);\n        /** @type {?} */\n\n\n        var closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min; // The value needs to snap to the min and max.\n\n        this.value = this._clamp(closestValue, this.min, this.max);\n      }\n    }\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_emitChangeEvent\",\n    value: function _emitChangeEvent() {\n      this._controlValueAccessorChangeFn(this.value);\n\n      this.valueChange.emit(this.value);\n      this.change.emit(this._createChangeEvent());\n    }\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_emitInputEvent\",\n    value: function _emitInputEvent() {\n      this.input.emit(this._createChangeEvent());\n    }\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updateTickIntervalPercent\",\n    value: function _updateTickIntervalPercent() {\n      if (!this.tickInterval || !this._sliderDimensions) {\n        return;\n      }\n\n      if (this.tickInterval == 'auto') {\n        /** @type {?} */\n        var trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        /** @type {?} */\n\n        var pixelsPerStep = trackSize * this.step / (this.max - this.min);\n        /** @type {?} */\n\n        var stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n        /** @type {?} */\n\n        var pixelsPerTick = stepsPerTick * this.step;\n        this._tickIntervalPercent = pixelsPerTick / trackSize;\n      } else {\n        this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n      }\n    }\n    /**\n     * Creates a slider change object from the specified value.\n     * @param {?=} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createChangeEvent\",\n    value: function _createChangeEvent() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;\n\n      /** @type {?} */\n      var event = new MatSliderChange();\n      event.source = this;\n      event.value = value;\n      return event;\n    }\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_calculatePercentage\",\n    value: function _calculatePercentage(value) {\n      return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @param {?} percentage\n     * @return {?}\n     */\n\n  }, {\n    key: \"_calculateValue\",\n    value: function _calculateValue(percentage) {\n      return this.min + percentage * (this.max - this.min);\n    }\n    /**\n     * Return a number between two numbers.\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n\n  }, {\n    key: \"_clamp\",\n    value: function _clamp(value) {\n      var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getSliderDimensions\",\n    value: function _getSliderDimensions() {\n      return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_focusHostElement\",\n    value: function _focusHostElement() {\n      this._elementRef.nativeElement.focus();\n    }\n    /**\n     * Blurs the native element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_blurHostElement\",\n    value: function _blurHostElement() {\n      this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }]);\n\n  return MatSlider;\n}(_MatSliderMixinBase);\n\nMatSlider.ɵfac = function MatSlider_Factory(t) {\n  return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatSlider.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSlider,\n  selectors: [[\"mat-slider\"]],\n  viewQuery: function MatSlider_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\"],\n  hostVars: 26,\n  hostBindings: function MatSlider_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      })(\"blur\", function MatSlider_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"mousedown\", function MatSlider_mousedown_HostBindingHandler($event) {\n        return ctx._onMousedown($event);\n      })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      })(\"keyup\", function MatSlider_keyup_HostBindingHandler() {\n        return ctx._onKeyup();\n      })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() {\n        return ctx._onMouseenter();\n      })(\"slide\", function MatSlider_slide_HostBindingHandler($event) {\n        return ctx._onSlide($event);\n      })(\"slideend\", function MatSlider_slideend_HostBindingHandler() {\n        return ctx._onSlideEnd();\n      })(\"slidestart\", function MatSlider_slidestart_HostBindingHandler($event) {\n        return ctx._onSlideStart($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    color: \"color\",\n    tabIndex: \"tabIndex\",\n    invert: \"invert\",\n    max: \"max\",\n    min: \"min\",\n    value: \"value\",\n    step: \"step\",\n    thumbLabel: \"thumbLabel\",\n    tickInterval: \"tickInterval\",\n    vertical: \"vertical\",\n    displayWith: \"displayWith\"\n  },\n  outputs: {\n    change: \"change\",\n    input: \"input\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]],\n  template: function MatSlider_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵelement(3, \"div\", 3);\n      ɵngcc0.ɵɵelement(4, \"div\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵelement(6, \"div\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n      ɵngcc0.ɵɵelement(8, \"div\", 8);\n      ɵngcc0.ɵɵelement(9, \"div\", 9);\n      ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n      ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n      ɵngcc0.ɵɵtext(12);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    }\n  },\n  directives: [ɵngcc3.NgStyle],\n  styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatSlider.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: FocusMonitor\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatSlider.propDecorators = {\n  invert: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  thumbLabel: [{\n    type: Input\n  }],\n  tickInterval: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  displayWith: [{\n    type: Input\n  }],\n  vertical: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  input: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  _sliderWrapper: [{\n    type: ViewChild,\n    args: ['sliderWrapper']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      exportAs: 'matSlider',\n      providers: [MAT_SLIDER_VALUE_ACCESSOR],\n      host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(mousedown)': '_onMousedown($event)',\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        '(slide)': '_onSlide($event)',\n        '(slideend)': '_onSlideEnd()',\n        '(slidestart)': '_onSlideStart($event)',\n        'class': 'mat-slider',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper><div class=\\\"mat-slider-track-wrapper\\\"><div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div><div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div></div><div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\"><div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div></div><div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\"><div class=\\\"mat-slider-focus-ring\\\"></div><div class=\\\"mat-slider-thumb\\\"></div><div class=\\\"mat-slider-thumb-label\\\"><span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span></div></div></div>\",\n      styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"],\n      inputs: ['disabled', 'color', 'tabIndex'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    change: [{\n      type: Output\n    }],\n    input: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    invert: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    thumbLabel: [{\n      type: Input\n    }],\n    tickInterval: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    _sliderWrapper: [{\n      type: ViewChild,\n      args: ['sliderWrapper']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar MatSliderModule = function MatSliderModule() {\n  _classCallCheck(this, MatSliderModule);\n};\n\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n  return new (t || MatSliderModule)();\n};\n\nMatSliderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSliderModule\n});\nMatSliderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: HAMMER_GESTURE_CONFIG,\n    useClass: GestureConfig\n  }],\n  imports: [[CommonModule, MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule],\n      exports: [MatSlider, MatCommonModule],\n      declarations: [MatSlider],\n      providers: [{\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: GestureConfig\n      }]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, {\n    declarations: function declarations() {\n      return [MatSlider];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatSlider, MatCommonModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatSliderModule, MAT_SLIDER_VALUE_ACCESSOR, MatSliderChange, MatSliderBase, _MatSliderMixinBase, MatSlider }; //# sourceMappingURL=slider.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@angular/material/__ivy_ngcc__/esm2015/slider.js"],"names":["FocusMonitor","Directionality","coerceBooleanProperty","coerceNumberProperty","DOWN_ARROW","END","HOME","LEFT_ARROW","PAGE_DOWN","PAGE_UP","RIGHT_ARROW","UP_ARROW","Attribute","ChangeDetectionStrategy","ChangeDetectorRef","Component","ElementRef","EventEmitter","forwardRef","Inject","Input","Optional","Output","ViewChild","ViewEncapsulation","NgModule","NG_VALUE_ACCESSOR","mixinColor","mixinDisabled","mixinTabIndex","GestureConfig","MatCommonModule","ANIMATION_MODULE_TYPE","Subscription","CommonModule","HAMMER_GESTURE_CONFIG","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatSlider","multi","MatSliderChange","MatSliderBase","_elementRef","_MatSliderMixinBase","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","parseInt","value","v","_calculatePercentage","markForCheck","_roundToDecimal","toString","split","pop","length","parseFloat","toFixed","displayWith","_focusHostElement","_blurHostElement","_clamp","vertical","invert","percent","disabled","_isMinValue","thumbLabel","axis","scale","sign","_shouldInvertMouseCoords","transform","_thumbGap","_getDirection","offset","tickSize","backgroundSize","rotate","styles","side","_invertAxis","invertOffset","monitor","subscribe","origin","detectChanges","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","event","oldValue","_updateValueFromPosition","x","clientX","y","clientY","_emitInputEvent","_emitChangeEvent","_onSlideStart","preventDefault","center","_onMouseenter","_valueOnSlideStart","keyCode","_increment","max","min","numSteps","step","pos","top","left","size","height","width","posComponent","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","source","percentage","_sliderWrapper","nativeElement","getBoundingClientRect","focus","blur","fn","isDisabled","ɵfac","MatSlider_Factory","t","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatSlider_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatSlider_HostBindings","ɵɵlistener","MatSlider_focus_HostBindingHandler","_onFocus","MatSlider_blur_HostBindingHandler","_onBlur","MatSlider_mousedown_HostBindingHandler","$event","_onMousedown","MatSlider_keydown_HostBindingHandler","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_slide_HostBindingHandler","_onSlide","MatSlider_slideend_HostBindingHandler","_onSlideEnd","MatSlider_slidestart_HostBindingHandler","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","inputs","color","outputs","exportAs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatSlider_Template","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","_trackBackgroundStyles","_trackFillStyles","_ticksContainerStyles","_ticksStyles","_thumbContainerStyles","ɵɵtextInterpolate","displayValue","directives","NgStyle","encapsulation","changeDetection","ctorParameters","decorators","String","args","propDecorators","ngDevMode","ɵsetClassMetadata","selector","providers","host","None","OnPush","MatSliderModule","MatSliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","useClass","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, END, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinColor, mixinDisabled, mixinTabIndex, GestureConfig, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n  @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** *\n * The thumb gap size for a disabled slider.\n  @type {?} */\nconst DISABLED_THUMB_GAP = 7;\n/** *\n * The thumb gap size for a non-active slider at its minimum value.\n  @type {?} */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** *\n * The thumb gap size for an active slider at its minimum value.\n  @type {?} */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/** *\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n  @type {?} */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\nclass MatSliderChange {\n}\n/**\n * \\@docs-private\n */\nclass MatSliderBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} tabIndex\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, \n    // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n    _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /**\n         * Event emitted when the slider value has changed.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the slider thumb moves.\n         */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /**\n         * The size of a tick interval as a percentage of the size of the track.\n         */\n        this._tickIntervalPercent = 0;\n        /**\n         * The dimensions of the slider.\n         */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * Subscription to the Directionality change EventEmitter.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slider is inverted.\n     * @return {?}\n     */\n    get invert() { return this._invert; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /**\n     * The maximum value that the slider can have.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The minimum value that the slider can have.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The values at which the thumb will snap.\n     * @return {?}\n     */\n    get step() { return this._step; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = /** @type {?} */ ((this._step.toString().split('.').pop())).length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether or not to show the thumb label.\n     * @return {?}\n     */\n    get thumbLabel() { return this._thumbLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     * @return {?}\n     */\n    get tickInterval() { return this._tickInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, /** @type {?} */ (this._tickInterval));\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /**\n     * Value of the slider.\n     * @return {?}\n     */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (v !== this._value) {\n            /** @type {?} */\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the slider is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * The value to be used for display purposes.\n     * @return {?}\n     */\n    get displayValue() {\n        if (this.displayWith) {\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /**\n     * set focus to the host element\n     * @return {?}\n     */\n    focus() {\n        this._focusHostElement();\n    }\n    /**\n     * blur the host element\n     * @return {?}\n     */\n    blur() {\n        this._blurHostElement();\n    }\n    /**\n     * The percentage of the slider that coincides with the value.\n     * @return {?}\n     */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     * @return {?}\n     */\n    get _invertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /**\n     * Whether the slider is at its minimum value.\n     * @return {?}\n     */\n    get _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     * @return {?}\n     */\n    get _thumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /**\n     * CSS styles for the track background element.\n     * @return {?}\n     */\n    get _trackBackgroundStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the track fill element.\n     * @return {?}\n     */\n    get _trackFillStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${this.percent}, 1` : `${this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the ticks container element.\n     * @return {?}\n     */\n    get _ticksContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        /** @type {?} */\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /**\n     * CSS styles for the ticks element.\n     * @return {?}\n     */\n    get _ticksStyles() {\n        /** @type {?} */\n        let tickSize = this._tickIntervalPercent * 100;\n        /** @type {?} */\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        /** @type {?} */\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        /** @type {?} */\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue && this._thumbGap) {\n            /** @type {?} */\n            let side = this.vertical ?\n                (this._invertAxis ? 'Bottom' : 'Top') :\n                (this._invertAxis ? 'Right' : 'Left');\n            styles[`padding${side}`] = `${this._thumbGap}px`;\n        }\n        return styles;\n    }\n    /**\n     * @return {?}\n     */\n    get _thumbContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        /** @type {?} */\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     * @return {?}\n     */\n    _shouldInvertMouseCoords() {\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    }\n    /**\n     * The language direction for this slider element.\n     * @return {?}\n     */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onMousedown(event) {\n        if (this.disabled) {\n            return;\n        }\n        /** @type {?} */\n        const oldValue = this.value;\n        this._isSliding = false;\n        this._focusHostElement();\n        this._updateValueFromPosition({ x: event.clientX, y: event.clientY });\n        // Emit a change and input event if the value changed.\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onSlide(event) {\n        if (this.disabled) {\n            return;\n        }\n        // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n        // state, call the slide start handler manually.\n        if (!this._isSliding) {\n            this._onSlideStart(null);\n        }\n        // Prevent the slide from selecting anything else.\n        event.preventDefault();\n        /** @type {?} */\n        let oldValue = this.value;\n        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n        // Native range elements always emit `input` events when the value changed while sliding.\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onSlideStart(event) {\n        if (this.disabled || this._isSliding) {\n            return;\n        }\n        // Simulate mouseenter in case this is a mobile device.\n        this._onMouseenter();\n        this._isSliding = true;\n        this._focusHostElement();\n        this._valueOnSlideStart = this.value;\n        if (event) {\n            this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n            event.preventDefault();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onSlideEnd() {\n        this._isSliding = false;\n        if (this._valueOnSlideStart != this.value && !this.disabled) {\n            this._emitChangeEvent();\n        }\n        this._valueOnSlideStart = null;\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onBlur() {\n        this.onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        /** @type {?} */\n        let oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @param {?} numSteps\n     * @return {?}\n     */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @param {?} pos\n     * @return {?}\n     */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        /** @type {?} */\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        /** @type {?} */\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        /** @type {?} */\n        let posComponent = this.vertical ? pos.y : pos.x;\n        /** @type {?} */\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            /** @type {?} */\n            const exactValue = this._calculateValue(percent);\n            /** @type {?} */\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @return {?}\n     */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @return {?}\n     */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            /** @type {?} */\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            /** @type {?} */\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            /** @type {?} */\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            /** @type {?} */\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /**\n     * Creates a slider change object from the specified value.\n     * @param {?=} value\n     * @return {?}\n     */\n    _createChangeEvent(value = this.value) {\n        /** @type {?} */\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @param {?} value\n     * @return {?}\n     */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @param {?} percentage\n     * @return {?}\n     */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /**\n     * Return a number between two numbers.\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @return {?}\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @return {?}\n     */\n    _focusHostElement() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * Blurs the native element.\n     * @return {?}\n     */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\"], hostVars: 26, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"mousedown\", function MatSlider_mousedown_HostBindingHandler($event) { return ctx._onMousedown($event); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"slide\", function MatSlider_slide_HostBindingHandler($event) { return ctx._onSlide($event); })(\"slideend\", function MatSlider_slideend_HostBindingHandler() { return ctx._onSlideEnd(); })(\"slidestart\", function MatSlider_slidestart_HostBindingHandler($event) { return ctx._onSlideStart($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{ selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(mousedown)': '_onMousedown($event)',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    '(slide)': '_onSlide($event)',\n                    '(slideend)': '_onSlideEnd()',\n                    '(slidestart)': '_onSlideStart($event)',\n                    'class': 'mat-slider',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper><div class=\\\"mat-slider-track-wrapper\\\"><div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div><div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div></div><div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\"><div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div></div><div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\"><div class=\\\"mat-slider-focus-ring\\\"></div><div class=\\\"mat-slider-thumb\\\"></div><div class=\\\"mat-slider-thumb-label\\\"><span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span></div></div></div>\",\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"],\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); };\nMatSliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }], imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider],\n                providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatSliderModule, MAT_SLIDER_VALUE_ACCESSOR, MatSliderChange, MatSliderBase, _MatSliderMixinBase, MatSlider };\n\n//# sourceMappingURL=slider.js.map"]},"metadata":{},"sourceType":"module"}