{"ast":null,"code":"import { mergeAll } from '../operators/mergeAll';\nimport { internalFromArray } from './fromArray';\nimport { innerFrom } from './from';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nexport function merge() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var scheduler = popScheduler(args);\n  var concurrent = popNumber(args, Infinity);\n  var sources = args;\n  return !sources.length ? EMPTY : sources.length === 1 ? innerFrom(sources[0]) : mergeAll(concurrent)(internalFromArray(sources, scheduler));\n} //# sourceMappingURL=merge.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/rxjs/dist/esm/internal/observable/merge.js"],"names":["mergeAll","internalFromArray","innerFrom","EMPTY","popNumber","popScheduler","merge","args","scheduler","concurrent","Infinity","sources","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,uBAAzB;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,cAAxC;AACA,OAAO,SAASC,KAAT,GAAwB;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC3B,MAAMC,SAAS,GAAGH,YAAY,CAACE,IAAD,CAA9B;AACA,MAAME,UAAU,GAAGL,SAAS,CAACG,IAAD,EAAOG,QAAP,CAA5B;AACA,MAAMC,OAAO,GAAGJ,IAAhB;AACA,SAAO,CAACI,OAAO,CAACC,MAAT,GAECT,KAFD,GAGDQ,OAAO,CAACC,MAAR,KAAmB,CAAnB,GAEMV,SAAS,CAACS,OAAO,CAAC,CAAD,CAAR,CAFf,GAIMX,QAAQ,CAACS,UAAD,CAAR,CAAqBR,iBAAiB,CAACU,OAAD,EAAUH,SAAV,CAAtC,CAPZ;AAQH,C,CACD","sourcesContent":["import { mergeAll } from '../operators/mergeAll';\nimport { internalFromArray } from './fromArray';\nimport { innerFrom } from './from';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nexport function merge(...args) {\n    const scheduler = popScheduler(args);\n    const concurrent = popNumber(args, Infinity);\n    const sources = args;\n    return !sources.length\n        ?\n            EMPTY\n        : sources.length === 1\n            ?\n                innerFrom(sources[0])\n            :\n                mergeAll(concurrent)(internalFromArray(sources, scheduler));\n}\n//# sourceMappingURL=merge.js.map"]},"metadata":{},"sourceType":"module"}