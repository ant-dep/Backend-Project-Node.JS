{"ast":null,"code":"import _createClass from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, ElementRef, Input, Inject, Optional, Output, SkipSelf, ViewContainerRef, ViewEncapsulation, ViewChild, Host, ContentChildren, NgModule } from '@angular/core';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge, Subscription, EMPTY } from 'rxjs';\nimport { filter, startWith, take, distinctUntilChanged } from 'rxjs/operators';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, HOME, END } from '@angular/cdk/keycodes';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n  @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\nvar _c0 = [\"body\"];\n\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) {}\n\nvar _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nvar _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\n\nvar _c3 = function _c3(a0, a1) {\n  return {\n    collapsedHeight: a0,\n    expandedHeight: a1\n  };\n};\n\nvar _c4 = function _c4(a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n  }\n}\n\nvar _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nvar _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nvar MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Time and timing curve for expansion panel animations.\n  @type {?} */\n\nvar EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/** *\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n  @type {?} */\n\nvar matExpansionAnimations = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [state('collapsed, void', style({\n    transform: 'rotate(0deg)'\n  })), state('expanded', style({\n    transform: 'rotate(180deg)'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))]),\n\n  /** Animation that expands and collapses the panel header height. */\n  expansionHeaderHeight: trigger('expansionHeight', [state('collapsed, void', style({\n    height: '{{collapsedHeight}}'\n  }), {\n    params: {\n      collapsedHeight: '48px'\n    }\n  }), state('expanded', style({\n    height: '{{expandedHeight}}'\n  }), {\n    params: {\n      expandedHeight: '64px'\n    }\n  }), transition('expanded <=> collapsed, void => collapsed', group([query('@indicatorRotate', animateChild(), {\n    optional: true\n  }), animate(EXPANSION_PANEL_ANIMATION_TIMING)]))]),\n\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [state('collapsed, void', style({\n    height: '0px',\n    visibility: 'hidden'\n  })), state('expanded', style({\n    height: '*',\n    visibility: 'visible'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n\nvar MatExpansionPanelContent =\n/**\n * @param {?} _template\n */\nfunction MatExpansionPanelContent(_template) {\n  _classCallCheck(this, MatExpansionPanelContent);\n\n  this._template = _template;\n};\n\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) {\n  return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelContent,\n  selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]]\n});\n/** @nocollapse */\n\nMatExpansionPanelContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matExpansionPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar _CdkAccordionItem = CdkAccordionItem;\n/** *\n * Counter for generating unique element ids.\n  @type {?} */\n\nvar uniqueId = 0;\nvar ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\n\nvar MatExpansionPanel = /*#__PURE__*/function (_CdkAccordionItem2) {\n  _inherits(MatExpansionPanel, _CdkAccordionItem2);\n\n  var _super = _createSuper(MatExpansionPanel);\n\n  /**\n   * @param {?} accordion\n   * @param {?} _changeDetectorRef\n   * @param {?} _uniqueSelectionDispatcher\n   * @param {?} _viewContainerRef\n   * @param {?=} _document\n   * @param {?=} _animationMode\n   */\n  function MatExpansionPanel(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, // @breaking-change 8.0.0 _document and _animationMode to be made required\n  _document, _animationMode) {\n    var _this;\n\n    _classCallCheck(this, MatExpansionPanel);\n\n    _this = _super.call(this, accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    _this._viewContainerRef = _viewContainerRef;\n    _this._animationMode = _animationMode;\n    _this._hideToggle = false;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     */\n\n    _this.afterExpand = new EventEmitter();\n    /**\n     * An event emitted after the body's collapse animation happens.\n     */\n\n    _this.afterCollapse = new EventEmitter();\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     */\n\n    _this._inputChanges = new Subject();\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     */\n\n    _this._headerId = \"mat-expansion-panel-header-\".concat(uniqueId++);\n    /**\n     * Stream of body animation done events.\n     */\n\n    _this._bodyAnimationDone = new Subject();\n    _this.accordion = accordion;\n    _this._document = _document; // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n\n    _this._bodyAnimationDone.pipe(distinctUntilChanged(function (x, y) {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(function (event) {\n      if (event.fromState !== 'void') {\n        if (event.toState === 'expanded') {\n          _this.afterExpand.emit();\n        } else if (event.toState === 'collapsed') {\n          _this.afterCollapse.emit();\n        }\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Whether the toggle indicator should be hidden.\n   * @return {?}\n   */\n\n\n  _createClass(MatExpansionPanel, [{\n    key: \"hideToggle\",\n    get: function get() {\n      return this._hideToggle || this.accordion && this.accordion.hideToggle;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hasSpacing\",\n    value: function _hasSpacing() {\n      if (this.accordion) {\n        // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n        // the [displayMode] input changes, the change detection will also cover the host bindings\n        // of this expansion panel.\n        return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n      }\n\n      return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getExpandedState\",\n    value: function _getExpandedState() {\n      return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      if (this._lazyContent) {\n        // Render the content as soon as the panel becomes open.\n        this.opened.pipe(startWith(\n        /** @type {?} */\n        null), filter(function () {\n          return _this2.expanded && !_this2._portal;\n        }), take(1)).subscribe(function () {\n          _this2._portal = new TemplatePortal(_this2._lazyContent._template, _this2._viewContainerRef);\n        });\n      }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(MatExpansionPanel.prototype), \"ngOnDestroy\", this).call(this);\n\n      this._bodyAnimationDone.complete();\n\n      this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_containsFocus\",\n    value: function _containsFocus() {\n      if (this._body && this._document) {\n        /** @type {?} */\n        var focusedElement = this._document.activeElement;\n        /** @type {?} */\n\n        var bodyElement = this._body.nativeElement;\n        return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n      }\n\n      return false;\n    }\n  }]);\n\n  return MatExpansionPanel;\n}(CdkAccordionItem);\n\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) {\n  return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanel,\n  selectors: [[\"mat-expansion-panel\"]],\n  contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    }\n  },\n  viewQuery: function MatExpansionPanel_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-expansion-panel\"],\n  hostVars: 6,\n  hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    expanded: \"expanded\",\n    hideToggle: \"hideToggle\"\n  },\n  outputs: {\n    opened: \"opened\",\n    closed: \"closed\",\n    expandedChange: \"expandedChange\",\n    afterExpand: \"afterExpand\",\n    afterCollapse: \"afterCollapse\"\n  },\n  exportAs: [\"matExpansionPanel\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n  // to the same accordion.\n  {\n    provide: MAT_ACCORDION,\n    useValue: ɵ0\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n  template: function MatExpansionPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) {\n        return ctx._bodyAnimationDone.next($event);\n      });\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(6, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    }\n  },\n  directives: [ɵngcc2.CdkPortalOutlet],\n  styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.bodyExpansion]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatExpansionPanel.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [MAT_ACCORDION]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: UniqueSelectionDispatcher\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatExpansionPanel.propDecorators = {\n  hideToggle: [{\n    type: Input\n  }],\n  afterExpand: [{\n    type: Output\n  }],\n  afterCollapse: [{\n    type: Output\n  }],\n  _lazyContent: [{\n    type: ContentChild,\n    args: [MatExpansionPanelContent]\n  }],\n  _body: [{\n    type: ViewChild,\n    args: ['body']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n    type: Component,\n    args: [{\n      styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n      selector: 'mat-expansion-panel',\n      exportAs: 'matExpansionPanel',\n      template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled', 'expanded'],\n      outputs: ['opened', 'closed', 'expandedChange'],\n      animations: [matExpansionAnimations.bodyExpansion],\n      providers: [// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MAT_ACCORDION,\n        useValue: ɵ0\n      }],\n      host: {\n        'class': 'mat-expansion-panel',\n        '[class.mat-expanded]': 'expanded',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [MAT_ACCORDION]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    afterExpand: [{\n      type: Output\n    }],\n    afterCollapse: [{\n      type: Output\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatExpansionPanelContent]\n    }],\n    _body: [{\n      type: ViewChild,\n      args: ['body']\n    }]\n  });\n})();\n\nvar MatExpansionPanelActionRow = function MatExpansionPanelActionRow() {\n  _classCallCheck(this, MatExpansionPanelActionRow);\n};\n\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) {\n  return new (t || MatExpansionPanelActionRow)();\n};\n\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelActionRow,\n  selectors: [[\"mat-action-row\"]],\n  hostAttrs: [1, \"mat-action-row\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-action-row',\n      host: {\n        class: 'mat-action-row'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\n\n\nvar MatExpansionPanelHeader = /*#__PURE__*/function () {\n  /**\n   * @param {?} panel\n   * @param {?} _element\n   * @param {?} _focusMonitor\n   * @param {?} _changeDetectorRef\n   */\n  function MatExpansionPanelHeader(panel, _element, _focusMonitor, _changeDetectorRef) {\n    var _this3 = this;\n\n    _classCallCheck(this, MatExpansionPanelHeader);\n\n    this.panel = panel;\n    this._element = _element;\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parentChangeSubscription = Subscription.EMPTY;\n    /** @type {?} */\n\n    var accordionHideToggleChange = panel.accordion ? panel.accordion._stateChanges.pipe(filter(function (changes) {\n      return !!changes[\"hideToggle\"];\n    })) : EMPTY; // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n\n    this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(function (changes) {\n      return !!(changes[\"hideToggle\"] || changes[\"disabled\"]);\n    }))).subscribe(function () {\n      return _this3._changeDetectorRef.markForCheck();\n    }); // Avoids focus being lost if the panel contained the focused element and was closed.\n\n    panel.closed.pipe(filter(function () {\n      return panel._containsFocus();\n    })).subscribe(function () {\n      return _focusMonitor.focusVia(_element, 'program');\n    });\n\n    _focusMonitor.monitor(_element).subscribe(function (origin) {\n      if (origin && panel.accordion) {\n        panel.accordion._handleHeaderFocus(_this3);\n      }\n    });\n  }\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * \\@docs-private\n   * @return {?}\n   */\n\n\n  _createClass(MatExpansionPanelHeader, [{\n    key: \"disabled\",\n    get: function get() {\n      return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_toggle\",\n    value: function _toggle() {\n      this.panel.toggle();\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isExpanded\",\n    value: function _isExpanded() {\n      return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getExpandedState\",\n    value: function _getExpandedState() {\n      return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getPanelId\",\n    value: function _getPanelId() {\n      return this.panel.id;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_showToggle\",\n    value: function _showToggle() {\n      return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_keydown\",\n    value: function _keydown(event) {\n      switch (event.keyCode) {\n        // Toggle for space and enter keys.\n        case SPACE:\n        case ENTER:\n          event.preventDefault();\n\n          this._toggle();\n\n          break;\n\n        default:\n          if (this.panel.accordion) {\n            this.panel.accordion._handleHeaderKeydown(event);\n          }\n\n          return;\n      }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @return {?}\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'program';\n\n      this._focusMonitor.focusVia(this._element, origin);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._parentChangeSubscription.unsubscribe();\n\n      this._focusMonitor.stopMonitoring(this._element);\n    }\n  }]);\n\n  return MatExpansionPanelHeader;\n}();\n\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) {\n  return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanelHeader,\n  selectors: [[\"mat-expansion-panel-header\"]],\n  hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"],\n  hostVars: 14,\n  hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n        return ctx._toggle();\n      })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    }\n  },\n  inputs: {\n    expandedHeight: \"expandedHeight\",\n    collapsedHeight: \"collapsedHeight\"\n  },\n  ngContentSelectors: _c6,\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]],\n  template: function MatExpansionPanelHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c5);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵprojection(3, 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    }\n  },\n  directives: [ɵngcc4.NgIf],\n  styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatExpansionPanelHeader.ctorParameters = function () {\n  return [{\n    type: MatExpansionPanel,\n    decorators: [{\n      type: Host\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: FocusMonitor\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nMatExpansionPanelHeader.propDecorators = {\n  expandedHeight: [{\n    type: Input\n  }],\n  collapsedHeight: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel-header',\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n      template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight],\n      host: {\n        'class': 'mat-expansion-panel-header',\n        'role': 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': '_isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.mat-expanded]': '_isExpanded()',\n        '(click)': '_toggle()',\n        '(keydown)': '_keydown($event)',\n        '[@expansionHeight]': \"{\\n        value: _getExpandedState(),\\n        params: {\\n          collapsedHeight: collapsedHeight,\\n          expandedHeight: expandedHeight\\n        }\\n    }\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatExpansionPanel,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc3.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    expandedHeight: [{\n      type: Input\n    }],\n    collapsedHeight: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n\n\nvar MatExpansionPanelDescription = function MatExpansionPanelDescription() {\n  _classCallCheck(this, MatExpansionPanelDescription);\n};\n\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) {\n  return new (t || MatExpansionPanelDescription)();\n};\n\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelDescription,\n  selectors: [[\"mat-panel-description\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-description\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-description',\n      host: {\n        class: 'mat-expansion-panel-header-description'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n\n\nvar MatExpansionPanelTitle = function MatExpansionPanelTitle() {\n  _classCallCheck(this, MatExpansionPanelTitle);\n};\n\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) {\n  return new (t || MatExpansionPanelTitle)();\n};\n\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelTitle,\n  selectors: [[\"mat-panel-title\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-title\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-title',\n      host: {\n        class: 'mat-expansion-panel-header-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Directive for a Material Design Accordion.\n */\n\n\nvar MatAccordion = /*#__PURE__*/function (_CdkAccordion) {\n  _inherits(MatAccordion, _CdkAccordion);\n\n  var _super2 = _createSuper(MatAccordion);\n\n  function MatAccordion() {\n    var _this4;\n\n    _classCallCheck(this, MatAccordion);\n\n    _this4 = _super2.apply(this, arguments);\n    _this4._hideToggle = false;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n\n    _this4.displayMode = 'default';\n    return _this4;\n  }\n  /**\n   * Whether the expansion indicator should be hidden.\n   * @return {?}\n   */\n\n\n  _createClass(MatAccordion, [{\n    key: \"hideToggle\",\n    get: function get() {\n      return this._hideToggle;\n    }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    ,\n    set: function set(show) {\n      this._hideToggle = coerceBooleanProperty(show);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._keyManager = new FocusKeyManager(this._headers).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handleHeaderKeydown\",\n    value: function _handleHeaderKeydown(event) {\n      var keyCode = event.keyCode;\n      /** @type {?} */\n\n      var manager = this._keyManager;\n\n      if (keyCode === HOME) {\n        manager.setFirstItemActive();\n        event.preventDefault();\n      } else if (keyCode === END) {\n        manager.setLastItemActive();\n        event.preventDefault();\n      } else {\n        this._keyManager.onKeydown(event);\n      }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handleHeaderFocus\",\n    value: function _handleHeaderFocus(header) {\n      this._keyManager.updateActiveItem(header);\n    }\n  }]);\n\n  return MatAccordion;\n}(CdkAccordion);\n\nMatAccordion.ɵfac = /*@__PURE__*/function () {\n  var ɵMatAccordion_BaseFactory;\n  return function MatAccordion_Factory(t) {\n    return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion);\n  };\n}();\n\nMatAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatAccordion,\n  selectors: [[\"mat-accordion\"]],\n  contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-accordion\"],\n  inputs: {\n    multi: \"multi\",\n    displayMode: \"displayMode\",\n    hideToggle: \"hideToggle\"\n  },\n  exportAs: [\"matAccordion\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_ACCORDION,\n    useExisting: MatAccordion\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMatAccordion.propDecorators = {\n  _headers: [{\n    type: ContentChildren,\n    args: [MatExpansionPanelHeader, {\n      descendants: true\n    }]\n  }],\n  hideToggle: [{\n    type: Input\n  }],\n  displayMode: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-accordion',\n      exportAs: 'matAccordion',\n      inputs: ['multi'],\n      providers: [{\n        provide: MAT_ACCORDION,\n        useExisting: MatAccordion\n      }],\n      host: {\n        class: 'mat-accordion'\n      }\n    }]\n  }], null, {\n    displayMode: [{\n      type: Input\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _headers: [{\n      type: ContentChildren,\n      args: [MatExpansionPanelHeader, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar MatExpansionModule = function MatExpansionModule() {\n  _classCallCheck(this, MatExpansionModule);\n};\n\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) {\n  return new (t || MatExpansionModule)();\n};\n\nMatExpansionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatExpansionModule\n});\nMatExpansionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule, CdkAccordionModule, PortalModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, CdkAccordionModule, PortalModule],\n      exports: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent],\n      declarations: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, {\n    declarations: function declarations() {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    },\n    imports: function imports() {\n      return [CommonModule, CdkAccordionModule, PortalModule];\n    },\n    exports: function exports() {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatExpansionModule, MatAccordion, MAT_ACCORDION, _CdkAccordionItem, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations }; //# sourceMappingURL=expansion.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@angular/material/__ivy_ngcc__/esm2015/expansion.js"],"names":["InjectionToken","Directive","TemplateRef","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","EventEmitter","ElementRef","Input","Inject","Optional","Output","SkipSelf","ViewContainerRef","ViewEncapsulation","ViewChild","Host","ContentChildren","NgModule","animate","animateChild","group","state","style","transition","trigger","query","CdkAccordionItem","CdkAccordion","CdkAccordionModule","coerceBooleanProperty","UniqueSelectionDispatcher","TemplatePortal","PortalModule","DOCUMENT","CommonModule","ANIMATION_MODULE_TYPE","Subject","merge","Subscription","EMPTY","filter","startWith","take","distinctUntilChanged","FocusMonitor","FocusKeyManager","ENTER","SPACE","HOME","END","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","_c3","a0","a1","collapsedHeight","expandedHeight","_c4","value","params","MatExpansionPanelHeader_span_4_Template","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","_getExpandedState","_c5","_c6","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","expansionHeaderHeight","height","optional","bodyExpansion","visibility","MatExpansionPanelContent","_template","ɵfac","MatExpansionPanelContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","args","selector","_CdkAccordionItem","uniqueId","ɵ0","undefined","MatExpansionPanel","accordion","_changeDetectorRef","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","x","y","fromState","toState","subscribe","event","emit","hideToggle","expanded","displayMode","_lazyContent","opened","_portal","changes","next","complete","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","MatExpansionPanel_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatExpansionPanel_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","ɵɵclassProp","_hasSpacing","inputs","disabled","outputs","closed","expandedChange","exportAs","features","ɵɵProvidersFeature","provide","useValue","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵlistener","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","ɵɵtemplate","ɵɵelementEnd","ɵɵadvance","id","ɵɵattribute","directives","CdkPortalOutlet","styles","encapsulation","data","animation","changeDetection","decorators","String","propDecorators","None","OnPush","animations","providers","host","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","accordionHideToggleChange","_stateChanges","markForCheck","_containsFocus","focusVia","monitor","origin","_handleHeaderFocus","toggle","keyCode","preventDefault","_toggle","_handleHeaderKeydown","unsubscribe","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_keydown","_getPanelId","_isExpanded","ɵɵsyntheticHostProperty","ɵɵpureFunction2","MatExpansionPanelHeader_Template","_showToggle","NgIf","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","show","_keyManager","_headers","withWrap","manager","setFirstItemActive","setLastItemActive","onKeydown","header","updateActiveItem","ɵMatAccordion_BaseFactory","MatAccordion_Factory","ɵɵgetInheritedFactory","MatAccordion_ContentQueries","multi","useExisting","descendants","MatExpansionModule","MatExpansionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, ElementRef, Input, Inject, Optional, Output, SkipSelf, ViewContainerRef, ViewEncapsulation, ViewChild, Host, ContentChildren, NgModule } from '@angular/core';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge, Subscription, EMPTY } from 'rxjs';\nimport { filter, startWith, take, distinctUntilChanged } from 'rxjs/operators';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, HOME, END } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n  @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Time and timing curve for expansion panel animations.\n  @type {?} */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/** *\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n  @type {?} */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel header height. */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _CdkAccordionItem = CdkAccordionItem;\n/** *\n * Counter for generating unique element ids.\n  @type {?} */\nlet uniqueId = 0;\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     * @param {?=} _animationMode\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, \n    // @breaking-change 8.0.0 _document and _animationMode to be made required\n    _document, _animationMode) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n            // the [displayMode] input changes, the change detection will also cover the host bindings\n            // of this expansion panel.\n            return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(/** @type {?} */ ((null))), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body && this._document) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{ styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                } }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!changes[\"hideToggle\"])) : EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => !!(changes[\"hideToggle\"] || changes[\"disabled\"]))))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        _focusMonitor.monitor(_element).subscribe(origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        this.panel.toggle();\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                event.preventDefault();\n                this._toggle();\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @return {?}\n     */\n    focus(origin = 'program') {\n        this._focusMonitor.focusVia(this._element, origin);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"], hostVars: 14, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel-header',\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n                template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                } }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this._headers).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = /*@__PURE__*/ function () { let ɵMatAccordion_BaseFactory; return function MatAccordion_Factory(t) { return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion); }; }();\nMatAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], inputs: { multi: \"multi\", displayMode: \"displayMode\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatExpansionModule, MatAccordion, MAT_ACCORDION, _CdkAccordionItem, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map"]},"metadata":{},"sourceType":"module"}