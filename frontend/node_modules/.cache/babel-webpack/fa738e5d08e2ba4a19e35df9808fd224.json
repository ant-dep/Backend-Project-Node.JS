{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nexport function bufferTime(bufferTimeSpan) {\n  var _a, _b;\n\n  for (var _len = arguments.length, otherArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    otherArgs[_key - 1] = arguments[_key];\n  }\n\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxBufferSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var bufferRecords = [];\n    var restartOnEmit = false;\n\n    var emit = function emit(record) {\n      var buffer = record.buffer,\n          subs = record.subs;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    var startBuffer = function startBuffer() {\n      if (bufferRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var buffer = [];\n        var record = {\n          buffer: buffer,\n          subs: subs\n        };\n        bufferRecords.push(record);\n        subs.add(scheduler.schedule(function () {\n          return emit(record);\n        }, bufferTimeSpan));\n      }\n    };\n\n    bufferCreationInterval !== null && bufferCreationInterval >= 0 ? subscriber.add(scheduler.schedule(function () {\n      startBuffer();\n      !this.closed && subscriber.add(this.schedule(null, bufferCreationInterval));\n    }, bufferCreationInterval)) : restartOnEmit = true;\n    startBuffer();\n    var bufferTimeSubscriber = new OperatorSubscriber(subscriber, function (value) {\n      var recordsCopy = bufferRecords.slice();\n\n      var _iterator = _createForOfIteratorHelper(recordsCopy),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var record = _step.value;\n          var buffer = record.buffer;\n          buffer.push(value);\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }, function () {\n      while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n        subscriber.next(bufferRecords.shift().buffer);\n      }\n\n      bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n      subscriber.complete();\n      subscriber.unsubscribe();\n    }, undefined, function () {\n      return bufferRecords = null;\n    });\n    source.subscribe(bufferTimeSubscriber);\n  });\n} //# sourceMappingURL=bufferTime.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/rxjs/dist/esm/internal/operators/bufferTime.js"],"names":["Subscription","operate","OperatorSubscriber","arrRemove","asyncScheduler","popScheduler","bufferTime","bufferTimeSpan","_a","_b","otherArgs","scheduler","bufferCreationInterval","maxBufferSize","Infinity","source","subscriber","bufferRecords","restartOnEmit","emit","record","buffer","subs","unsubscribe","next","startBuffer","add","push","schedule","closed","bufferTimeSubscriber","value","recordsCopy","slice","length","shift","complete","undefined","subscribe"],"mappings":"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","sourcesContent":["import { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nexport function bufferTime(bufferTimeSpan, ...otherArgs) {\n    var _a, _b;\n    const scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    const bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    const maxBufferSize = otherArgs[1] || Infinity;\n    return operate((source, subscriber) => {\n        let bufferRecords = [];\n        let restartOnEmit = false;\n        const emit = (record) => {\n            const { buffer, subs } = record;\n            subs.unsubscribe();\n            arrRemove(bufferRecords, record);\n            subscriber.next(buffer);\n            restartOnEmit && startBuffer();\n        };\n        const startBuffer = () => {\n            if (bufferRecords) {\n                const subs = new Subscription();\n                subscriber.add(subs);\n                const buffer = [];\n                const record = {\n                    buffer,\n                    subs,\n                };\n                bufferRecords.push(record);\n                subs.add(scheduler.schedule(() => emit(record), bufferTimeSpan));\n            }\n        };\n        bufferCreationInterval !== null && bufferCreationInterval >= 0\n            ?\n                subscriber.add(scheduler.schedule(function () {\n                    startBuffer();\n                    !this.closed && subscriber.add(this.schedule(null, bufferCreationInterval));\n                }, bufferCreationInterval))\n            : (restartOnEmit = true);\n        startBuffer();\n        const bufferTimeSubscriber = new OperatorSubscriber(subscriber, (value) => {\n            const recordsCopy = bufferRecords.slice();\n            for (const record of recordsCopy) {\n                const { buffer } = record;\n                buffer.push(value);\n                maxBufferSize <= buffer.length && emit(record);\n            }\n        }, () => {\n            while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n                subscriber.next(bufferRecords.shift().buffer);\n            }\n            bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n            subscriber.complete();\n            subscriber.unsubscribe();\n        }, undefined, () => (bufferRecords = null));\n        source.subscribe(bufferTimeSubscriber);\n    });\n}\n//# sourceMappingURL=bufferTime.js.map"]},"metadata":{},"sourceType":"module"}