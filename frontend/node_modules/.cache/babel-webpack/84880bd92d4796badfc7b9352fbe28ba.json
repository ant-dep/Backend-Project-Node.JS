{"ast":null,"code":"import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { caughtSchedule } from '../util/caughtSchedule';\nexport function scheduleIterable(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var iterator;\n    subscriber.add(scheduler.schedule(function () {\n      iterator = input[Symbol_iterator]();\n      caughtSchedule(subscriber, scheduler, function () {\n        var _iterator$next = iterator.next(),\n            value = _iterator$next.value,\n            done = _iterator$next.done;\n\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      });\n    }));\n    return function () {\n      return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n    };\n  });\n} //# sourceMappingURL=scheduleIterable.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/rxjs/dist/esm/internal/scheduled/scheduleIterable.js"],"names":["Observable","iterator","Symbol_iterator","isFunction","caughtSchedule","scheduleIterable","input","scheduler","subscriber","add","schedule","next","value","done","complete","return"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAQ,IAAIC,eAArB,QAA4C,oBAA5C;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,SAAjC,EAA4C;AAC/C,SAAO,IAAIP,UAAJ,CAAe,UAACQ,UAAD,EAAgB;AAClC,QAAIP,QAAJ;AACAO,IAAAA,UAAU,CAACC,GAAX,CAAeF,SAAS,CAACG,QAAV,CAAmB,YAAM;AACpCT,MAAAA,QAAQ,GAAGK,KAAK,CAACJ,eAAD,CAAL,EAAX;AACAE,MAAAA,cAAc,CAACI,UAAD,EAAaD,SAAb,EAAwB,YAAY;AAC9C,6BAAwBN,QAAQ,CAACU,IAAT,EAAxB;AAAA,YAAQC,KAAR,kBAAQA,KAAR;AAAA,YAAeC,IAAf,kBAAeA,IAAf;;AACA,YAAIA,IAAJ,EAAU;AACNL,UAAAA,UAAU,CAACM,QAAX;AACH,SAFD,MAGK;AACDN,UAAAA,UAAU,CAACG,IAAX,CAAgBC,KAAhB;AACA,eAAKF,QAAL;AACH;AACJ,OATa,CAAd;AAUH,KAZc,CAAf;AAaA,WAAO;AAAA,aAAMP,UAAU,CAACF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACc,MAA9D,CAAV,IAAmFd,QAAQ,CAACc,MAAT,EAAzF;AAAA,KAAP;AACH,GAhBM,CAAP;AAiBH,C,CACD","sourcesContent":["import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { caughtSchedule } from '../util/caughtSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable((subscriber) => {\n        let iterator;\n        subscriber.add(scheduler.schedule(() => {\n            iterator = input[Symbol_iterator]();\n            caughtSchedule(subscriber, scheduler, function () {\n                const { value, done } = iterator.next();\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                    this.schedule();\n                }\n            });\n        }));\n        return () => isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map"]},"metadata":{},"sourceType":"module"}