{"ast":null,"code":"import _classCallCheck from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, NgZone, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { debounceTime, filter, map, startWith, take, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Animations used by the Material drawers.\n * \\@docs-private\n  @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\nvar _c0 = [\"*\"];\n\nfunction MatDrawerContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2._onBackdropClicked();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\n\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nvar _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\n\nfunction MatSidenavContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2._onBackdropClicked();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\n\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nvar _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nvar _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\";\nvar matDrawerAnimations = {\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: trigger('transform', [// We remove the `transform` here completely, rather than setting it to zero, because:\n  // 1. Having a transform can cause elements with ripples or an animated\n  //    transform to shift around in Chrome with an RTL layout (see #10023).\n  // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  state('open, open-instant', style({\n    'transform': 'none',\n    'visibility': 'visible'\n  })), state('void', style({\n    // Avoids the shadow showing up when closed in SSR.\n    'box-shadow': 'none',\n    'visibility': 'hidden'\n  })), transition('void => open-instant', animate('0ms')), transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\n\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(\"A drawer was already declared for 'position=\\\"\".concat(position, \"\\\"'\"));\n}\n/** *\n * Configures whether drawers should use auto sizing by default.\n  @type {?} */\n\n\nvar MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\n\nvar MatDrawerContent = /*#__PURE__*/function (_CdkScrollable) {\n  _inherits(MatDrawerContent, _CdkScrollable);\n\n  var _super = _createSuper(MatDrawerContent);\n\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _container\n   * @param {?} elementRef\n   * @param {?} scrollDispatcher\n   * @param {?} ngZone\n   */\n  function MatDrawerContent(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n    var _this;\n\n    _classCallCheck(this, MatDrawerContent);\n\n    _this = _super.call(this, elementRef, scrollDispatcher, ngZone);\n    _this._changeDetectorRef = _changeDetectorRef;\n    _this._container = _container;\n    return _this;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(MatDrawerContent, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this._container._contentMarginChanges.subscribe(function () {\n        _this2._changeDetectorRef.markForCheck();\n      });\n    }\n  }]);\n\n  return MatDrawerContent;\n}(CdkScrollable);\n\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) {\n  return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return MatDrawerContainer;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatDrawerContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContent,\n  selectors: [[\"mat-drawer-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\"],\n  hostVars: 4,\n  hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatDrawerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDrawerContent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: MatDrawerContainer,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return MatDrawerContainer;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: ScrollDispatcher\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatDrawerContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return MatDrawerContainer;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\n\n\nvar MatDrawer = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _focusTrapFactory\n   * @param {?} _focusMonitor\n   * @param {?} _platform\n   * @param {?} _ngZone\n   * @param {?} _doc\n   */\n  function MatDrawer(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc) {\n    var _this3 = this;\n\n    _classCallCheck(this, MatDrawer);\n\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._focusMonitor = _focusMonitor;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._doc = _doc;\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     */\n\n    this._enableAnimations = false;\n    this._position = 'start';\n    this._mode = 'over';\n    this._disableClose = false;\n    this._autoFocus = true;\n    /**\n     * Emits whenever the drawer has started animating.\n     */\n\n    this._animationStarted = new Subject();\n    /**\n     * Emits whenever the drawer is done animating.\n     */\n\n    this._animationEnd = new Subject();\n    /**\n     * Current state of the sidenav animation.\n     */\n\n    this._animationState = 'void';\n    /**\n     * Event emitted when the drawer open state is changed.\n     */\n\n    this.openedChange = // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter(\n    /* isAsync */\n\n    /* isAsync */\n    true);\n    /**\n     * Event emitted when the drawer's position changes.\n     */\n\n    this.onPositionChanged = new EventEmitter();\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n\n    this._modeChanged = new Subject();\n    this._opened = false;\n    this.openedChange.subscribe(function (opened) {\n      if (opened) {\n        if (_this3._doc) {\n          _this3._elementFocusedBeforeDrawerWasOpened =\n          /** @type {?} */\n          _this3._doc.activeElement;\n        }\n\n        if (_this3._isFocusTrapEnabled && _this3._focusTrap) {\n          _this3._trapFocus();\n        }\n      } else {\n        _this3._restoreFocus();\n      }\n    });\n    /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n\n    this._ngZone.runOutsideAngular(function () {\n      fromEvent(_this3._elementRef.nativeElement, 'keydown').pipe(filter(function (event) {\n        return event.keyCode === ESCAPE && !_this3.disableClose;\n      })).subscribe(function (event) {\n        return _this3._ngZone.run(function () {\n          _this3.close();\n\n          event.stopPropagation();\n        });\n      });\n    }); // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n\n\n    this._animationEnd.pipe(distinctUntilChanged(function (x, y) {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(function (event) {\n      var fromState = event.fromState,\n          toState = event.toState;\n\n      if (toState.indexOf('open') === 0 && fromState === 'void' || toState === 'void' && fromState.indexOf('open') === 0) {\n        _this3.openedChange.emit(_this3._opened);\n      }\n    });\n  }\n  /**\n   * The side that the drawer is attached to.\n   * @return {?}\n   */\n\n\n  _createClass(MatDrawer, [{\n    key: \"position\",\n    get: function get() {\n      return this._position;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      // Make sure we have a valid value.\n      value = value === 'end' ? 'end' : 'start';\n\n      if (value != this._position) {\n        this._position = value;\n        this.onPositionChanged.emit();\n      }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n\n  }, {\n    key: \"mode\",\n    get: function get() {\n      return this._mode;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._mode = value;\n\n      this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n\n  }, {\n    key: \"disableClose\",\n    get: function get() {\n      return this._disableClose;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * @return {?}\n     */\n\n  }, {\n    key: \"autoFocus\",\n    get: function get() {\n      return this._autoFocus;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._autoFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_openedStream\",\n    get: function get() {\n      return this.openedChange.pipe(filter(function (o) {\n        return o;\n      }), map(function () {}));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n\n  }, {\n    key: \"openedStart\",\n    get: function get() {\n      return this._animationStarted.pipe(filter(function (e) {\n        return e.fromState !== e.toState && e.toState.indexOf('open') === 0;\n      }), map(function () {}));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_closedStream\",\n    get: function get() {\n      return this.openedChange.pipe(filter(function (o) {\n        return !o;\n      }), map(function () {}));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n\n  }, {\n    key: \"closedStart\",\n    get: function get() {\n      return this._animationStarted.pipe(filter(function (e) {\n        return e.fromState !== e.toState && e.toState === 'void';\n      }), map(function () {}));\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isFocusTrapEnabled\",\n    get: function get() {\n      // The focus trap is only enabled when the drawer is open in any mode other than side.\n      return this.opened && this.mode !== 'side';\n    }\n    /**\n     * Traps focus inside the drawer.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_trapFocus\",\n    value: function _trapFocus() {\n      var _this4 = this;\n\n      if (!this.autoFocus) {\n        return;\n      }\n\n      this._focusTrap.focusInitialElementWhenReady().then(function (hasMovedFocus) {\n        // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n        // still works. We need to check that `focus` is a function due to Universal.\n        if (!hasMovedFocus && typeof _this4._elementRef.nativeElement.focus === 'function') {\n          _this4._elementRef.nativeElement.focus();\n        }\n      });\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_restoreFocus\",\n    value: function _restoreFocus() {\n      if (!this.autoFocus) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var activeEl = this._doc && this._doc.activeElement;\n\n      if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n        if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n          this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n        } else {\n          this._elementRef.nativeElement.blur();\n        }\n      }\n\n      this._elementFocusedBeforeDrawerWasOpened = null;\n      this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      this._focusTrap.enabled = this._isFocusTrapEnabled;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n      // drawers that are open by default. When we're on the server, we shouldn't enable the\n      // animations, because we don't want the drawer to animate the first time the user sees\n      // the page.\n      if (this._platform.isBrowser) {\n        this._enableAnimations = true;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._focusTrap) {\n        this._focusTrap.destroy();\n      }\n\n      this._animationStarted.complete();\n\n      this._animationEnd.complete();\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n\n  }, {\n    key: \"opened\",\n    get: function get() {\n      return this._opened;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this.toggle(coerceBooleanProperty(value));\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(openedVia) {\n      return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var _this5 = this;\n\n      var isOpen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.opened;\n      var openedVia = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'program';\n      this._opened = isOpen;\n\n      if (isOpen) {\n        this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        this._openedVia = openedVia;\n      } else {\n        this._animationState = 'void';\n\n        this._restoreFocus();\n      }\n\n      if (this._focusTrap) {\n        this._focusTrap.enabled = this._isFocusTrapEnabled;\n      }\n\n      return new Promise(function (resolve) {\n        _this5.openedChange.pipe(take(1)).subscribe(function (open) {\n          return resolve(open ? 'open' : 'close');\n        });\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_width\",\n    get: function get() {\n      return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n  }]);\n\n  return MatDrawer;\n}();\n\nMatDrawer.ɵfac = function MatDrawer_Factory(t) {\n  return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8));\n};\n\nMatDrawer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawer,\n  selectors: [[\"mat-drawer\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n  hostVars: 10,\n  hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) {\n        return ctx._animationStarted.next($event);\n      })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) {\n        return ctx._animationEnd.next($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\");\n    }\n  },\n  inputs: {\n    position: \"position\",\n    mode: \"mode\",\n    disableClose: \"disableClose\",\n    autoFocus: \"autoFocus\",\n    opened: \"opened\"\n  },\n  outputs: {\n    openedChange: \"openedChange\",\n    onPositionChanged: \"positionChanged\",\n    _openedStream: \"opened\",\n    openedStart: \"openedStart\",\n    _closedStream: \"closed\",\n    closedStart: \"closedStart\"\n  },\n  exportAs: [\"matDrawer\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"mat-drawer-inner-container\"]],\n  template: function MatDrawer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDrawer.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: FocusTrapFactory\n  }, {\n    type: FocusMonitor\n  }, {\n    type: Platform\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nMatDrawer.propDecorators = {\n  position: [{\n    type: Input\n  }],\n  mode: [{\n    type: Input\n  }],\n  disableClose: [{\n    type: Input\n  }],\n  autoFocus: [{\n    type: Input\n  }],\n  openedChange: [{\n    type: Output\n  }],\n  _openedStream: [{\n    type: Output,\n    args: ['opened']\n  }],\n  openedStart: [{\n    type: Output\n  }],\n  _closedStream: [{\n    type: Output,\n    args: ['closed']\n  }],\n  closedStart: [{\n    type: Output\n  }],\n  onPositionChanged: [{\n    type: Output,\n    args: ['positionChanged']\n  }],\n  opened: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer',\n        '[@transform]': '_animationState',\n        '(@transform.start)': '_animationStarted.next($event)',\n        '(@transform.done)': '_animationEnd.next($event)',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        'tabIndex': '-1'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.FocusTrapFactory\n    }, {\n      type: ɵngcc2.FocusMonitor\n    }, {\n      type: ɵngcc3.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    openedChange: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    opened: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\n\n\nvar MatDrawerContainer = /*#__PURE__*/function () {\n  /**\n   * @param {?} _dir\n   * @param {?} _element\n   * @param {?} _ngZone\n   * @param {?} _changeDetectorRef\n   * @param {?=} defaultAutosize\n   * @param {?=} _animationMode\n   */\n  function MatDrawerContainer(_dir, _element, _ngZone, _changeDetectorRef) {\n    var _this6 = this;\n\n    var defaultAutosize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    var _animationMode = arguments.length > 5 ? arguments[5] : undefined;\n\n    _classCallCheck(this, MatDrawerContainer);\n\n    this._dir = _dir;\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     */\n\n    this.backdropClick = new EventEmitter();\n    /**\n     * Emits when the component is destroyed.\n     */\n\n    this._destroyed = new Subject();\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     */\n\n    this._doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n\n    this._contentMargins = {\n      left: null,\n      right: null\n    };\n    this._contentMarginChanges = new Subject(); // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(function () {\n        _this6._validateDrawers();\n\n        _this6._updateContentMargins();\n      });\n    }\n\n    this._autosize = defaultAutosize;\n  }\n  /**\n   * The drawer child with the `start` position.\n   * @return {?}\n   */\n\n\n  _createClass(MatDrawerContainer, [{\n    key: \"start\",\n    get: function get() {\n      return this._start;\n    }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n\n  }, {\n    key: \"end\",\n    get: function get() {\n      return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n\n  }, {\n    key: \"autosize\",\n    get: function get() {\n      return this._autosize;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasBackdrop\",\n    get: function get() {\n      if (this._backdropOverride == null) {\n        return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n      }\n\n      return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n\n  }, {\n    key: \"scrollable\",\n    get: function get() {\n      return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this7 = this;\n\n      this._drawers.changes.pipe(startWith(null)).subscribe(function () {\n        _this7._validateDrawers();\n\n        _this7._drawers.forEach(function (drawer) {\n          _this7._watchDrawerToggle(drawer);\n\n          _this7._watchDrawerPosition(drawer);\n\n          _this7._watchDrawerMode(drawer);\n        });\n\n        if (!_this7._drawers.length || _this7._isDrawerOpen(_this7._start) || _this7._isDrawerOpen(_this7._end)) {\n          _this7._updateContentMargins();\n        }\n\n        _this7._changeDetectorRef.markForCheck();\n      });\n\n      this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n      // Arbitrary debounce time, less than a frame at 60fps\n      takeUntil(this._destroyed)).subscribe(function () {\n        return _this7._updateContentMargins();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._doCheckSubject.complete();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      this._drawers.forEach(function (drawer) {\n        return drawer.open();\n      });\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this._drawers.forEach(function (drawer) {\n        return drawer.close();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      var _this8 = this;\n\n      // If users opted into autosizing, do a check every change detection cycle.\n      if (this._autosize && this._isPushed()) {\n        // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(function () {\n          return _this8._doCheckSubject.next();\n        });\n      }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @param {?} drawer\n     * @return {?}\n     */\n\n  }, {\n    key: \"_watchDrawerToggle\",\n    value: function _watchDrawerToggle(drawer) {\n      var _this9 = this;\n\n      drawer._animationStarted.pipe(takeUntil(this._drawers.changes), filter(function (event) {\n        return event.fromState !== event.toState;\n      })).subscribe(function (event) {\n        // Set the transition class on the container so that the animations occur. This should not\n        // be set initially because animations should only be triggered via a change in state.\n        if (event.toState !== 'open-instant' && _this9._animationMode !== 'NoopAnimations') {\n          _this9._element.nativeElement.classList.add('mat-drawer-transition');\n        }\n\n        _this9._updateContentMargins();\n\n        _this9._changeDetectorRef.markForCheck();\n      });\n\n      if (drawer.mode !== 'side') {\n        drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(function () {\n          return _this9._setContainerClass(drawer.opened);\n        });\n      }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @param {?} drawer\n     * @return {?}\n     */\n\n  }, {\n    key: \"_watchDrawerPosition\",\n    value: function _watchDrawerPosition(drawer) {\n      var _this10 = this;\n\n      if (!drawer) {\n        return;\n      } // NOTE: We need to wait for the microtask queue to be empty before validating,\n      // since both drawers may be swapping positions at the same time.\n\n\n      drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(function () {\n        _this10._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(function () {\n          _this10._validateDrawers();\n        });\n      });\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @param {?} drawer\n     * @return {?}\n     */\n\n  }, {\n    key: \"_watchDrawerMode\",\n    value: function _watchDrawerMode(drawer) {\n      var _this11 = this;\n\n      if (drawer) {\n        drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(function () {\n          _this11._updateContentMargins();\n\n          _this11._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @param {?} isAdd\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setContainerClass\",\n    value: function _setContainerClass(isAdd) {\n      if (isAdd) {\n        this._element.nativeElement.classList.add('mat-drawer-opened');\n      } else {\n        this._element.nativeElement.classList.remove('mat-drawer-opened');\n      }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_validateDrawers\",\n    value: function _validateDrawers() {\n      var _this12 = this;\n\n      this._start = this._end = null; // Ensure that we have at most one start and one end drawer.\n\n      this._drawers.forEach(function (drawer) {\n        if (drawer.position == 'end') {\n          if (_this12._end != null) {\n            throwMatDuplicatedDrawerError('end');\n          }\n\n          _this12._end = drawer;\n        } else {\n          if (_this12._start != null) {\n            throwMatDuplicatedDrawerError('start');\n          }\n\n          _this12._start = drawer;\n        }\n      });\n\n      this._right = this._left = null; // Detect if we're LTR or RTL.\n\n      if (this._dir && this._dir.value === 'rtl') {\n        this._left = this._end;\n        this._right = this._start;\n      } else {\n        this._left = this._start;\n        this._right = this._end;\n      }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isPushed\",\n    value: function _isPushed() {\n      return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBackdropClicked\",\n    value: function _onBackdropClicked() {\n      this.backdropClick.emit();\n\n      this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_closeModalDrawer\",\n    value: function _closeModalDrawer() {\n      var _this13 = this;\n\n      // Close all open drawers where closing is not disabled and the mode is not `side`.\n      [this._start, this._end].filter(function (drawer) {\n        return drawer && !drawer.disableClose && _this13._canHaveBackdrop(drawer);\n      }).forEach(function (drawer) {\n        return (\n          /** @type {?} */\n          drawer.close()\n        );\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isShowingBackdrop\",\n    value: function _isShowingBackdrop() {\n      return this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start) || this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end);\n    }\n    /**\n     * @param {?} drawer\n     * @return {?}\n     */\n\n  }, {\n    key: \"_canHaveBackdrop\",\n    value: function _canHaveBackdrop(drawer) {\n      return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @param {?} drawer\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isDrawerOpen\",\n    value: function _isDrawerOpen(drawer) {\n      return drawer != null && drawer.opened;\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updateContentMargins\",\n    value: function _updateContentMargins() {\n      var _this14 = this;\n\n      /** @type {?} */\n      var left = 0;\n      /** @type {?} */\n\n      var right = 0;\n\n      if (this._left && this._left.opened) {\n        if (this._left.mode == 'side') {\n          left += this._left._width;\n        } else if (this._left.mode == 'push') {\n          /** @type {?} */\n          var width = this._left._width;\n          left += width;\n          right -= width;\n        }\n      }\n\n      if (this._right && this._right.opened) {\n        if (this._right.mode == 'side') {\n          right += this._right._width;\n        } else if (this._right.mode == 'push') {\n          /** @type {?} */\n          var _width = this._right._width;\n          right += _width;\n          left -= _width;\n        }\n      } // If either `right` or `left` is zero, don't set a style to the element. This\n      // allows users to specify a custom size via CSS class in SSR scenarios where the\n      // measured widths will always be zero. Note that we reset to `null` here, rather\n      // than below, in order to ensure that the types in the `if` below are consistent.\n\n\n      left = left ||\n      /** @type {?} */\n      null;\n      right = right ||\n      /** @type {?} */\n      null;\n\n      if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n        this._contentMargins = {\n          left: left,\n          right: right\n        }; // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n        // to do it only when something changed, otherwise we can end up hitting the zone too often.\n\n        this._ngZone.run(function () {\n          return _this14._contentMarginChanges.next(_this14._contentMargins);\n        });\n      }\n    }\n  }]);\n\n  return MatDrawerContainer;\n}();\n\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) {\n  return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContainer,\n  selectors: [[\"mat-drawer-container\"]],\n  contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 4);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    }\n  },\n  viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\"],\n  hostVars: 2,\n  hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  inputs: {\n    autosize: \"autosize\",\n    hasBackdrop: \"hasBackdrop\"\n  },\n  outputs: {\n    backdropClick: \"backdropClick\"\n  },\n  exportAs: [\"matDrawerContainer\"],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n  template: function MatDrawerContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  directives: [ɵngcc5.NgIf, MatDrawerContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDrawerContainer.ctorParameters = function () {\n  return [{\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatDrawerContainer.propDecorators = {\n  _drawers: [{\n    type: ContentChildren,\n    args: [MatDrawer]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatDrawerContent]\n  }],\n  _userContent: [{\n    type: ViewChild,\n    args: [MatDrawerContent]\n  }],\n  autosize: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  backdropClick: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-drawer\\\"></ng-content><ng-content select=\\\"mat-drawer-content\\\"></ng-content><mat-drawer-content *ngIf=\\\"!_content\\\"><ng-content></ng-content></mat-drawer-content>\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"],\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    backdropClick: [{\n      type: Output\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    _drawers: [{\n      type: ContentChildren,\n      args: [MatDrawer]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar MatSidenavContent = /*#__PURE__*/function (_MatDrawerContent) {\n  _inherits(MatSidenavContent, _MatDrawerContent);\n\n  var _super2 = _createSuper(MatSidenavContent);\n\n  /**\n   * @param {?} changeDetectorRef\n   * @param {?} container\n   * @param {?} elementRef\n   * @param {?} scrollDispatcher\n   * @param {?} ngZone\n   */\n  function MatSidenavContent(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n    _classCallCheck(this, MatSidenavContent);\n\n    return _super2.call(this, changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n  }\n\n  return MatSidenavContent;\n}(MatDrawerContent);\n\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) {\n  return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return MatSidenavContainer;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatSidenavContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContent,\n  selectors: [[\"mat-sidenav-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n  hostVars: 4,\n  hostBindings: function MatSidenavContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatSidenavContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatSidenavContent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: MatSidenavContainer,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return MatSidenavContainer;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: ScrollDispatcher\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatSidenavContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return MatSidenavContainer;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nvar MatSidenav = /*#__PURE__*/function (_MatDrawer) {\n  _inherits(MatSidenav, _MatDrawer);\n\n  var _super3 = _createSuper(MatSidenav);\n\n  function MatSidenav() {\n    var _this15;\n\n    _classCallCheck(this, MatSidenav);\n\n    _this15 = _super3.apply(this, arguments);\n    _this15._fixedInViewport = false;\n    _this15._fixedTopGap = 0;\n    _this15._fixedBottomGap = 0;\n    return _this15;\n  }\n  /**\n   * Whether the sidenav is fixed in the viewport.\n   * @return {?}\n   */\n\n\n  _createClass(MatSidenav, [{\n    key: \"fixedInViewport\",\n    get: function get() {\n      return this._fixedInViewport;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n\n  }, {\n    key: \"fixedTopGap\",\n    get: function get() {\n      return this._fixedTopGap;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n\n  }, {\n    key: \"fixedBottomGap\",\n    get: function get() {\n      return this._fixedBottomGap;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._fixedBottomGap = coerceNumberProperty(value);\n    }\n  }]);\n\n  return MatSidenav;\n}(MatDrawer);\n\nMatSidenav.ɵfac = /*@__PURE__*/function () {\n  var ɵMatSidenav_BaseFactory;\n  return function MatSidenav_Factory(t) {\n    return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav);\n  };\n}();\n\nMatSidenav.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenav,\n  selectors: [[\"mat-sidenav\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n  hostVars: 16,\n  hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatSidenav_animation_transform_start_HostBindingHandler($event) {\n        return ctx._animationStarted.next($event);\n      })(\"@transform.done\", function MatSidenav_animation_transform_done_HostBindingHandler($event) {\n        return ctx._animationEnd.next($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n      ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    }\n  },\n  inputs: {\n    fixedInViewport: \"fixedInViewport\",\n    fixedTopGap: \"fixedTopGap\",\n    fixedBottomGap: \"fixedBottomGap\"\n  },\n  exportAs: [\"matSidenav\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"mat-drawer-inner-container\"]],\n  template: function MatSidenav_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\nMatSidenav.propDecorators = {\n  fixedInViewport: [{\n    type: Input\n  }],\n  fixedTopGap: [{\n    type: Input\n  }],\n  fixedBottomGap: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        'tabIndex': '-1',\n        '[@transform]': '_animationState',\n        '(@transform.start)': '_animationStarted.next($event)',\n        '(@transform.done)': '_animationEnd.next($event)',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\n\nvar MatSidenavContainer = /*#__PURE__*/function (_MatDrawerContainer) {\n  _inherits(MatSidenavContainer, _MatDrawerContainer);\n\n  var _super4 = _createSuper(MatSidenavContainer);\n\n  function MatSidenavContainer() {\n    _classCallCheck(this, MatSidenavContainer);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return MatSidenavContainer;\n}(MatDrawerContainer);\n\nMatSidenavContainer.ɵfac = /*@__PURE__*/function () {\n  var ɵMatSidenavContainer_BaseFactory;\n  return function MatSidenavContainer_Factory(t) {\n    return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer);\n  };\n}();\n\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContainer,\n  selectors: [[\"mat-sidenav-container\"]],\n  contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 4);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n  hostVars: 2,\n  hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  exportAs: [\"matSidenavContainer\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]],\n  template: function MatSidenavContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatSidenavContainer.propDecorators = {\n  _drawers: [{\n    type: ContentChildren,\n    args: [MatSidenav]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatSidenavContent]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-sidenav\\\"></ng-content><ng-content select=\\\"mat-sidenav-content\\\"></ng-content><mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable><ng-content></ng-content></mat-sidenav-content>\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"],\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    _drawers: [{\n      type: ContentChildren,\n      args: [MatSidenav]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar MatSidenavModule = function MatSidenavModule() {\n  _classCallCheck(this, MatSidenavModule);\n};\n\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) {\n  return new (t || MatSidenavModule)();\n};\n\nMatSidenavModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSidenavModule\n});\nMatSidenavModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule, ScrollingModule, PlatformModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, ScrollingModule, PlatformModule],\n      exports: [MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      declarations: [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, {\n    declarations: function declarations() {\n      return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule, ScrollingModule, PlatformModule];\n    },\n    exports: function exports() {\n      return [MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatSidenavModule, throwMatDuplicatedDrawerError, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MAT_DRAWER_DEFAULT_AUTOSIZE, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer, matDrawerAnimations }; //# sourceMappingURL=sidenav.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/AntoinedePertat_6_240521/frontend/node_modules/@angular/material/__ivy_ngcc__/esm2015/sidenav.js"],"names":["animate","state","style","transition","trigger","FocusMonitor","FocusTrapFactory","Directionality","coerceBooleanProperty","coerceNumberProperty","ESCAPE","Platform","PlatformModule","CdkScrollable","ScrollDispatcher","ScrollingModule","DOCUMENT","CommonModule","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","ContentChildren","ElementRef","EventEmitter","forwardRef","Inject","InjectionToken","Input","NgZone","Optional","Output","ViewChild","ViewEncapsulation","NgModule","fromEvent","merge","Subject","debounceTime","filter","map","startWith","take","takeUntil","distinctUntilChanged","ANIMATION_MODULE_TYPE","MatCommonModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","MatDrawerContainer_div_0_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatDrawerContainer_div_0_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵnextContext","_onBackdropClicked","ɵɵelementEnd","ctx_r0","ɵɵclassProp","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","ɵɵprojection","_c1","_c2","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","_c3","_c4","_c5","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MatDrawerContent","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","_contentMarginChanges","subscribe","markForCheck","ɵfac","MatDrawerContent_Factory","t","ɵɵdirectiveInject","MatDrawerContainer","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","ɵɵstyleProp","_contentMargins","left","right","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","ɵɵprojectionDef","encapsulation","changeDetection","ctorParameters","decorators","args","ngDevMode","ɵsetClassMetadata","selector","host","OnPush","None","MatDrawer","_elementRef","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_autoFocus","_animationStarted","_animationEnd","_animationState","openedChange","onPositionChanged","_modeChanged","_opened","opened","activeElement","_isFocusTrapEnabled","_focusTrap","_trapFocus","_restoreFocus","runOutsideAngular","nativeElement","pipe","event","keyCode","disableClose","run","close","stopPropagation","x","y","fromState","toState","indexOf","emit","value","next","o","e","mode","autoFocus","focusInitialElementWhenReady","then","hasMovedFocus","focus","activeEl","contains","HTMLElement","focusVia","_openedVia","blur","create","enabled","isBrowser","destroy","complete","toggle","openedVia","isOpen","Promise","resolve","open","offsetWidth","MatDrawer_Factory","MatDrawer_HostBindings","ɵɵsyntheticHostListener","MatDrawer_animation_transform_start_HostBindingHandler","$event","MatDrawer_animation_transform_done_HostBindingHandler","ɵɵattribute","ɵɵsyntheticHostProperty","inputs","outputs","_openedStream","openedStart","_closedStream","closedStart","exportAs","consts","MatDrawer_Template","data","animation","undefined","propDecorators","animations","_dir","_element","defaultAutosize","_animationMode","backdropClick","_destroyed","_doCheckSubject","change","_validateDrawers","_updateContentMargins","_autosize","_start","_end","_backdropOverride","_userContent","_content","_drawers","changes","forEach","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","_isPushed","classList","add","_setContainerClass","onMicrotaskEmpty","asObservable","isAdd","remove","_right","_left","_closeModalDrawer","_canHaveBackdrop","_width","width","MatDrawerContainer_Factory","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatDrawerContainer_Query","ɵɵviewQuery","MatDrawerContainer_HostBindings","autosize","hasBackdrop","MatDrawerContainer_Template","ɵɵtemplate","ɵɵproperty","ɵɵadvance","directives","NgIf","styles","String","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","MatSidenav_Factory","ɵɵgetInheritedFactory","MatSidenav_HostBindings","MatSidenav_animation_transform_start_HostBindingHandler","MatSidenav_animation_transform_done_HostBindingHandler","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_Factory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, NgZone, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { debounceTime, filter, map, startWith, take, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Animations used by the Material drawers.\n * \\@docs-private\n  @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\";\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** *\n * Configures whether drawers should use auto sizing by default.\n  @type {?} */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._autoFocus = true;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ /* isAsync */ true);\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this._opened = false;\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = /** @type {?} */ (this._doc.activeElement);\n                }\n                if (this._isFocusTrapEnabled && this._focusTrap) {\n                    this._trapFocus();\n                }\n            }\n            else {\n                this._restoreFocus();\n            }\n        });\n        /**\n             * Listen to `keydown` events outside the zone so that change detection is not run every\n             * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n             * and we don't have close disabled.\n             */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * @return {?}\n     */\n    get autoFocus() { return this._autoFocus; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter(o => o), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter(o => !o), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), map(() => { }));\n    }\n    /**\n     * @return {?}\n     */\n    get _isFocusTrapEnabled() {\n        // The focus trap is only enabled when the drawer is open in any mode other than side.\n        return this.opened && this.mode !== 'side';\n    }\n    /**\n     * Traps focus inside the drawer.\n     * @return {?}\n     */\n    _trapFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._focusTrap.enabled = this._isFocusTrapEnabled;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        if (this._focusTrap) {\n            this._focusTrap.enabled = this._isFocusTrapEnabled;\n        }\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDrawer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 10, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStarted.next($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationEnd.next($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\");\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    opened: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    '[@transform]': '_animationState',\n                    '(@transform.start)': '_animationStarted.next($event)',\n                    '(@transform.done)': '_animationEnd.next($event)',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], opened: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this._updateContentMargins();\n            });\n        }\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this._updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe(() => this._updateContentMargins());\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._doCheckSubject.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(takeUntil(this._drawers.changes), filter((event) => event.fromState !== event.toState))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this._updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this._updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        if (isAdd) {\n            this._element.nativeElement.classList.add('mat-drawer-opened');\n        }\n        else {\n            this._element.nativeElement.classList.remove('mat-drawer-opened');\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => /** @type {?} */ ((drawer)).close());\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    _updateContentMargins() {\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                let width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                let width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || /** @type {?} */ ((null));\n        right = right || /** @type {?} */ ((null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _drawers: [{ type: ContentChildren, args: [MatDrawer,] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-drawer\\\"></ng-content><ng-content select=\\\"mat-drawer-content\\\"></ng-content><mat-drawer-content *ngIf=\\\"!_content\\\"><ng-content></ng-content></mat-drawer-content>\",\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"],\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _drawers: [{\n            type: ContentChildren,\n            args: [MatDrawer]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenav_BaseFactory; return function MatSidenav_Factory(t) { return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav); }; }();\nMatSidenav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 16, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatSidenav_animation_transform_start_HostBindingHandler($event) { return ctx._animationStarted.next($event); })(\"@transform.done\", function MatSidenav_animation_transform_done_HostBindingHandler($event) { return ctx._animationEnd.next($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    '[@transform]': '_animationState',\n                    '(@transform.start)': '_animationStarted.next($event)',\n                    '(@transform.done)': '_animationEnd.next($event)',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenavContainer_BaseFactory; return function MatSidenavContainer_Factory(t) { return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer); }; }();\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _drawers: [{ type: ContentChildren, args: [MatSidenav,] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-sidenav\\\"></ng-content><ng-content select=\\\"mat-sidenav-content\\\"></ng-content><mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable><ng-content></ng-content></mat-sidenav-content>\",\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"],\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None }]\n    }], null, { _drawers: [{\n            type: ContentChildren,\n            args: [MatSidenav]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); };\nMatSidenavModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            ScrollingModule,\n            PlatformModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule]; }, exports: function () { return [MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatSidenavModule, throwMatDuplicatedDrawerError, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MAT_DRAWER_DEFAULT_AUTOSIZE, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer, matDrawerAnimations };\n\n//# sourceMappingURL=sidenav.js.map"]},"metadata":{},"sourceType":"module"}