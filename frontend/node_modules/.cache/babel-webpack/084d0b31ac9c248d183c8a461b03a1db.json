{"ast":null,"code":"import _classCallCheck from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nexport var Observable = /*#__PURE__*/function () {\n  function Observable(subscribe) {\n    _classCallCheck(this, Observable);\n\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  _createClass(Observable, [{\n    key: \"lift\",\n    value: function lift(operator) {\n      var observable = new Observable();\n      observable.source = this;\n      observable.operator = operator;\n      return observable;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(observerOrNext, error, complete) {\n      var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        this._deprecatedSyncErrorSubscribe(subscriber);\n      } else {\n        var operator = this.operator,\n            source = this.source;\n        subscriber.add(operator ? operator.call(subscriber, source) : source ? this._subscribe(subscriber) : this._trySubscribe(subscriber));\n      }\n\n      return subscriber;\n    }\n  }, {\n    key: \"_deprecatedSyncErrorSubscribe\",\n    value: function _deprecatedSyncErrorSubscribe(subscriber) {\n      var localSubscriber = subscriber;\n      localSubscriber._syncErrorHack_isSubscribing = true;\n      var operator = this.operator;\n\n      if (operator) {\n        subscriber.add(operator.call(subscriber, this.source));\n      } else {\n        try {\n          subscriber.add(this._subscribe(subscriber));\n        } catch (err) {\n          localSubscriber.__syncError = err;\n        }\n      }\n\n      var dest = localSubscriber;\n\n      while (dest) {\n        if ('__syncError' in dest) {\n          try {\n            throw dest.__syncError;\n          } finally {\n            subscriber.unsubscribe();\n          }\n        }\n\n        dest = dest.destination;\n      }\n\n      localSubscriber._syncErrorHack_isSubscribing = false;\n    }\n  }, {\n    key: \"_trySubscribe\",\n    value: function _trySubscribe(sink) {\n      try {\n        return this._subscribe(sink);\n      } catch (err) {\n        sink.error(err);\n      }\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(next, promiseCtor) {\n      var _this = this;\n\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor(function (resolve, reject) {\n        var subscription;\n        subscription = _this.subscribe(function (value) {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\n          }\n        }, reject, resolve);\n      });\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var _a;\n\n      return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    }\n  }, {\n    key: Symbol_observable,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"pipe\",\n    value: function pipe() {\n      for (var _len = arguments.length, operations = new Array(_len), _key = 0; _key < _len; _key++) {\n        operations[_key] = arguments[_key];\n      }\n\n      return operations.length ? pipeFromArray(operations)(this) : this;\n    }\n  }, {\n    key: \"toPromise\",\n    value: function toPromise(promiseCtor) {\n      var _this2 = this;\n\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor(function (resolve, reject) {\n        var value;\n\n        _this2.subscribe(function (x) {\n          return value = x;\n        }, function (err) {\n          return reject(err);\n        }, function () {\n          return resolve(value);\n        });\n      });\n    }\n  }]);\n\n  return Observable;\n}();\n\nObservable.create = function (subscribe) {\n  return new Observable(subscribe);\n};\n\nfunction getPromiseCtor(promiseCtor) {\n  var _a;\n\n  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\n\nfunction isObserver(value) {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber(value) {\n  return value && value instanceof Subscriber || isObserver(value) && isSubscription(value);\n} //# sourceMappingURL=Observable.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/rxjs/dist/esm/internal/Observable.js"],"names":["SafeSubscriber","Subscriber","isSubscription","observable","Symbol_observable","pipeFromArray","config","isFunction","Observable","subscribe","_subscribe","operator","source","observerOrNext","error","complete","subscriber","isSubscriber","useDeprecatedSynchronousErrorHandling","_deprecatedSyncErrorSubscribe","add","call","_trySubscribe","localSubscriber","_syncErrorHack_isSubscribing","err","__syncError","dest","unsubscribe","destination","sink","next","promiseCtor","getPromiseCtor","resolve","reject","subscription","value","_a","operations","length","x","create","Promise","isObserver"],"mappings":"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","sourcesContent":["import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nexport class Observable {\n    constructor(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            this._deprecatedSyncErrorSubscribe(subscriber);\n        }\n        else {\n            const { operator, source } = this;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        this._subscribe(subscriber)\n                    :\n                        this._trySubscribe(subscriber));\n        }\n        return subscriber;\n    }\n    _deprecatedSyncErrorSubscribe(subscriber) {\n        const localSubscriber = subscriber;\n        localSubscriber._syncErrorHack_isSubscribing = true;\n        const { operator } = this;\n        if (operator) {\n            subscriber.add(operator.call(subscriber, this.source));\n        }\n        else {\n            try {\n                subscriber.add(this._subscribe(subscriber));\n            }\n            catch (err) {\n                localSubscriber.__syncError = err;\n            }\n        }\n        let dest = localSubscriber;\n        while (dest) {\n            if ('__syncError' in dest) {\n                try {\n                    throw dest.__syncError;\n                }\n                finally {\n                    subscriber.unsubscribe();\n                }\n            }\n            dest = dest.destination;\n        }\n        localSubscriber._syncErrorHack_isSubscribing = false;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let subscription;\n            subscription = this.subscribe((value) => {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\n                }\n            }, reject, resolve);\n        });\n    }\n    _subscribe(subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        return operations.length ? pipeFromArray(operations)(this) : this;\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => (value = x), (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map"]},"metadata":{},"sourceType":"module"}