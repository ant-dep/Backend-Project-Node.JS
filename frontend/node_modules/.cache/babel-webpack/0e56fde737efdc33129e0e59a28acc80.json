{"ast":null,"code":"import _createClass from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ChangeDetectionStrategy, ElementRef, Inject, Input, Output, EventEmitter, Optional, NgZone, ViewEncapsulation, ViewChild, InjectionToken, inject, NgModule } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"primaryValueBar\"];\n\nvar MatProgressBarBase =\n/**\n * @param {?} _elementRef\n */\nfunction MatProgressBarBase(_elementRef) {\n  _classCallCheck(this, MatProgressBarBase);\n\n  this._elementRef = _elementRef;\n};\n/** @type {?} */\n\n\nvar _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/** *\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n  @type {?} */\n\n\nvar MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', {\n  providedIn: 'root',\n  factory: MAT_PROGRESS_BAR_LOCATION_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n  /** @type {?} */\n  var _document = inject(DOCUMENT);\n\n  return {\n    // Note that this needs to be a function, because Angular will only instantiate\n    // this provider once, but we want the current location on each call.\n    getPathname: function getPathname() {\n      return _document && _document.location && _document.location.pathname || '';\n    }\n  };\n}\n/** *\n * Counter used to generate unique IDs for progress bars.\n  @type {?} */\n\n\nvar progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\n\nvar MatProgressBar = /*#__PURE__*/function (_MatProgressBarMixinB) {\n  _inherits(MatProgressBar, _MatProgressBarMixinB);\n\n  var _super = _createSuper(MatProgressBar);\n\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   * @param {?=} _animationMode\n   * @param {?=} location\n   */\n  function MatProgressBar(_elementRef, _ngZone, _animationMode,\n  /**\n  * @deprecated `location` parameter to be made required.\n  * @breaking-change 8.0.0\n  */\n  location) {\n    var _this;\n\n    _classCallCheck(this, MatProgressBar);\n\n    _this = _super.call(this, _elementRef);\n    _this._elementRef = _elementRef;\n    _this._ngZone = _ngZone;\n    _this._animationMode = _animationMode;\n    /**\n     * Flag that indicates whether NoopAnimations mode is set to true.\n     */\n\n    _this._isNoopAnimation = false;\n    _this._value = 0;\n    _this._bufferValue = 0;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     */\n\n    _this.animationEnd = new EventEmitter();\n    /**\n     * Reference to animation end subscription to be unsubscribed on destroy.\n     */\n\n    _this._animationEndSubscription = Subscription.EMPTY;\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     */\n\n    _this.mode = 'determinate';\n    /**\n     * ID of the progress bar.\n     */\n\n    _this.progressbarId = \"mat-progress-bar-\".concat(progressbarId++);\n    /** @type {?} */\n\n    var path = location ? location.getPathname().split('#')[0] : '';\n    _this._rectangleFillValue = \"url('\".concat(path, \"#\").concat(_this.progressbarId, \"')\");\n    _this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    return _this;\n  }\n  /**\n   * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n   * @return {?}\n   */\n\n\n  _createClass(MatProgressBar, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    ,\n    set: function set(v) {\n      this._value = clamp(v || 0); // When noop animation is set to true, trigger animationEnd directly.\n\n      if (this._isNoopAnimation) {\n        this.emitAnimationEnd();\n      }\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n\n  }, {\n    key: \"bufferValue\",\n    get: function get() {\n      return this._bufferValue;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    ,\n    set: function set(v) {\n      this._bufferValue = clamp(v || 0);\n    }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_primaryTransform\",\n    value: function _primaryTransform() {\n      /** @type {?} */\n      var scale = this.value / 100;\n      return {\n        transform: \"scaleX(\".concat(scale, \")\")\n      };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_bufferTransform\",\n    value: function _bufferTransform() {\n      if (this.mode === 'buffer') {\n        /** @type {?} */\n        var scale = this.bufferValue / 100;\n        return {\n          transform: \"scaleX(\".concat(scale, \")\")\n        };\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      if (!this._isNoopAnimation) {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(function () {\n          _this2._animationEndSubscription = fromEvent(_this2._primaryValueBar.nativeElement, 'transitionend').pipe(filter(function (e) {\n            return e.target === _this2._primaryValueBar.nativeElement;\n          })).subscribe(function (_) {\n            return _this2._ngZone.run(function () {\n              return _this2.emitAnimationEnd();\n            });\n          });\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._animationEndSubscription.unsubscribe();\n    }\n    /**\n     * Emit an animationEnd event if in determinate or buffer mode.\n     * @return {?}\n     */\n\n  }, {\n    key: \"emitAnimationEnd\",\n    value: function emitAnimationEnd() {\n      if (this.mode === 'determinate' || this.mode === 'buffer') {\n        this.animationEnd.next({\n          value: this.value\n        });\n      }\n    }\n  }]);\n\n  return MatProgressBar;\n}(_MatProgressBarMixinBase);\n\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) {\n  return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8));\n};\n\nMatProgressBar.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatProgressBar,\n  selectors: [[\"mat-progress-bar\"]],\n  viewQuery: function MatProgressBar_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"mat-progress-bar\"],\n  hostVars: 4,\n  hostBindings: function MatProgressBar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.value)(\"mode\", ctx.mode);\n      ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    mode: \"mode\",\n    value: \"value\",\n    bufferValue: \"bufferValue\"\n  },\n  outputs: {\n    animationEnd: \"animationEnd\"\n  },\n  exportAs: [\"matProgressBar\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 9,\n  vars: 4,\n  consts: [[\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]],\n  template: function MatProgressBar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵnamespaceSVG();\n      ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"defs\");\n      ɵngcc0.ɵɵelementStart(2, \"pattern\", 1);\n      ɵngcc0.ɵɵelement(3, \"circle\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(4, \"rect\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵnamespaceHTML();\n      ɵngcc0.ɵɵelement(5, \"div\", 4);\n      ɵngcc0.ɵɵelement(6, \"div\", 5, 6);\n      ɵngcc0.ɵɵelement(8, \"div\", 7);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    }\n  },\n  directives: [ɵngcc1.NgStyle],\n  styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-background{display:none}}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:none;transition:none}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatProgressBar.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_PROGRESS_BAR_LOCATION]\n    }]\n  }];\n};\n\nMatProgressBar.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  bufferValue: [{\n    type: Input\n  }],\n  _primaryValueBar: [{\n    type: ViewChild,\n    args: ['primaryValueBar']\n  }],\n  animationEnd: [{\n    type: Output\n  }],\n  mode: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-progress-bar',\n      exportAs: 'matProgressBar',\n      host: {\n        'role': 'progressbar',\n        'aria-valuemin': '0',\n        'aria-valuemax': '100',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.mode]': 'mode',\n        'class': 'mat-progress-bar',\n        '[class._mat-animation-noopable]': \"_isNoopAnimation\"\n      },\n      inputs: ['color'],\n      template: \"<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\"><defs><pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\"><circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/></pattern></defs><rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/></svg><div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div><div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div><div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\",\n      styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-background{display:none}}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:none;transition:none}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\"],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_PROGRESS_BAR_LOCATION]\n      }]\n    }];\n  }, {\n    animationEnd: [{\n      type: Output\n    }],\n    mode: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    bufferValue: [{\n      type: Input\n    }],\n    _primaryValueBar: [{\n      type: ViewChild,\n      args: ['primaryValueBar']\n    }]\n  });\n})();\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\n\n\nfunction clamp(v) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n  return Math.max(min, Math.min(max, v));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar MatProgressBarModule = function MatProgressBarModule() {\n  _classCallCheck(this, MatProgressBarModule);\n};\n\nMatProgressBarModule.ɵfac = function MatProgressBarModule_Factory(t) {\n  return new (t || MatProgressBarModule)();\n};\n\nMatProgressBarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatProgressBarModule\n});\nMatProgressBarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule],\n      exports: [MatProgressBar, MatCommonModule],\n      declarations: [MatProgressBar]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, {\n    declarations: function declarations() {\n      return [MatProgressBar];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatProgressBar, MatCommonModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatProgressBarModule, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBarBase, _MatProgressBarMixinBase, MAT_PROGRESS_BAR_LOCATION, MatProgressBar }; //# sourceMappingURL=progress-bar.js.map","map":{"version":3,"sources":["/Users/adepertat/Dropbox/ECOLES/Openclassroom/P6_de_Pertat_Antoine/dwj-projet6/node_modules/@angular/material/__ivy_ngcc__/esm2015/progress-bar.js"],"names":["Component","ChangeDetectionStrategy","ElementRef","Inject","Input","Output","EventEmitter","Optional","NgZone","ViewEncapsulation","ViewChild","InjectionToken","inject","NgModule","fromEvent","Subscription","filter","ANIMATION_MODULE_TYPE","mixinColor","MatCommonModule","DOCUMENT","CommonModule","ɵngcc0","ɵngcc1","_c0","MatProgressBarBase","_elementRef","_MatProgressBarMixinBase","MAT_PROGRESS_BAR_LOCATION","providedIn","factory","MAT_PROGRESS_BAR_LOCATION_FACTORY","_document","getPathname","location","pathname","progressbarId","MatProgressBar","_ngZone","_animationMode","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","EMPTY","mode","path","split","_rectangleFillValue","v","clamp","emitAnimationEnd","scale","value","transform","bufferValue","runOutsideAngular","_primaryValueBar","nativeElement","pipe","e","target","subscribe","_","run","unsubscribe","next","ɵfac","MatProgressBar_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatProgressBar_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatProgressBar_HostBindings","ɵɵattribute","ɵɵclassProp","inputs","color","outputs","exportAs","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatProgressBar_Template","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵadvance","ɵɵproperty","_bufferTransform","_primaryTransform","directives","NgStyle","styles","encapsulation","changeDetection","ctorParameters","String","decorators","args","undefined","propDecorators","ngDevMode","ɵsetClassMetadata","selector","host","OnPush","None","min","max","Math","MatProgressBarModule","MatProgressBarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ChangeDetectionStrategy, ElementRef, Inject, Input, Output, EventEmitter, Optional, NgZone, ViewEncapsulation, ViewChild, InjectionToken, inject, NgModule } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/** *\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n  @type {?} */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    return {\n        // Note that this needs to be a function, because Angular will only instantiate\n        // this provider once, but we want the current location on each call.\n        getPathname: () => (_document && _document.location && _document.location.pathname) || ''\n    };\n}\n/** *\n * Counter used to generate unique IDs for progress bars.\n  @type {?} */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, /**\n                   * @deprecated `location` parameter to be made required.\n                   * @breaking-change 8.0.0\n                   */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(v || 0);\n        // When noop animation is set to true, trigger animationEnd directly.\n        if (this._isNoopAnimation) {\n            this.emitAnimationEnd();\n        }\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this._isNoopAnimation) {\n            // Run outside angular so change detection didn't get triggered on every transition end\n            // instead only on the animation that we care about (primary value bar's transitionend)\n            this._ngZone.runOutsideAngular((() => {\n                this._animationEndSubscription =\n                    fromEvent(this._primaryValueBar.nativeElement, 'transitionend')\n                        .pipe(filter(((e) => e.target === this._primaryValueBar.nativeElement)))\n                        .subscribe(_ => this._ngZone.run(() => this.emitAnimationEnd()));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n    /**\n     * Emit an animationEnd event if in determinate or buffer mode.\n     * @return {?}\n     */\n    emitAnimationEnd() {\n        if (this.mode === 'determinate' || this.mode === 'buffer') {\n            this.animationEnd.next({ value: this.value });\n        }\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 4, consts: [[\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"defs\");\n        ɵngcc0.ɵɵelementStart(2, \"pattern\", 1);\n        ɵngcc0.ɵɵelement(3, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"rect\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"div\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-background{display:none}}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:none;transition:none}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{ selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': `_isNoopAnimation`\n                },\n                inputs: ['color'],\n                template: \"<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\"><defs><pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\"><circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/></pattern></defs><rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/></svg><div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div><div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div><div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\",\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-background{display:none}}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}@media screen and (-ms-high-contrast:active){.mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:none;transition:none}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\"],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵfac = function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); };\nMatProgressBarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatProgressBarModule, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBarBase, _MatProgressBarMixinBase, MAT_PROGRESS_BAR_LOCATION, MatProgressBar };\n\n//# sourceMappingURL=progress-bar.js.map"]},"metadata":{},"sourceType":"module"}